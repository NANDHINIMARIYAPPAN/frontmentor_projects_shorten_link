"use strict"; (self.webpackChunkfrontend_mentor_projects = self.webpackChunkfrontend_mentor_projects || []).push([[179], { 752: () => { function ne(e) { return "function" == typeof e } function So(e) { const n = e(r => { Error.call(r), r.stack = (new Error).stack }); return n.prototype = Object.create(Error.prototype), n.prototype.constructor = n, n } const os = So(e => function (n) { e(this), this.message = n ? `${n.length} errors occurred during unsubscription:\n${n.map((r, o) => `${o + 1}) ${r.toString()}`).join("\n  ")}` : "", this.name = "UnsubscriptionError", this.errors = n }); function Ao(e, t) { if (e) { const n = e.indexOf(t); 0 <= n && e.splice(n, 1) } } class rt { constructor(t) { this.initialTeardown = t, this.closed = !1, this._parentage = null, this._finalizers = null } unsubscribe() { let t; if (!this.closed) { this.closed = !0; const { _parentage: n } = this; if (n) if (this._parentage = null, Array.isArray(n)) for (const i of n) i.remove(this); else n.remove(this); const { initialTeardown: r } = this; if (ne(r)) try { r() } catch (i) { t = i instanceof os ? i.errors : [i] } const { _finalizers: o } = this; if (o) { this._finalizers = null; for (const i of o) try { ch(i) } catch (s) { t = t ?? [], s instanceof os ? t = [...t, ...s.errors] : t.push(s) } } if (t) throw new os(t) } } add(t) { var n; if (t && t !== this) if (this.closed) ch(t); else { if (t instanceof rt) { if (t.closed || t._hasParent(this)) return; t._addParent(this) } (this._finalizers = null !== (n = this._finalizers) && void 0 !== n ? n : []).push(t) } } _hasParent(t) { const { _parentage: n } = this; return n === t || Array.isArray(n) && n.includes(t) } _addParent(t) { const { _parentage: n } = this; this._parentage = Array.isArray(n) ? (n.push(t), n) : n ? [n, t] : t } _removeParent(t) { const { _parentage: n } = this; n === t ? this._parentage = null : Array.isArray(n) && Ao(n, t) } remove(t) { const { _finalizers: n } = this; n && Ao(n, t), t instanceof rt && t._removeParent(this) } } rt.EMPTY = (() => { const e = new rt; return e.closed = !0, e })(); const ah = rt.EMPTY; function uh(e) { return e instanceof rt || e && "closed" in e && ne(e.remove) && ne(e.add) && ne(e.unsubscribe) } function ch(e) { ne(e) ? e() : e.unsubscribe() } const Un = { onUnhandledError: null, onStoppedNotification: null, Promise: void 0, useDeprecatedSynchronousErrorHandling: !1, useDeprecatedNextContext: !1 }, is = { setTimeout(e, t, ...n) { const { delegate: r } = is; return r?.setTimeout ? r.setTimeout(e, t, ...n) : setTimeout(e, t, ...n) }, clearTimeout(e) { const { delegate: t } = is; return (t?.clearTimeout || clearTimeout)(e) }, delegate: void 0 }; function lh(e) { is.setTimeout(() => { const { onUnhandledError: t } = Un; if (!t) throw e; t(e) }) } function Nu() { } const eb = Pu("C", void 0, void 0); function Pu(e, t, n) { return { kind: e, value: t, error: n } } let zn = null; function ss(e) { if (Un.useDeprecatedSynchronousErrorHandling) { const t = !zn; if (t && (zn = { errorThrown: !1, error: null }), e(), t) { const { errorThrown: n, error: r } = zn; if (zn = null, n) throw r } } else e() } class xu extends rt { constructor(t) { super(), this.isStopped = !1, t ? (this.destination = t, uh(t) && t.add(this)) : this.destination = ab } static create(t, n, r) { return new To(t, n, r) } next(t) { this.isStopped ? Fu(function nb(e) { return Pu("N", e, void 0) }(t), this) : this._next(t) } error(t) { this.isStopped ? Fu(function tb(e) { return Pu("E", void 0, e) }(t), this) : (this.isStopped = !0, this._error(t)) } complete() { this.isStopped ? Fu(eb, this) : (this.isStopped = !0, this._complete()) } unsubscribe() { this.closed || (this.isStopped = !0, super.unsubscribe(), this.destination = null) } _next(t) { this.destination.next(t) } _error(t) { try { this.destination.error(t) } finally { this.unsubscribe() } } _complete() { try { this.destination.complete() } finally { this.unsubscribe() } } } const ob = Function.prototype.bind; function Ru(e, t) { return ob.call(e, t) } class ib { constructor(t) { this.partialObserver = t } next(t) { const { partialObserver: n } = this; if (n.next) try { n.next(t) } catch (r) { as(r) } } error(t) { const { partialObserver: n } = this; if (n.error) try { n.error(t) } catch (r) { as(r) } else as(t) } complete() { const { partialObserver: t } = this; if (t.complete) try { t.complete() } catch (n) { as(n) } } } class To extends xu { constructor(t, n, r) { let o; if (super(), ne(t) || !t) o = { next: t ?? void 0, error: n ?? void 0, complete: r ?? void 0 }; else { let i; this && Un.useDeprecatedNextContext ? (i = Object.create(t), i.unsubscribe = () => this.unsubscribe(), o = { next: t.next && Ru(t.next, i), error: t.error && Ru(t.error, i), complete: t.complete && Ru(t.complete, i) }) : o = t } this.destination = new ib(o) } } function as(e) { Un.useDeprecatedSynchronousErrorHandling ? function rb(e) { Un.useDeprecatedSynchronousErrorHandling && zn && (zn.errorThrown = !0, zn.error = e) }(e) : lh(e) } function Fu(e, t) { const { onStoppedNotification: n } = Un; n && is.setTimeout(() => n(e, t)) } const ab = { closed: !0, next: Nu, error: function sb(e) { throw e }, complete: Nu }, ku = "function" == typeof Symbol && Symbol.observable || "@@observable"; function Dn(e) { return e } function dh(e) { return 0 === e.length ? Dn : 1 === e.length ? e[0] : function (n) { return e.reduce((r, o) => o(r), n) } } let me = (() => { class e { constructor(n) { n && (this._subscribe = n) } lift(n) { const r = new e; return r.source = this, r.operator = n, r } subscribe(n, r, o) { const i = function lb(e) { return e && e instanceof xu || function cb(e) { return e && ne(e.next) && ne(e.error) && ne(e.complete) }(e) && uh(e) }(n) ? n : new To(n, r, o); return ss(() => { const { operator: s, source: a } = this; i.add(s ? s.call(i, a) : a ? this._subscribe(i) : this._trySubscribe(i)) }), i } _trySubscribe(n) { try { return this._subscribe(n) } catch (r) { n.error(r) } } forEach(n, r) { return new (r = fh(r))((o, i) => { const s = new To({ next: a => { try { n(a) } catch (u) { i(u), s.unsubscribe() } }, error: i, complete: o }); this.subscribe(s) }) } _subscribe(n) { var r; return null === (r = this.source) || void 0 === r ? void 0 : r.subscribe(n) } [ku]() { return this } pipe(...n) { return dh(n)(this) } toPromise(n) { return new (n = fh(n))((r, o) => { let i; this.subscribe(s => i = s, s => o(s), () => r(i)) }) } } return e.create = t => new e(t), e })(); function fh(e) { var t; return null !== (t = e ?? Un.Promise) && void 0 !== t ? t : Promise } const db = So(e => function () { e(this), this.name = "ObjectUnsubscribedError", this.message = "object unsubscribed" }); let It = (() => { class e extends me { constructor() { super(), this.closed = !1, this.currentObservers = null, this.observers = [], this.isStopped = !1, this.hasError = !1, this.thrownError = null } lift(n) { const r = new hh(this, this); return r.operator = n, r } _throwIfClosed() { if (this.closed) throw new db } next(n) { ss(() => { if (this._throwIfClosed(), !this.isStopped) { this.currentObservers || (this.currentObservers = Array.from(this.observers)); for (const r of this.currentObservers) r.next(n) } }) } error(n) { ss(() => { if (this._throwIfClosed(), !this.isStopped) { this.hasError = this.isStopped = !0, this.thrownError = n; const { observers: r } = this; for (; r.length;)r.shift().error(n) } }) } complete() { ss(() => { if (this._throwIfClosed(), !this.isStopped) { this.isStopped = !0; const { observers: n } = this; for (; n.length;)n.shift().complete() } }) } unsubscribe() { this.isStopped = this.closed = !0, this.observers = this.currentObservers = null } get observed() { var n; return (null === (n = this.observers) || void 0 === n ? void 0 : n.length) > 0 } _trySubscribe(n) { return this._throwIfClosed(), super._trySubscribe(n) } _subscribe(n) { return this._throwIfClosed(), this._checkFinalizedStatuses(n), this._innerSubscribe(n) } _innerSubscribe(n) { const { hasError: r, isStopped: o, observers: i } = this; return r || o ? ah : (this.currentObservers = null, i.push(n), new rt(() => { this.currentObservers = null, Ao(i, n) })) } _checkFinalizedStatuses(n) { const { hasError: r, thrownError: o, isStopped: i } = this; r ? n.error(o) : i && n.complete() } asObservable() { const n = new me; return n.source = this, n } } return e.create = (t, n) => new hh(t, n), e })(); class hh extends It { constructor(t, n) { super(), this.destination = t, this.source = n } next(t) { var n, r; null === (r = null === (n = this.destination) || void 0 === n ? void 0 : n.next) || void 0 === r || r.call(n, t) } error(t) { var n, r; null === (r = null === (n = this.destination) || void 0 === n ? void 0 : n.error) || void 0 === r || r.call(n, t) } complete() { var t, n; null === (n = null === (t = this.destination) || void 0 === t ? void 0 : t.complete) || void 0 === n || n.call(t) } _subscribe(t) { var n, r; return null !== (r = null === (n = this.source) || void 0 === n ? void 0 : n.subscribe(t)) && void 0 !== r ? r : ah } } function ph(e) { return ne(e?.lift) } function we(e) { return t => { if (ph(t)) return t.lift(function (n) { try { return e(n, this) } catch (r) { this.error(r) } }); throw new TypeError("Unable to lift unknown Observable type") } } function Ce(e, t, n, r, o) { return new fb(e, t, n, r, o) } class fb extends xu { constructor(t, n, r, o, i, s) { super(t), this.onFinalize = i, this.shouldUnsubscribe = s, this._next = n ? function (a) { try { n(a) } catch (u) { t.error(u) } } : super._next, this._error = o ? function (a) { try { o(a) } catch (u) { t.error(u) } finally { this.unsubscribe() } } : super._error, this._complete = r ? function () { try { r() } catch (a) { t.error(a) } finally { this.unsubscribe() } } : super._complete } unsubscribe() { var t; if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) { const { closed: n } = this; super.unsubscribe(), !n && (null === (t = this.onFinalize) || void 0 === t || t.call(this)) } } } function Y(e, t) { return we((n, r) => { let o = 0; n.subscribe(Ce(r, i => { r.next(e.call(t, i, o++)) })) }) } function wn(e) { return this instanceof wn ? (this.v = e, this) : new wn(e) } function yh(e) { if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined."); var n, t = e[Symbol.asyncIterator]; return t ? t.call(e) : (e = function Bu(e) { var t = "function" == typeof Symbol && Symbol.iterator, n = t && e[t], r = 0; if (n) return n.call(e); if (e && "number" == typeof e.length) return { next: function () { return e && r >= e.length && (e = void 0), { value: e && e[r++], done: !e } } }; throw new TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.") }(e), n = {}, r("next"), r("throw"), r("return"), n[Symbol.asyncIterator] = function () { return this }, n); function r(i) { n[i] = e[i] && function (s) { return new Promise(function (a, u) { !function o(i, s, a, u) { Promise.resolve(u).then(function (c) { i({ value: c, done: a }) }, s) }(a, u, (s = e[i](s)).done, s.value) }) } } } "function" == typeof SuppressedError && SuppressedError; const _h = e => e && "number" == typeof e.length && "function" != typeof e; function Ch(e) { return ne(e?.then) } function Dh(e) { return ne(e[ku]) } function wh(e) { return Symbol.asyncIterator && ne(e?.[Symbol.asyncIterator]) } function Eh(e) { return new TypeError(`You provided ${null !== e && "object" == typeof e ? "an invalid object" : `'${e}'`} where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`) } const bh = function Rb() { return "function" == typeof Symbol && Symbol.iterator ? Symbol.iterator : "@@iterator" }(); function Mh(e) { return ne(e?.[bh]) } function Ih(e) { return function vh(e, t, n) { if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined."); var o, r = n.apply(e, t || []), i = []; return o = {}, a("next"), a("throw"), a("return", function s(h) { return function (p) { return Promise.resolve(p).then(h, d) } }), o[Symbol.asyncIterator] = function () { return this }, o; function a(h, p) { r[h] && (o[h] = function (g) { return new Promise(function (v, _) { i.push([h, g, v, _]) > 1 || u(h, g) }) }, p && (o[h] = p(o[h]))) } function u(h, p) { try { !function c(h) { h.value instanceof wn ? Promise.resolve(h.value.v).then(l, d) : f(i[0][2], h) }(r[h](p)) } catch (g) { f(i[0][3], g) } } function l(h) { u("next", h) } function d(h) { u("throw", h) } function f(h, p) { h(p), i.shift(), i.length && u(i[0][0], i[0][1]) } }(this, arguments, function* () { const n = e.getReader(); try { for (; ;) { const { value: r, done: o } = yield wn(n.read()); if (o) return yield wn(void 0); yield yield wn(r) } } finally { n.releaseLock() } }) } function Sh(e) { return ne(e?.getReader) } function ot(e) { if (e instanceof me) return e; if (null != e) { if (Dh(e)) return function Fb(e) { return new me(t => { const n = e[ku](); if (ne(n.subscribe)) return n.subscribe(t); throw new TypeError("Provided object does not correctly implement Symbol.observable") }) }(e); if (_h(e)) return function kb(e) { return new me(t => { for (let n = 0; n < e.length && !t.closed; n++)t.next(e[n]); t.complete() }) }(e); if (Ch(e)) return function Lb(e) { return new me(t => { e.then(n => { t.closed || (t.next(n), t.complete()) }, n => t.error(n)).then(null, lh) }) }(e); if (wh(e)) return Ah(e); if (Mh(e)) return function Vb(e) { return new me(t => { for (const n of e) if (t.next(n), t.closed) return; t.complete() }) }(e); if (Sh(e)) return function jb(e) { return Ah(Ih(e)) }(e) } throw Eh(e) } function Ah(e) { return new me(t => { (function Bb(e, t) { var n, r, o, i; return function gh(e, t, n, r) { return new (n || (n = Promise))(function (i, s) { function a(l) { try { c(r.next(l)) } catch (d) { s(d) } } function u(l) { try { c(r.throw(l)) } catch (d) { s(d) } } function c(l) { l.done ? i(l.value) : function o(i) { return i instanceof n ? i : new n(function (s) { s(i) }) }(l.value).then(a, u) } c((r = r.apply(e, t || [])).next()) }) }(this, void 0, void 0, function* () { try { for (n = yh(e); !(r = yield n.next()).done;)if (t.next(r.value), t.closed) return } catch (s) { o = { error: s } } finally { try { r && !r.done && (i = n.return) && (yield i.call(n)) } finally { if (o) throw o.error } } t.complete() }) })(e, t).catch(n => t.error(n)) }) } function tn(e, t, n, r = 0, o = !1) { const i = t.schedule(function () { n(), o ? e.add(this.schedule(null, r)) : this.unsubscribe() }, r); if (e.add(i), !o) return i } function Ae(e, t, n = 1 / 0) { return ne(t) ? Ae((r, o) => Y((i, s) => t(r, i, o, s))(ot(e(r, o))), n) : ("number" == typeof t && (n = t), we((r, o) => function Hb(e, t, n, r, o, i, s, a) { const u = []; let c = 0, l = 0, d = !1; const f = () => { d && !u.length && !c && t.complete() }, h = g => c < r ? p(g) : u.push(g), p = g => { i && t.next(g), c++; let v = !1; ot(n(g, l++)).subscribe(Ce(t, _ => { o?.(_), i ? h(_) : t.next(_) }, () => { v = !0 }, void 0, () => { if (v) try { for (c--; u.length && c < r;) { const _ = u.shift(); s ? tn(t, s, () => p(_)) : p(_) } f() } catch (_) { t.error(_) } })) }; return e.subscribe(Ce(t, h, () => { d = !0, f() })), () => { a?.() } }(r, o, e, n))) } function pr(e = 1 / 0) { return Ae(Dn, e) } const Vt = new me(e => e.complete()); function Hu(e) { return e[e.length - 1] } function Th(e) { return ne(Hu(e)) ? e.pop() : void 0 } function Oo(e) { return function Ub(e) { return e && ne(e.schedule) }(Hu(e)) ? e.pop() : void 0 } function Oh(e, t = 0) { return we((n, r) => { n.subscribe(Ce(r, o => tn(r, e, () => r.next(o), t), () => tn(r, e, () => r.complete(), t), o => tn(r, e, () => r.error(o), t))) }) } function Nh(e, t = 0) { return we((n, r) => { r.add(e.schedule(() => n.subscribe(r), t)) }) } function Ph(e, t) { if (!e) throw new Error("Iterable cannot be null"); return new me(n => { tn(n, t, () => { const r = e[Symbol.asyncIterator](); tn(n, t, () => { r.next().then(o => { o.done ? n.complete() : n.next(o.value) }) }, 0, !0) }) }) } function Ee(e, t) { return t ? function Qb(e, t) { if (null != e) { if (Dh(e)) return function Gb(e, t) { return ot(e).pipe(Nh(t), Oh(t)) }(e, t); if (_h(e)) return function Wb(e, t) { return new me(n => { let r = 0; return t.schedule(function () { r === e.length ? n.complete() : (n.next(e[r++]), n.closed || this.schedule()) }) }) }(e, t); if (Ch(e)) return function qb(e, t) { return ot(e).pipe(Nh(t), Oh(t)) }(e, t); if (wh(e)) return Ph(e, t); if (Mh(e)) return function Zb(e, t) { return new me(n => { let r; return tn(n, t, () => { r = e[bh](), tn(n, t, () => { let o, i; try { ({ value: o, done: i } = r.next()) } catch (s) { return void n.error(s) } i ? n.complete() : n.next(o) }, 0, !0) }), () => ne(r?.return) && r.return() }) }(e, t); if (Sh(e)) return function Yb(e, t) { return Ph(Ih(e), t) }(e, t) } throw Eh(e) }(e, t) : ot(e) } class mt extends It { constructor(t) { super(), this._value = t } get value() { return this.getValue() } _subscribe(t) { const n = super._subscribe(t); return !n.closed && t.next(this._value), n } getValue() { const { hasError: t, thrownError: n, _value: r } = this; if (t) throw n; return this._throwIfClosed(), r } next(t) { super.next(this._value = t) } } function N(...e) { return Ee(e, Oo(e)) } function xh(e = {}) { const { connector: t = (() => new It), resetOnError: n = !0, resetOnComplete: r = !0, resetOnRefCountZero: o = !0 } = e; return i => { let s, a, u, c = 0, l = !1, d = !1; const f = () => { a?.unsubscribe(), a = void 0 }, h = () => { f(), s = u = void 0, l = d = !1 }, p = () => { const g = s; h(), g?.unsubscribe() }; return we((g, v) => { c++, !d && !l && f(); const _ = u = u ?? t(); v.add(() => { c--, 0 === c && !d && !l && (a = $u(p, o)) }), _.subscribe(v), !s && c > 0 && (s = new To({ next: m => _.next(m), error: m => { d = !0, f(), a = $u(h, n, m), _.error(m) }, complete: () => { l = !0, f(), a = $u(h, r), _.complete() } }), ot(g).subscribe(s)) })(i) } } function $u(e, t, ...n) { if (!0 === t) return void e(); if (!1 === t) return; const r = new To({ next: () => { r.unsubscribe(), e() } }); return ot(t(...n)).subscribe(r) } function St(e, t) { return we((n, r) => { let o = null, i = 0, s = !1; const a = () => s && !o && r.complete(); n.subscribe(Ce(r, u => { o?.unsubscribe(); let c = 0; const l = i++; ot(e(u, l)).subscribe(o = Ce(r, d => r.next(t ? t(u, d, l, c++) : d), () => { o = null, a() })) }, () => { s = !0, a() })) }) } function Kb(e, t) { return e === t } function K(e) { for (let t in e) if (e[t] === K) return t; throw Error("Could not find renamed property on target object.") } function us(e, t) { for (const n in t) t.hasOwnProperty(n) && !e.hasOwnProperty(n) && (e[n] = t[n]) } function be(e) { if ("string" == typeof e) return e; if (Array.isArray(e)) return "[" + e.map(be).join(", ") + "]"; if (null == e) return "" + e; if (e.overriddenName) return `${e.overriddenName}`; if (e.name) return `${e.name}`; const t = e.toString(); if (null == t) return "" + t; const n = t.indexOf("\n"); return -1 === n ? t : t.substring(0, n) } function Uu(e, t) { return null == e || "" === e ? null === t ? "" : t : null == t || "" === t ? e : e + " " + t } const eM = K({ __forward_ref__: K }); function oe(e) { return e.__forward_ref__ = oe, e.toString = function () { return be(this()) }, e } function R(e) { return zu(e) ? e() : e } function zu(e) { return "function" == typeof e && e.hasOwnProperty(eM) && e.__forward_ref__ === oe } function Gu(e) { return e && !!e.\u0275providers } class C extends Error { constructor(t, n) { super(function cs(e, t) { return `NG0${Math.abs(e)}${t ? ": " + t : ""}` }(t, n)), this.code = t } } function k(e) { return "string" == typeof e ? e : null == e ? "" : String(e) } function qu(e, t) { throw new C(-201, !1) } function vt(e, t) { null == e && function P(e, t, n, r) { throw new Error(`ASSERTION ERROR: ${e}` + (null == r ? "" : ` [Expected=> ${n} ${r} ${t} <=Actual]`)) }(t, e, null, "!=") } function S(e) { return { token: e.token, providedIn: e.providedIn || null, factory: e.factory, value: void 0 } } function st(e) { return { providers: e.providers || [], imports: e.imports || [] } } function ls(e) { return Fh(e, fs) || Fh(e, kh) } function Fh(e, t) { return e.hasOwnProperty(t) ? e[t] : null } function ds(e) { return e && (e.hasOwnProperty(Wu) || e.hasOwnProperty(uM)) ? e[Wu] : null } const fs = K({ \u0275prov: K }), Wu = K({ \u0275inj: K }), kh = K({ ngInjectableDef: K }), uM = K({ ngInjectorDef: K }); var z = function (e) { return e[e.Default = 0] = "Default", e[e.Host = 1] = "Host", e[e.Self = 2] = "Self", e[e.SkipSelf = 4] = "SkipSelf", e[e.Optional = 8] = "Optional", e }(z || {}); let Zu; function Qe(e) { const t = Zu; return Zu = e, t } function Vh(e, t, n) { const r = ls(e); return r && "root" == r.providedIn ? void 0 === r.value ? r.value = r.factory() : r.value : n & z.Optional ? null : void 0 !== t ? t : void qu(be(e)) } const ie = globalThis; class M { constructor(t, n) { this._desc = t, this.ngMetadataName = "InjectionToken", this.\u0275prov = void 0, "number" == typeof n ? this.__NG_ELEMENT_ID__ = n : void 0 !== n && (this.\u0275prov = S({ token: this, providedIn: n.providedIn || "root", factory: n.factory })) } get multi() { return this } toString() { return `InjectionToken ${this._desc}` } } const No = {}, Ku = "__NG_DI_FLAG__", hs = "ngTempTokenPath", dM = /\n/gm, Bh = "__source"; let gr; function En(e) { const t = gr; return gr = e, t } function pM(e, t = z.Default) { if (void 0 === gr) throw new C(-203, !1); return null === gr ? Vh(e, void 0, t) : gr.get(e, t & z.Optional ? null : void 0, t) } function I(e, t = z.Default) { return (function Lh() { return Zu }() || pM)(R(e), t) } function E(e, t = z.Default) { return I(e, ps(t)) } function ps(e) { return typeof e > "u" || "number" == typeof e ? e : 0 | (e.optional && 8) | (e.host && 1) | (e.self && 2) | (e.skipSelf && 4) } function ec(e) { const t = []; for (let n = 0; n < e.length; n++) { const r = R(e[n]); if (Array.isArray(r)) { if (0 === r.length) throw new C(900, !1); let o, i = z.Default; for (let s = 0; s < r.length; s++) { const a = r[s], u = gM(a); "number" == typeof u ? -1 === u ? o = a.token : i |= u : o = a } t.push(I(o, i)) } else t.push(I(r)) } return t } function Po(e, t) { return e[Ku] = t, e.prototype[Ku] = t, e } function gM(e) { return e[Ku] } function nn(e) { return { toString: e }.toString() } var gs = function (e) { return e[e.OnPush = 0] = "OnPush", e[e.Default = 1] = "Default", e }(gs || {}), At = function (e) { return e[e.Emulated = 0] = "Emulated", e[e.None = 2] = "None", e[e.ShadowDom = 3] = "ShadowDom", e }(At || {}); const jt = {}, Z = [], ms = K({ \u0275cmp: K }), tc = K({ \u0275dir: K }), nc = K({ \u0275pipe: K }), $h = K({ \u0275mod: K }), rn = K({ \u0275fac: K }), xo = K({ __NG_ELEMENT_ID__: K }), Uh = K({ __NG_ENV_ID__: K }); function zh(e, t, n) { let r = e.length; for (; ;) { const o = e.indexOf(t, n); if (-1 === o) return o; if (0 === o || e.charCodeAt(o - 1) <= 32) { const i = t.length; if (o + i === r || e.charCodeAt(o + i) <= 32) return o } n = o + 1 } } function rc(e, t, n) { let r = 0; for (; r < n.length;) { const o = n[r]; if ("number" == typeof o) { if (0 !== o) break; r++; const i = n[r++], s = n[r++], a = n[r++]; e.setAttribute(t, s, a, i) } else { const i = o, s = n[++r]; qh(i) ? e.setProperty(t, i, s) : e.setAttribute(t, i, s), r++ } } return r } function Gh(e) { return 3 === e || 4 === e || 6 === e } function qh(e) { return 64 === e.charCodeAt(0) } function Ro(e, t) { if (null !== t && 0 !== t.length) if (null === e || 0 === e.length) e = t.slice(); else { let n = -1; for (let r = 0; r < t.length; r++) { const o = t[r]; "number" == typeof o ? n = o : 0 === n || Wh(e, n, o, null, -1 === n || 2 === n ? t[++r] : null) } } return e } function Wh(e, t, n, r, o) { let i = 0, s = e.length; if (-1 === t) s = -1; else for (; i < e.length;) { const a = e[i++]; if ("number" == typeof a) { if (a === t) { s = -1; break } if (a > t) { s = i - 1; break } } } for (; i < e.length;) { const a = e[i]; if ("number" == typeof a) break; if (a === n) { if (null === r) return void (null !== o && (e[i + 1] = o)); if (r === e[i + 1]) return void (e[i + 2] = o) } i++, null !== r && i++, null !== o && i++ } -1 !== s && (e.splice(s, 0, t), i = s + 1), e.splice(i++, 0, n), null !== r && e.splice(i++, 0, r), null !== o && e.splice(i++, 0, o) } const Zh = "ng-template"; function yM(e, t, n) { let r = 0, o = !0; for (; r < e.length;) { let i = e[r++]; if ("string" == typeof i && o) { const s = e[r++]; if (n && "class" === i && -1 !== zh(s.toLowerCase(), t, 0)) return !0 } else { if (1 === i) { for (; r < e.length && "string" == typeof (i = e[r++]);)if (i.toLowerCase() === t) return !0; return !1 } "number" == typeof i && (o = !1) } } return !1 } function Yh(e) { return 4 === e.type && e.value !== Zh } function _M(e, t, n) { return t === (4 !== e.type || n ? e.value : Zh) } function CM(e, t, n) { let r = 4; const o = e.attrs || [], i = function EM(e) { for (let t = 0; t < e.length; t++)if (Gh(e[t])) return t; return e.length }(o); let s = !1; for (let a = 0; a < t.length; a++) { const u = t[a]; if ("number" != typeof u) { if (!s) if (4 & r) { if (r = 2 | 1 & r, "" !== u && !_M(e, u, n) || "" === u && 1 === t.length) { if (Tt(r)) return !1; s = !0 } } else { const c = 8 & r ? u : t[++a]; if (8 & r && null !== e.attrs) { if (!yM(e.attrs, c, n)) { if (Tt(r)) return !1; s = !0 } continue } const d = DM(8 & r ? "class" : u, o, Yh(e), n); if (-1 === d) { if (Tt(r)) return !1; s = !0; continue } if ("" !== c) { let f; f = d > i ? "" : o[d + 1].toLowerCase(); const h = 8 & r ? f : null; if (h && -1 !== zh(h, c, 0) || 2 & r && c !== f) { if (Tt(r)) return !1; s = !0 } } } } else { if (!s && !Tt(r) && !Tt(u)) return !1; if (s && Tt(u)) continue; s = !1, r = u | 1 & r } } return Tt(r) || s } function Tt(e) { return 0 == (1 & e) } function DM(e, t, n, r) { if (null === t) return -1; let o = 0; if (r || !n) { let i = !1; for (; o < t.length;) { const s = t[o]; if (s === e) return o; if (3 === s || 6 === s) i = !0; else { if (1 === s || 2 === s) { let a = t[++o]; for (; "string" == typeof a;)a = t[++o]; continue } if (4 === s) break; if (0 === s) { o += 4; continue } } o += i ? 1 : 2 } return -1 } return function bM(e, t) { let n = e.indexOf(4); if (n > -1) for (n++; n < e.length;) { const r = e[n]; if ("number" == typeof r) return -1; if (r === t) return n; n++ } return -1 }(t, e) } function Qh(e, t, n = !1) { for (let r = 0; r < t.length; r++)if (CM(e, t[r], n)) return !0; return !1 } function Xh(e, t) { return e ? ":not(" + t.trim() + ")" : t } function IM(e) { let t = e[0], n = 1, r = 2, o = "", i = !1; for (; n < e.length;) { let s = e[n]; if ("string" == typeof s) if (2 & r) { const a = e[++n]; o += "[" + s + (a.length > 0 ? '="' + a + '"' : "") + "]" } else 8 & r ? o += "." + s : 4 & r && (o += " " + s); else "" !== o && !Tt(s) && (t += Xh(i, o), o = ""), r = s, i = i || !Tt(r); n++ } return "" !== o && (t += Xh(i, o)), t } function vs(e) { return nn(() => { const t = Kh(e), n = { ...t, decls: e.decls, vars: e.vars, template: e.template, consts: e.consts || null, ngContentSelectors: e.ngContentSelectors, onPush: e.changeDetection === gs.OnPush, directiveDefs: null, pipeDefs: null, dependencies: t.standalone && e.dependencies || null, getStandaloneInjector: null, signals: e.signals ?? !1, data: e.data || {}, encapsulation: e.encapsulation || At.Emulated, styles: e.styles || Z, _: null, schemas: e.schemas || null, tView: null, id: "" }; ep(n); const r = e.dependencies; return n.directiveDefs = ys(r, !1), n.pipeDefs = ys(r, !0), n.id = function RM(e) { let t = 0; const n = [e.selectors, e.ngContentSelectors, e.hostVars, e.hostAttrs, e.consts, e.vars, e.decls, e.encapsulation, e.standalone, e.signals, e.exportAs, JSON.stringify(e.inputs), JSON.stringify(e.outputs), Object.getOwnPropertyNames(e.type.prototype), !!e.contentQueries, !!e.viewQuery].join("|"); for (const o of n) t = Math.imul(31, t) + o.charCodeAt(0) << 0; return t += 2147483648, "c" + t }(n), n }) } function OM(e) { return q(e) || Te(e) } function NM(e) { return null !== e } function yt(e) { return nn(() => ({ type: e.type, bootstrap: e.bootstrap || Z, declarations: e.declarations || Z, imports: e.imports || Z, exports: e.exports || Z, transitiveCompileScopes: null, schemas: e.schemas || null, id: e.id || null })) } function Jh(e, t) { if (null == e) return jt; const n = {}; for (const r in e) if (e.hasOwnProperty(r)) { let o = e[r], i = o; Array.isArray(o) && (i = o[1], o = o[0]), n[o] = r, t && (t[o] = i) } return n } function F(e) { return nn(() => { const t = Kh(e); return ep(t), t }) } function q(e) { return e[ms] || null } function Te(e) { return e[tc] || null } function je(e) { return e[nc] || null } function at(e, t) { const n = e[$h] || null; if (!n && !0 === t) throw new Error(`Type ${be(e)} does not have '\u0275mod' property.`); return n } function Kh(e) { const t = {}; return { type: e.type, providersResolver: null, factory: null, hostBindings: e.hostBindings || null, hostVars: e.hostVars || 0, hostAttrs: e.hostAttrs || null, contentQueries: e.contentQueries || null, declaredInputs: t, inputTransforms: null, inputConfig: e.inputs || jt, exportAs: e.exportAs || null, standalone: !0 === e.standalone, signals: !0 === e.signals, selectors: e.selectors || Z, viewQuery: e.viewQuery || null, features: e.features || null, setInput: null, findHostDirectiveDefs: null, hostDirectives: null, inputs: Jh(e.inputs, t), outputs: Jh(e.outputs) } } function ep(e) { e.features?.forEach(t => t(e)) } function ys(e, t) { if (!e) return null; const n = t ? je : OM; return () => ("function" == typeof e ? e() : e).map(r => n(r)).filter(NM) } const he = 0, w = 1, j = 2, le = 3, Ot = 4, Fo = 5, Re = 6, vr = 7, ve = 8, bn = 9, yr = 10, L = 11, ko = 12, tp = 13, _r = 14, ye = 15, Lo = 16, Cr = 17, Bt = 18, Vo = 19, np = 20, Mn = 21, on = 22, jo = 23, Bo = 24, G = 25, oc = 1, rp = 2, Ht = 7, Dr = 9, Oe = 11; function Je(e) { return Array.isArray(e) && "object" == typeof e[oc] } function Be(e) { return Array.isArray(e) && !0 === e[oc] } function ic(e) { return 0 != (4 & e.flags) } function qn(e) { return e.componentOffset > -1 } function Cs(e) { return 1 == (1 & e.flags) } function Nt(e) { return !!e.template } function sc(e) { return 0 != (512 & e[j]) } function Wn(e, t) { return e.hasOwnProperty(rn) ? e[rn] : null } let Ne = null, Ds = !1; function _t(e) { const t = Ne; return Ne = e, t } const sp = { version: 0, dirty: !1, producerNode: void 0, producerLastReadVersion: void 0, producerIndexOfThis: void 0, nextProducerIndex: 0, liveConsumerNode: void 0, liveConsumerIndexOfThis: void 0, consumerAllowSignalWrites: !1, consumerIsAlwaysLive: !1, producerMustRecompute: () => !1, producerRecomputeValue: () => { }, consumerMarkedDirty: () => { } }; function up(e) { if (!$o(e) || e.dirty) { if (!e.producerMustRecompute(e) && !dp(e)) return void (e.dirty = !1); e.producerRecomputeValue(e), e.dirty = !1 } } function lp(e) { e.dirty = !0, function cp(e) { if (void 0 === e.liveConsumerNode) return; const t = Ds; Ds = !0; try { for (const n of e.liveConsumerNode) n.dirty || lp(n) } finally { Ds = t } }(e), e.consumerMarkedDirty?.(e) } function uc(e) { return e && (e.nextProducerIndex = 0), _t(e) } function cc(e, t) { if (_t(t), e && void 0 !== e.producerNode && void 0 !== e.producerIndexOfThis && void 0 !== e.producerLastReadVersion) { if ($o(e)) for (let n = e.nextProducerIndex; n < e.producerNode.length; n++)ws(e.producerNode[n], e.producerIndexOfThis[n]); for (; e.producerNode.length > e.nextProducerIndex;)e.producerNode.pop(), e.producerLastReadVersion.pop(), e.producerIndexOfThis.pop() } } function dp(e) { wr(e); for (let t = 0; t < e.producerNode.length; t++) { const n = e.producerNode[t], r = e.producerLastReadVersion[t]; if (r !== n.version || (up(n), r !== n.version)) return !0 } return !1 } function fp(e) { if (wr(e), $o(e)) for (let t = 0; t < e.producerNode.length; t++)ws(e.producerNode[t], e.producerIndexOfThis[t]); e.producerNode.length = e.producerLastReadVersion.length = e.producerIndexOfThis.length = 0, e.liveConsumerNode && (e.liveConsumerNode.length = e.liveConsumerIndexOfThis.length = 0) } function ws(e, t) { if (function pp(e) { e.liveConsumerNode ??= [], e.liveConsumerIndexOfThis ??= [] }(e), wr(e), 1 === e.liveConsumerNode.length) for (let r = 0; r < e.producerNode.length; r++)ws(e.producerNode[r], e.producerIndexOfThis[r]); const n = e.liveConsumerNode.length - 1; if (e.liveConsumerNode[t] = e.liveConsumerNode[n], e.liveConsumerIndexOfThis[t] = e.liveConsumerIndexOfThis[n], e.liveConsumerNode.length--, e.liveConsumerIndexOfThis.length--, t < e.liveConsumerNode.length) { const r = e.liveConsumerIndexOfThis[t], o = e.liveConsumerNode[t]; wr(o), o.producerIndexOfThis[r] = t } } function $o(e) { return e.consumerIsAlwaysLive || (e?.liveConsumerNode?.length ?? 0) > 0 } function wr(e) { e.producerNode ??= [], e.producerIndexOfThis ??= [], e.producerLastReadVersion ??= [] } let gp = null; const _p = () => { }, WM = (() => ({ ...sp, consumerIsAlwaysLive: !0, consumerAllowSignalWrites: !1, consumerMarkedDirty: e => { e.schedule(e.ref) }, hasRun: !1, cleanupFn: _p }))(); class ZM { constructor(t, n, r) { this.previousValue = t, this.currentValue = n, this.firstChange = r } isFirstChange() { return this.firstChange } } function Ct() { return Cp } function Cp(e) { return e.type.prototype.ngOnChanges && (e.setInput = QM), YM } function YM() { const e = wp(this), t = e?.current; if (t) { const n = e.previous; if (n === jt) e.previous = t; else for (let r in t) n[r] = t[r]; e.current = null, this.ngOnChanges(t) } } function QM(e, t, n, r) { const o = this.declaredInputs[n], i = wp(e) || function XM(e, t) { return e[Dp] = t }(e, { previous: jt, current: null }), s = i.current || (i.current = {}), a = i.previous, u = a[o]; s[o] = new ZM(u && u.currentValue, t, a === jt), e[r] = t } Ct.ngInherit = !0; const Dp = "__ngSimpleChanges__"; function wp(e) { return e[Dp] || null } const $t = function (e, t, n) { }; function se(e) { for (; Array.isArray(e);)e = e[he]; return e } function Es(e, t) { return se(t[e]) } function Ke(e, t) { return se(t[e.index]) } function Mp(e, t) { return e.data[t] } function ut(e, t) { const n = t[e]; return Je(n) ? n : n[he] } function Sn(e, t) { return null == t ? null : e[t] } function Ip(e) { e[Cr] = 0 } function rI(e) { 1024 & e[j] || (e[j] |= 1024, Ap(e, 1)) } function Sp(e) { 1024 & e[j] && (e[j] &= -1025, Ap(e, -1)) } function Ap(e, t) { let n = e[le]; if (null === n) return; n[Fo] += t; let r = n; for (n = n[le]; null !== n && (1 === t && 1 === r[Fo] || -1 === t && 0 === r[Fo]);)n[Fo] += t, r = n, n = n[le] } const x = { lFrame: Hp(null), bindingsEnabled: !0, skipHydrationRootTNode: null }; function Np() { return x.bindingsEnabled } function y() { return x.lFrame.lView } function W() { return x.lFrame.tView } function Pe() { let e = Rp(); for (; null !== e && 64 === e.type;)e = e.parent; return e } function Rp() { return x.lFrame.currentTNode } function Ut(e, t) { const n = x.lFrame; n.currentTNode = e, n.isParent = t } function pc() { return x.lFrame.isParent } function Mr() { return x.lFrame.bindingIndex++ } function gI(e, t) { const n = x.lFrame; n.bindingIndex = n.bindingRootIndex = e, mc(t) } function mc(e) { x.lFrame.currentDirectiveIndex = e } function yc(e) { x.lFrame.currentQueryIndex = e } function vI(e) { const t = e[w]; return 2 === t.type ? t.declTNode : 1 === t.type ? e[Re] : null } function jp(e, t, n) { if (n & z.SkipSelf) { let o = t, i = e; for (; !(o = o.parent, null !== o || n & z.Host || (o = vI(i), null === o || (i = i[_r], 10 & o.type)));); if (null === o) return !1; t = o, e = i } const r = x.lFrame = Bp(); return r.currentTNode = t, r.lView = e, !0 } function _c(e) { const t = Bp(), n = e[w]; x.lFrame = t, t.currentTNode = n.firstChild, t.lView = e, t.tView = n, t.contextLView = e, t.bindingIndex = n.bindingStartIndex, t.inI18n = !1 } function Bp() { const e = x.lFrame, t = null === e ? null : e.child; return null === t ? Hp(e) : t } function Hp(e) { const t = { currentTNode: null, isParent: !0, lView: null, tView: null, selectedIndex: -1, contextLView: null, elementDepthCount: 0, currentNamespace: null, currentDirectiveIndex: -1, bindingRootIndex: -1, bindingIndex: -1, currentQueryIndex: 0, parent: e, child: null, inI18n: !1 }; return null !== e && (e.child = t), t } function $p() { const e = x.lFrame; return x.lFrame = e.parent, e.currentTNode = null, e.lView = null, e } const Up = $p; function Cc() { const e = $p(); e.isParent = !0, e.tView = null, e.selectedIndex = -1, e.contextLView = null, e.elementDepthCount = 0, e.currentDirectiveIndex = -1, e.currentNamespace = null, e.bindingRootIndex = -1, e.bindingIndex = -1, e.currentQueryIndex = 0 } function $e() { return x.lFrame.selectedIndex } function Zn(e) { x.lFrame.selectedIndex = e } let Gp = !0; function bs() { return Gp } function An(e) { Gp = e } function Ms(e, t) { for (let n = t.directiveStart, r = t.directiveEnd; n < r; n++) { const i = e.data[n].type.prototype, { ngAfterContentInit: s, ngAfterContentChecked: a, ngAfterViewInit: u, ngAfterViewChecked: c, ngOnDestroy: l } = i; s && (e.contentHooks ??= []).push(-n, s), a && ((e.contentHooks ??= []).push(n, a), (e.contentCheckHooks ??= []).push(n, a)), u && (e.viewHooks ??= []).push(-n, u), c && ((e.viewHooks ??= []).push(n, c), (e.viewCheckHooks ??= []).push(n, c)), null != l && (e.destroyHooks ??= []).push(n, l) } } function Is(e, t, n) { qp(e, t, 3, n) } function Ss(e, t, n, r) { (3 & e[j]) === n && qp(e, t, n, r) } function Dc(e, t) { let n = e[j]; (3 & n) === t && (n &= 8191, n += 1, e[j] = n) } function qp(e, t, n, r) { const i = r ?? -1, s = t.length - 1; let a = 0; for (let u = void 0 !== r ? 65535 & e[Cr] : 0; u < s; u++)if ("number" == typeof t[u + 1]) { if (a = t[u], null != r && a >= r) break } else t[u] < 0 && (e[Cr] += 65536), (a < i || -1 == i) && (MI(e, n, t, u), e[Cr] = (4294901760 & e[Cr]) + u + 2), u++ } function Wp(e, t) { $t(4, e, t); const n = _t(null); try { t.call(e) } finally { _t(n), $t(5, e, t) } } function MI(e, t, n, r) { const o = n[r] < 0, i = n[r + 1], a = e[o ? -n[r] : n[r]]; o ? e[j] >> 13 < e[Cr] >> 16 && (3 & e[j]) === t && (e[j] += 8192, Wp(a, i)) : Wp(a, i) } const Ir = -1; class zo { constructor(t, n, r) { this.factory = t, this.resolving = !1, this.canSeeViewProviders = n, this.injectImpl = r } } function Ec(e) { return e !== Ir } function Go(e) { return 32767 & e } function qo(e, t) { let n = function TI(e) { return e >> 16 }(e), r = t; for (; n > 0;)r = r[_r], n--; return r } let bc = !0; function As(e) { const t = bc; return bc = e, t } const Zp = 255, Yp = 5; let OI = 0; const zt = {}; function Ts(e, t) { const n = Qp(e, t); if (-1 !== n) return n; const r = t[w]; r.firstCreatePass && (e.injectorIndex = t.length, Mc(r.data, e), Mc(t, null), Mc(r.blueprint, null)); const o = Os(e, t), i = e.injectorIndex; if (Ec(o)) { const s = Go(o), a = qo(o, t), u = a[w].data; for (let c = 0; c < 8; c++)t[i + c] = a[s + c] | u[s + c] } return t[i + 8] = o, i } function Mc(e, t) { e.push(0, 0, 0, 0, 0, 0, 0, 0, t) } function Qp(e, t) { return -1 === e.injectorIndex || e.parent && e.parent.injectorIndex === e.injectorIndex || null === t[e.injectorIndex + 8] ? -1 : e.injectorIndex } function Os(e, t) { if (e.parent && -1 !== e.parent.injectorIndex) return e.parent.injectorIndex; let n = 0, r = null, o = t; for (; null !== o;) { if (r = rg(o), null === r) return Ir; if (n++, o = o[_r], -1 !== r.injectorIndex) return r.injectorIndex | n << 16 } return Ir } function Ic(e, t, n) { !function NI(e, t, n) { let r; "string" == typeof n ? r = n.charCodeAt(0) || 0 : n.hasOwnProperty(xo) && (r = n[xo]), null == r && (r = n[xo] = OI++); const o = r & Zp; t.data[e + (o >> Yp)] |= 1 << o }(e, t, n) } function Xp(e, t, n) { if (n & z.Optional || void 0 !== e) return e; qu() } function Jp(e, t, n, r) { if (n & z.Optional && void 0 === r && (r = null), !(n & (z.Self | z.Host))) { const o = e[bn], i = Qe(void 0); try { return o ? o.get(t, r, n & z.Optional) : Vh(t, r, n & z.Optional) } finally { Qe(i) } } return Xp(r, 0, n) } function Kp(e, t, n, r = z.Default, o) { if (null !== e) { if (2048 & t[j] && !(r & z.Self)) { const s = function LI(e, t, n, r, o) { let i = e, s = t; for (; null !== i && null !== s && 2048 & s[j] && !(512 & s[j]);) { const a = eg(i, s, n, r | z.Self, zt); if (a !== zt) return a; let u = i.parent; if (!u) { const c = s[np]; if (c) { const l = c.get(n, zt, r); if (l !== zt) return l } u = rg(s), s = s[_r] } i = u } return o }(e, t, n, r, zt); if (s !== zt) return s } const i = eg(e, t, n, r, zt); if (i !== zt) return i } return Jp(t, n, r, o) } function eg(e, t, n, r, o) { const i = function RI(e) { if ("string" == typeof e) return e.charCodeAt(0) || 0; const t = e.hasOwnProperty(xo) ? e[xo] : void 0; return "number" == typeof t ? t >= 0 ? t & Zp : kI : t }(n); if ("function" == typeof i) { if (!jp(t, e, r)) return r & z.Host ? Xp(o, 0, r) : Jp(t, n, r, o); try { let s; if (s = i(r), null != s || r & z.Optional) return s; qu() } finally { Up() } } else if ("number" == typeof i) { let s = null, a = Qp(e, t), u = Ir, c = r & z.Host ? t[ye][Re] : null; for ((-1 === a || r & z.SkipSelf) && (u = -1 === a ? Os(e, t) : t[a + 8], u !== Ir && ng(r, !1) ? (s = t[w], a = Go(u), t = qo(u, t)) : a = -1); -1 !== a;) { const l = t[w]; if (tg(i, a, l.data)) { const d = xI(a, t, n, s, r, c); if (d !== zt) return d } u = t[a + 8], u !== Ir && ng(r, t[w].data[a + 8] === c) && tg(i, a, t) ? (s = l, a = Go(u), t = qo(u, t)) : a = -1 } } return o } function xI(e, t, n, r, o, i) { const s = t[w], a = s.data[e + 8], l = function Ns(e, t, n, r, o) { const i = e.providerIndexes, s = t.data, a = 1048575 & i, u = e.directiveStart, l = i >> 20, f = o ? a + l : e.directiveEnd; for (let h = r ? a : a + l; h < f; h++) { const p = s[h]; if (h < u && n === p || h >= u && p.type === n) return h } if (o) { const h = s[u]; if (h && Nt(h) && h.type === n) return u } return null }(a, s, n, null == r ? qn(a) && bc : r != s && 0 != (3 & a.type), o & z.Host && i === a); return null !== l ? Yn(t, s, l, a) : zt } function Yn(e, t, n, r) { let o = e[n]; const i = t.data; if (function II(e) { return e instanceof zo }(o)) { const s = o; s.resolving && function tM(e, t) { const n = t ? `. Dependency path: ${t.join(" > ")} > ${e}` : ""; throw new C(-200, `Circular dependency in DI detected for ${e}${n}`) }(function J(e) { return "function" == typeof e ? e.name || e.toString() : "object" == typeof e && null != e && "function" == typeof e.type ? e.type.name || e.type.toString() : k(e) }(i[n])); const a = As(s.canSeeViewProviders); s.resolving = !0; const c = s.injectImpl ? Qe(s.injectImpl) : null; jp(e, r, z.Default); try { o = e[n] = s.factory(void 0, i, e, r), t.firstCreatePass && n >= r.directiveStart && function bI(e, t, n) { const { ngOnChanges: r, ngOnInit: o, ngDoCheck: i } = t.type.prototype; if (r) { const s = Cp(t); (n.preOrderHooks ??= []).push(e, s), (n.preOrderCheckHooks ??= []).push(e, s) } o && (n.preOrderHooks ??= []).push(0 - e, o), i && ((n.preOrderHooks ??= []).push(e, i), (n.preOrderCheckHooks ??= []).push(e, i)) }(n, i[n], t) } finally { null !== c && Qe(c), As(a), s.resolving = !1, Up() } } return o } function tg(e, t, n) { return !!(n[t + (e >> Yp)] & 1 << e) } function ng(e, t) { return !(e & z.Self || e & z.Host && t) } class Ue { constructor(t, n) { this._tNode = t, this._lView = n } get(t, n, r) { return Kp(this._tNode, this._lView, t, ps(r), n) } } function kI() { return new Ue(Pe(), y()) } function xe(e) { return nn(() => { const t = e.prototype.constructor, n = t[rn] || Sc(t), r = Object.prototype; let o = Object.getPrototypeOf(e.prototype).constructor; for (; o && o !== r;) { const i = o[rn] || Sc(o); if (i && i !== n) return i; o = Object.getPrototypeOf(o) } return i => new i }) } function Sc(e) { return zu(e) ? () => { const t = Sc(R(e)); return t && t() } : Wn(e) } function rg(e) { const t = e[w], n = t.type; return 2 === n ? t.declTNode : 1 === n ? e[Re] : null } const Ar = "__parameters__"; function Or(e, t, n) { return nn(() => { const r = function Ac(e) { return function (...n) { if (e) { const r = e(...n); for (const o in r) this[o] = r[o] } } }(t); function o(...i) { if (this instanceof o) return r.apply(this, i), this; const s = new o(...i); return a.annotation = s, a; function a(u, c, l) { const d = u.hasOwnProperty(Ar) ? u[Ar] : Object.defineProperty(u, Ar, { value: [] })[Ar]; for (; d.length <= l;)d.push(null); return (d[l] = d[l] || []).push(s), u } } return n && (o.prototype = Object.create(n.prototype)), o.prototype.ngMetadataName = e, o.annotationCls = o, o }) } function Pr(e, t) { e.forEach(n => Array.isArray(n) ? Pr(n, t) : t(n)) } function ig(e, t, n) { t >= e.length ? e.push(n) : e.splice(t, 0, n) } function xs(e, t) { return t >= e.length - 1 ? e.pop() : e.splice(t, 1)[0] } function ct(e, t, n) { let r = xr(e, t); return r >= 0 ? e[1 | r] = n : (r = ~r, function zI(e, t, n, r) { let o = e.length; if (o == t) e.push(n, r); else if (1 === o) e.push(r, e[0]), e[0] = n; else { for (o--, e.push(e[o - 1], e[o]); o > t;)e[o] = e[o - 2], o--; e[t] = n, e[t + 1] = r } }(e, r, t, n)), r } function Tc(e, t) { const n = xr(e, t); if (n >= 0) return e[1 | n] } function xr(e, t) { return function sg(e, t, n) { let r = 0, o = e.length >> n; for (; o !== r;) { const i = r + (o - r >> 1), s = e[i << n]; if (t === s) return i << n; s > t ? o = i : r = i + 1 } return ~(o << n) }(e, t, 1) } const Fs = Po(Or("Optional"), 8), ks = Po(Or("SkipSelf"), 4); function Hs(e) { return 128 == (128 & e.flags) } var Tn = function (e) { return e[e.Important = 1] = "Important", e[e.DashCase = 2] = "DashCase", e }(Tn || {}); const Rc = new Map; let pS = 0; const kc = "__ngContext__"; function Fe(e, t) { Je(t) ? (e[kc] = t[Vo], function mS(e) { Rc.set(e[Vo], e) }(t)) : e[kc] = t } let Lc; function Vc(e, t) { return Lc(e, t) } function Jo(e) { const t = e[le]; return Be(t) ? t[le] : t } function Ig(e) { return Ag(e[ko]) } function Sg(e) { return Ag(e[Ot]) } function Ag(e) { for (; null !== e && !Be(e);)e = e[Ot]; return e } function kr(e, t, n, r, o) { if (null != r) { let i, s = !1; Be(r) ? i = r : Je(r) && (s = !0, r = r[he]); const a = se(r); 0 === e && null !== n ? null == o ? Pg(t, n, a) : Qn(t, n, a, o || null, !0) : 1 === e && null !== n ? Qn(t, n, a, o || null, !0) : 2 === e ? function Zs(e, t, n) { const r = qs(e, t); r && function FS(e, t, n, r) { e.removeChild(t, n, r) }(e, r, t, n) }(t, a, s) : 3 === e && t.destroyNode(a), null != i && function VS(e, t, n, r, o) { const i = n[Ht]; i !== se(n) && kr(t, e, r, i, o); for (let a = Oe; a < n.length; a++) { const u = n[a]; ei(u[w], u, e, t, r, i) } }(t, e, i, n, o) } } function zs(e, t, n) { return e.createElement(t, n) } function Og(e, t) { const n = e[Dr], r = n.indexOf(t); Sp(t), n.splice(r, 1) } function Gs(e, t) { if (e.length <= Oe) return; const n = Oe + t, r = e[n]; if (r) { const o = r[Lo]; null !== o && o !== e && Og(o, r), t > 0 && (e[n - 1][Ot] = r[Ot]); const i = xs(e, Oe + t); !function SS(e, t) { ei(e, t, t[L], 2, null, null), t[he] = null, t[Re] = null }(r[w], r); const s = i[Bt]; null !== s && s.detachView(i[w]), r[le] = null, r[Ot] = null, r[j] &= -129 } return r } function Bc(e, t) { if (!(256 & t[j])) { const n = t[L]; t[jo] && fp(t[jo]), t[Bo] && fp(t[Bo]), n.destroyNode && ei(e, t, n, 3, null, null), function OS(e) { let t = e[ko]; if (!t) return Hc(e[w], e); for (; t;) { let n = null; if (Je(t)) n = t[ko]; else { const r = t[Oe]; r && (n = r) } if (!n) { for (; t && !t[Ot] && t !== e;)Je(t) && Hc(t[w], t), t = t[le]; null === t && (t = e), Je(t) && Hc(t[w], t), n = t && t[Ot] } t = n } }(t) } } function Hc(e, t) { if (!(256 & t[j])) { t[j] &= -129, t[j] |= 256, function RS(e, t) { let n; if (null != e && null != (n = e.destroyHooks)) for (let r = 0; r < n.length; r += 2) { const o = t[n[r]]; if (!(o instanceof zo)) { const i = n[r + 1]; if (Array.isArray(i)) for (let s = 0; s < i.length; s += 2) { const a = o[i[s]], u = i[s + 1]; $t(4, a, u); try { u.call(a) } finally { $t(5, a, u) } } else { $t(4, o, i); try { i.call(o) } finally { $t(5, o, i) } } } } }(e, t), function xS(e, t) { const n = e.cleanup, r = t[vr]; if (null !== n) for (let i = 0; i < n.length - 1; i += 2)if ("string" == typeof n[i]) { const s = n[i + 3]; s >= 0 ? r[s]() : r[-s].unsubscribe(), i += 2 } else n[i].call(r[n[i + 1]]); null !== r && (t[vr] = null); const o = t[Mn]; if (null !== o) { t[Mn] = null; for (let i = 0; i < o.length; i++)(0, o[i])() } }(e, t), 1 === t[w].type && t[L].destroy(); const n = t[Lo]; if (null !== n && Be(t[le])) { n !== t[le] && Og(n, t); const r = t[Bt]; null !== r && r.detachView(e) } !function vS(e) { Rc.delete(e[Vo]) }(t) } } function $c(e, t, n) { return function Ng(e, t, n) { let r = t; for (; null !== r && 40 & r.type;)r = (t = r).parent; if (null === r) return n[he]; { const { componentOffset: o } = r; if (o > -1) { const { encapsulation: i } = e.data[r.directiveStart + o]; if (i === At.None || i === At.Emulated) return null } return Ke(r, n) } }(e, t.parent, n) } function Qn(e, t, n, r, o) { e.insertBefore(t, n, r, o) } function Pg(e, t, n) { e.appendChild(t, n) } function xg(e, t, n, r, o) { null !== r ? Qn(e, t, n, r, o) : Pg(e, t, n) } function qs(e, t) { return e.parentNode(t) } let Uc, Wc, kg = function Fg(e, t, n) { return 40 & e.type ? Ke(e, n) : null }; function Ws(e, t, n, r) { const o = $c(e, r, t), i = t[L], a = function Rg(e, t, n) { return kg(e, t, n) }(r.parent || t[Re], r, t); if (null != o) if (Array.isArray(n)) for (let u = 0; u < n.length; u++)xg(i, o, n[u], a, !1); else xg(i, o, n, a, !1); void 0 !== Uc && Uc(i, r, t, n, o) } function Ko(e, t) { if (null !== t) { const n = t.type; if (3 & n) return Ke(t, e); if (4 & n) return zc(-1, e[t.index]); if (8 & n) { const r = t.child; if (null !== r) return Ko(e, r); { const o = e[t.index]; return Be(o) ? zc(-1, o) : se(o) } } if (32 & n) return Vc(t, e)() || se(e[t.index]); { const r = Vg(e, t); return null !== r ? Array.isArray(r) ? r[0] : Ko(Jo(e[ye]), r) : Ko(e, t.next) } } return null } function Vg(e, t) { return null !== t ? e[ye][Re].projection[t.projection] : null } function zc(e, t) { const n = Oe + e + 1; if (n < t.length) { const r = t[n], o = r[w].firstChild; if (null !== o) return Ko(r, o) } return t[Ht] } function Gc(e, t, n, r, o, i, s) { for (; null != n;) { const a = r[n.index], u = n.type; if (s && 0 === t && (a && Fe(se(a), r), n.flags |= 2), 32 != (32 & n.flags)) if (8 & u) Gc(e, t, n.child, r, o, i, !1), kr(t, e, o, a, i); else if (32 & u) { const c = Vc(n, r); let l; for (; l = c();)kr(t, e, o, l, i); kr(t, e, o, a, i) } else 16 & u ? Bg(e, t, r, n, o, i) : kr(t, e, o, a, i); n = s ? n.projectionNext : n.next } } function ei(e, t, n, r, o, i) { Gc(n, r, e.firstChild, t, o, i, !1) } function Bg(e, t, n, r, o, i) { const s = n[ye], u = s[Re].projection[r.projection]; if (Array.isArray(u)) for (let c = 0; c < u.length; c++)kr(t, e, o, u[c], i); else { let c = u; const l = s[le]; Hs(r) && (c.flags |= 128), Gc(e, t, c, l, o, i, !0) } } function Hg(e, t, n) { "" === n ? e.removeAttribute(t, "class") : e.setAttribute(t, "class", n) } function $g(e, t, n) { const { mergedAttrs: r, classes: o, styles: i } = n; null !== r && rc(e, t, r), null !== o && Hg(e, t, o), null !== i && function BS(e, t, n) { e.setAttribute(t, "style", n) }(e, t, i) } class qg { constructor(t) { this.changingThisBreaksApplicationSecurity = t } toString() { return `SafeValue must use [property]=binding: ${this.changingThisBreaksApplicationSecurity} (see https://g.co/ng/security#xss)` } } const oi = new M("ENVIRONMENT_INITIALIZER"), nm = new M("INJECTOR", -1), rm = new M("INJECTOR_DEF_TYPES"); class Kc { get(t, n = No) { if (n === No) { const r = new Error(`NullInjectorError: No provider for ${be(t)}!`); throw r.name = "NullInjectorError", r } return n } } function p0(...e) { return { \u0275providers: om(0, e), \u0275fromNgModule: !0 } } function om(e, ...t) { const n = [], r = new Set; let o; const i = s => { n.push(s) }; return Pr(t, s => { const a = s; Js(a, i, [], r) && (o ||= [], o.push(a)) }), void 0 !== o && im(o, i), n } function im(e, t) { for (let n = 0; n < e.length; n++) { const { ngModule: r, providers: o } = e[n]; tl(o, i => { t(i, r) }) } } function Js(e, t, n, r) { if (!(e = R(e))) return !1; let o = null, i = ds(e); const s = !i && q(e); if (i || s) { if (s && !s.standalone) return !1; o = e } else { const u = e.ngModule; if (i = ds(u), !i) return !1; o = u } const a = r.has(o); if (s) { if (a) return !1; if (r.add(o), s.dependencies) { const u = "function" == typeof s.dependencies ? s.dependencies() : s.dependencies; for (const c of u) Js(c, t, n, r) } } else { if (!i) return !1; { if (null != i.imports && !a) { let c; r.add(o); try { Pr(i.imports, l => { Js(l, t, n, r) && (c ||= [], c.push(l)) }) } finally { } void 0 !== c && im(c, t) } if (!a) { const c = Wn(o) || (() => new o); t({ provide: o, useFactory: c, deps: Z }, o), t({ provide: rm, useValue: o, multi: !0 }, o), t({ provide: oi, useValue: () => I(o), multi: !0 }, o) } const u = i.providers; if (null != u && !a) { const c = e; tl(u, l => { t(l, c) }) } } } return o !== e && void 0 !== e.providers } function tl(e, t) { for (let n of e) Gu(n) && (n = n.\u0275providers), Array.isArray(n) ? tl(n, t) : t(n) } const g0 = K({ provide: String, useValue: K }); function nl(e) { return null !== e && "object" == typeof e && g0 in e } function Xn(e) { return "function" == typeof e } const rl = new M("Set Injector scope."), Ks = {}, v0 = {}; let ol; function ea() { return void 0 === ol && (ol = new Kc), ol } class lt { } class Br extends lt { get destroyed() { return this._destroyed } constructor(t, n, r, o) { super(), this.parent = n, this.source = r, this.scopes = o, this.records = new Map, this._ngOnDestroyHooks = new Set, this._onDestroyHooks = [], this._destroyed = !1, sl(t, s => this.processProvider(s)), this.records.set(nm, Hr(void 0, this)), o.has("environment") && this.records.set(lt, Hr(void 0, this)); const i = this.records.get(rl); null != i && "string" == typeof i.value && this.scopes.add(i.value), this.injectorDefTypes = new Set(this.get(rm.multi, Z, z.Self)) } destroy() { this.assertNotDestroyed(), this._destroyed = !0; try { for (const n of this._ngOnDestroyHooks) n.ngOnDestroy(); const t = this._onDestroyHooks; this._onDestroyHooks = []; for (const n of t) n() } finally { this.records.clear(), this._ngOnDestroyHooks.clear(), this.injectorDefTypes.clear() } } onDestroy(t) { return this.assertNotDestroyed(), this._onDestroyHooks.push(t), () => this.removeOnDestroy(t) } runInContext(t) { this.assertNotDestroyed(); const n = En(this), r = Qe(void 0); try { return t() } finally { En(n), Qe(r) } } get(t, n = No, r = z.Default) { if (this.assertNotDestroyed(), t.hasOwnProperty(Uh)) return t[Uh](this); r = ps(r); const i = En(this), s = Qe(void 0); try { if (!(r & z.SkipSelf)) { let u = this.records.get(t); if (void 0 === u) { const c = function w0(e) { return "function" == typeof e || "object" == typeof e && e instanceof M }(t) && ls(t); u = c && this.injectableDefInScope(c) ? Hr(il(t), Ks) : null, this.records.set(t, u) } if (null != u) return this.hydrate(t, u) } return (r & z.Self ? ea() : this.parent).get(t, n = r & z.Optional && n === No ? null : n) } catch (a) { if ("NullInjectorError" === a.name) { if ((a[hs] = a[hs] || []).unshift(be(t)), i) throw a; return function mM(e, t, n, r) { const o = e[hs]; throw t[Bh] && o.unshift(t[Bh]), e.message = function vM(e, t, n, r = null) { e = e && "\n" === e.charAt(0) && "\u0275" == e.charAt(1) ? e.slice(2) : e; let o = be(t); if (Array.isArray(t)) o = t.map(be).join(" -> "); else if ("object" == typeof t) { let i = []; for (let s in t) if (t.hasOwnProperty(s)) { let a = t[s]; i.push(s + ":" + ("string" == typeof a ? JSON.stringify(a) : be(a))) } o = `{${i.join(", ")}}` } return `${n}${r ? "(" + r + ")" : ""}[${o}]: ${e.replace(dM, "\n  ")}` }("\n" + e.message, o, n, r), e.ngTokenPath = o, e[hs] = null, e }(a, t, "R3InjectorError", this.source) } throw a } finally { Qe(s), En(i) } } resolveInjectorInitializers() { const t = En(this), n = Qe(void 0); try { const o = this.get(oi.multi, Z, z.Self); for (const i of o) i() } finally { En(t), Qe(n) } } toString() { const t = [], n = this.records; for (const r of n.keys()) t.push(be(r)); return `R3Injector[${t.join(", ")}]` } assertNotDestroyed() { if (this._destroyed) throw new C(205, !1) } processProvider(t) { let n = Xn(t = R(t)) ? t : R(t && t.provide); const r = function _0(e) { return nl(e) ? Hr(void 0, e.useValue) : Hr(um(e), Ks) }(t); if (Xn(t) || !0 !== t.multi) this.records.get(n); else { let o = this.records.get(n); o || (o = Hr(void 0, Ks, !0), o.factory = () => ec(o.multi), this.records.set(n, o)), n = t, o.multi.push(t) } this.records.set(n, r) } hydrate(t, n) { return n.value === Ks && (n.value = v0, n.value = n.factory()), "object" == typeof n.value && n.value && function D0(e) { return null !== e && "object" == typeof e && "function" == typeof e.ngOnDestroy }(n.value) && this._ngOnDestroyHooks.add(n.value), n.value } injectableDefInScope(t) { if (!t.providedIn) return !1; const n = R(t.providedIn); return "string" == typeof n ? "any" === n || this.scopes.has(n) : this.injectorDefTypes.has(n) } removeOnDestroy(t) { const n = this._onDestroyHooks.indexOf(t); -1 !== n && this._onDestroyHooks.splice(n, 1) } } function il(e) { const t = ls(e), n = null !== t ? t.factory : Wn(e); if (null !== n) return n; if (e instanceof M) throw new C(204, !1); if (e instanceof Function) return function y0(e) { const t = e.length; if (t > 0) throw function Yo(e, t) { const n = []; for (let r = 0; r < e; r++)n.push(t); return n }(t, "?"), new C(204, !1); const n = function aM(e) { return e && (e[fs] || e[kh]) || null }(e); return null !== n ? () => n.factory(e) : () => new e }(e); throw new C(204, !1) } function um(e, t, n) { let r; if (Xn(e)) { const o = R(e); return Wn(o) || il(o) } if (nl(e)) r = () => R(e.useValue); else if (function am(e) { return !(!e || !e.useFactory) }(e)) r = () => e.useFactory(...ec(e.deps || [])); else if (function sm(e) { return !(!e || !e.useExisting) }(e)) r = () => I(R(e.useExisting)); else { const o = R(e && (e.useClass || e.provide)); if (!function C0(e) { return !!e.deps }(e)) return Wn(o) || il(o); r = () => new o(...ec(e.deps)) } return r } function Hr(e, t, n = !1) { return { factory: e, value: t, multi: n ? [] : void 0 } } function sl(e, t) { for (const n of e) Array.isArray(n) ? sl(n, t) : n && Gu(n) ? sl(n.\u0275providers, t) : t(n) } const ta = new M("AppId", { providedIn: "root", factory: () => E0 }), E0 = "ng", cm = new M("Platform Initializer"), Jn = new M("Platform ID", { providedIn: "platform", factory: () => "unknown" }), lm = new M("CSP nonce", { providedIn: "root", factory: () => function Vr() { if (void 0 !== Wc) return Wc; if (typeof document < "u") return document; throw new C(210, !1) }().body?.querySelector("[ngCspNonce]")?.getAttribute("ngCspNonce") || null }); let dm = (e, t, n) => null; function pl(e, t, n = !1) { return dm(e, t, n) } class x0 { } class pm { } class F0 { resolveComponentFactory(t) { throw function R0(e) { const t = Error(`No component factory found for ${be(e)}.`); return t.ngComponent = e, t }(t) } } let aa = (() => { class e { static #e = this.NULL = new F0 } return e })(); function k0() { return zr(Pe(), y()) } function zr(e, t) { return new dt(Ke(e, t)) } let dt = (() => { class e { constructor(n) { this.nativeElement = n } static #e = this.__NG_ELEMENT_ID__ = k0 } return e })(); class mm { } let cn = (() => { class e { constructor() { this.destroyNode = null } static #e = this.__NG_ELEMENT_ID__ = () => function V0() { const e = y(), n = ut(Pe().index, e); return (Je(n) ? n : e)[L] }() } return e })(), j0 = (() => { class e { static #e = this.\u0275prov = S({ token: e, providedIn: "root", factory: () => null }) } return e })(); class ai { constructor(t) { this.full = t, this.major = t.split(".")[0], this.minor = t.split(".")[1], this.patch = t.split(".").slice(2).join(".") } } const B0 = new ai("16.2.12"), vl = {}; function Cm(e, t = null, n = null, r) { const o = Dm(e, t, n, r); return o.resolveInjectorInitializers(), o } function Dm(e, t = null, n = null, r, o = new Set) { const i = [n || Z, p0(e)]; return r = r || ("object" == typeof e ? void 0 : be(e)), new Br(i, t || ea(), r || null, o) } let ft = (() => { class e { static #e = this.THROW_IF_NOT_FOUND = No; static #t = this.NULL = new Kc; static create(n, r) { if (Array.isArray(n)) return Cm({ name: "" }, r, n, ""); { const o = n.name ?? ""; return Cm({ name: o }, n.parent, n.providers, o) } } static #n = this.\u0275prov = S({ token: e, providedIn: "any", factory: () => I(nm) }); static #r = this.__NG_ELEMENT_ID__ = -1 } return e })(); function _l(e) { return e.ngOriginalError } class ln { constructor() { this._console = console } handleError(t) { const n = this._findOriginalError(t); this._console.error("ERROR", t), n && this._console.error("ORIGINAL ERROR", n) } _findOriginalError(t) { let n = t && _l(t); for (; n && _l(n);)n = _l(n); return n || null } } function Dl(e) { return t => { setTimeout(e, void 0, t) } } const pe = class W0 extends It { constructor(t = !1) { super(), this.__isAsync = t } emit(t) { super.next(t) } subscribe(t, n, r) { let o = t, i = n || (() => null), s = r; if (t && "object" == typeof t) { const u = t; o = u.next?.bind(u), i = u.error?.bind(u), s = u.complete?.bind(u) } this.__isAsync && (i = Dl(i), o && (o = Dl(o)), s && (s = Dl(s))); const a = super.subscribe({ next: o, error: i, complete: s }); return t instanceof rt && t.add(a), a } }; function Em(...e) { } class ae { constructor({ enableLongStackTrace: t = !1, shouldCoalesceEventChangeDetection: n = !1, shouldCoalesceRunChangeDetection: r = !1 }) { if (this.hasPendingMacrotasks = !1, this.hasPendingMicrotasks = !1, this.isStable = !0, this.onUnstable = new pe(!1), this.onMicrotaskEmpty = new pe(!1), this.onStable = new pe(!1), this.onError = new pe(!1), typeof Zone > "u") throw new C(908, !1); Zone.assertZonePatched(); const o = this; o._nesting = 0, o._outer = o._inner = Zone.current, Zone.TaskTrackingZoneSpec && (o._inner = o._inner.fork(new Zone.TaskTrackingZoneSpec)), t && Zone.longStackTraceZoneSpec && (o._inner = o._inner.fork(Zone.longStackTraceZoneSpec)), o.shouldCoalesceEventChangeDetection = !r && n, o.shouldCoalesceRunChangeDetection = r, o.lastRequestAnimationFrameId = -1, o.nativeRequestAnimationFrame = function Z0() { const e = "function" == typeof ie.requestAnimationFrame; let t = ie[e ? "requestAnimationFrame" : "setTimeout"], n = ie[e ? "cancelAnimationFrame" : "clearTimeout"]; if (typeof Zone < "u" && t && n) { const r = t[Zone.__symbol__("OriginalDelegate")]; r && (t = r); const o = n[Zone.__symbol__("OriginalDelegate")]; o && (n = o) } return { nativeRequestAnimationFrame: t, nativeCancelAnimationFrame: n } }().nativeRequestAnimationFrame, function X0(e) { const t = () => { !function Q0(e) { e.isCheckStableRunning || -1 !== e.lastRequestAnimationFrameId || (e.lastRequestAnimationFrameId = e.nativeRequestAnimationFrame.call(ie, () => { e.fakeTopEventTask || (e.fakeTopEventTask = Zone.root.scheduleEventTask("fakeTopEventTask", () => { e.lastRequestAnimationFrameId = -1, El(e), e.isCheckStableRunning = !0, wl(e), e.isCheckStableRunning = !1 }, void 0, () => { }, () => { })), e.fakeTopEventTask.invoke() }), El(e)) }(e) }; e._inner = e._inner.fork({ name: "angular", properties: { isAngularZone: !0 }, onInvokeTask: (n, r, o, i, s, a) => { if (function K0(e) { return !(!Array.isArray(e) || 1 !== e.length) && !0 === e[0].data?.__ignore_ng_zone__ }(a)) return n.invokeTask(o, i, s, a); try { return bm(e), n.invokeTask(o, i, s, a) } finally { (e.shouldCoalesceEventChangeDetection && "eventTask" === i.type || e.shouldCoalesceRunChangeDetection) && t(), Mm(e) } }, onInvoke: (n, r, o, i, s, a, u) => { try { return bm(e), n.invoke(o, i, s, a, u) } finally { e.shouldCoalesceRunChangeDetection && t(), Mm(e) } }, onHasTask: (n, r, o, i) => { n.hasTask(o, i), r === o && ("microTask" == i.change ? (e._hasPendingMicrotasks = i.microTask, El(e), wl(e)) : "macroTask" == i.change && (e.hasPendingMacrotasks = i.macroTask)) }, onHandleError: (n, r, o, i) => (n.handleError(o, i), e.runOutsideAngular(() => e.onError.emit(i)), !1) }) }(o) } static isInAngularZone() { return typeof Zone < "u" && !0 === Zone.current.get("isAngularZone") } static assertInAngularZone() { if (!ae.isInAngularZone()) throw new C(909, !1) } static assertNotInAngularZone() { if (ae.isInAngularZone()) throw new C(909, !1) } run(t, n, r) { return this._inner.run(t, n, r) } runTask(t, n, r, o) { const i = this._inner, s = i.scheduleEventTask("NgZoneEvent: " + o, t, Y0, Em, Em); try { return i.runTask(s, n, r) } finally { i.cancelTask(s) } } runGuarded(t, n, r) { return this._inner.runGuarded(t, n, r) } runOutsideAngular(t) { return this._outer.run(t) } } const Y0 = {}; function wl(e) { if (0 == e._nesting && !e.hasPendingMicrotasks && !e.isStable) try { e._nesting++, e.onMicrotaskEmpty.emit(null) } finally { if (e._nesting--, !e.hasPendingMicrotasks) try { e.runOutsideAngular(() => e.onStable.emit(null)) } finally { e.isStable = !0 } } } function El(e) { e.hasPendingMicrotasks = !!(e._hasPendingMicrotasks || (e.shouldCoalesceEventChangeDetection || e.shouldCoalesceRunChangeDetection) && -1 !== e.lastRequestAnimationFrameId) } function bm(e) { e._nesting++, e.isStable && (e.isStable = !1, e.onUnstable.emit(null)) } function Mm(e) { e._nesting--, wl(e) } class J0 { constructor() { this.hasPendingMicrotasks = !1, this.hasPendingMacrotasks = !1, this.isStable = !0, this.onUnstable = new pe, this.onMicrotaskEmpty = new pe, this.onStable = new pe, this.onError = new pe } run(t, n, r) { return t.apply(n, r) } runGuarded(t, n, r) { return t.apply(n, r) } runOutsideAngular(t) { return t() } runTask(t, n, r, o) { return t.apply(n, r) } } const Im = new M("", { providedIn: "root", factory: Sm }); function Sm() { const e = E(ae); let t = !0; return function Xb(...e) { const t = Oo(e), n = function zb(e, t) { return "number" == typeof Hu(e) ? e.pop() : t }(e, 1 / 0), r = e; return r.length ? 1 === r.length ? ot(r[0]) : pr(n)(Ee(r, t)) : Vt }(new me(o => { t = e.isStable && !e.hasPendingMacrotasks && !e.hasPendingMicrotasks, e.runOutsideAngular(() => { o.next(t), o.complete() }) }), new me(o => { let i; e.runOutsideAngular(() => { i = e.onStable.subscribe(() => { ae.assertNotInAngularZone(), queueMicrotask(() => { !t && !e.hasPendingMacrotasks && !e.hasPendingMicrotasks && (t = !0, o.next(!0)) }) }) }); const s = e.onUnstable.subscribe(() => { ae.assertInAngularZone(), t && (t = !1, e.runOutsideAngular(() => { o.next(!1) })) }); return () => { i.unsubscribe(), s.unsubscribe() } }).pipe(xh())) } function dn(e) { return e instanceof Function ? e() : e } let bl = (() => { class e { constructor() { this.renderDepth = 0, this.handler = null } begin() { this.handler?.validateBegin(), this.renderDepth++ } end() { this.renderDepth--, 0 === this.renderDepth && this.handler?.execute() } ngOnDestroy() { this.handler?.destroy(), this.handler = null } static #e = this.\u0275prov = S({ token: e, providedIn: "root", factory: () => new e }) } return e })(); function ui(e) { for (; e;) { e[j] |= 64; const t = Jo(e); if (sc(e) && !t) return e; e = t } return null } const Pm = new M("", { providedIn: "root", factory: () => !1 }); let ca = null; function km(e, t) { return e[t] ?? jm() } function Lm(e, t) { const n = jm(); n.producerNode?.length && (e[t] = ca, n.lView = e, ca = Vm()) } const cA = { ...sp, consumerIsAlwaysLive: !0, consumerMarkedDirty: e => { ui(e.lView) }, lView: null }; function Vm() { return Object.create(cA) } function jm() { return ca ??= Vm(), ca } const V = {}; function Nn(e) { Bm(W(), y(), $e() + e, !1) } function Bm(e, t, n, r) { if (!r) if (3 == (3 & t[j])) { const i = e.preOrderCheckHooks; null !== i && Is(t, i, n) } else { const i = e.preOrderHooks; null !== i && Ss(t, i, 0, n) } Zn(n) } function D(e, t = z.Default) { const n = y(); return null === n ? I(e, t) : Kp(Pe(), n, R(e), t) } function la(e, t, n, r, o, i, s, a, u, c, l) { const d = t.blueprint.slice(); return d[he] = o, d[j] = 140 | r, (null !== c || e && 2048 & e[j]) && (d[j] |= 2048), Ip(d), d[le] = d[_r] = e, d[ve] = n, d[yr] = s || e && e[yr], d[L] = a || e && e[L], d[bn] = u || e && e[bn] || null, d[Re] = i, d[Vo] = function gS() { return pS++ }(), d[on] = l, d[np] = c, d[ye] = 2 == t.type ? e[ye] : d, d } function Wr(e, t, n, r, o) { let i = e.data[t]; if (null === i) i = function Ml(e, t, n, r, o) { const i = Rp(), s = pc(), u = e.data[t] = function vA(e, t, n, r, o, i) { let s = t ? t.injectorIndex : -1, a = 0; return function br() { return null !== x.skipHydrationRootTNode }() && (a |= 128), { type: n, index: r, insertBeforeIndex: null, injectorIndex: s, directiveStart: -1, directiveEnd: -1, directiveStylingLast: -1, componentOffset: -1, propertyBindings: null, flags: a, providerIndexes: 0, value: o, attrs: i, mergedAttrs: null, localNames: null, initialInputs: void 0, inputs: null, outputs: null, tView: null, next: null, prev: null, projectionNext: null, child: null, parent: t, projection: null, styles: null, stylesWithoutHost: null, residualStyles: void 0, classes: null, classesWithoutHost: null, residualClasses: void 0, classBindings: 0, styleBindings: 0 } }(0, s ? i : i && i.parent, n, t, r, o); return null === e.firstChild && (e.firstChild = u), null !== i && (s ? null == i.child && null !== u.parent && (i.child = u) : null === i.next && (i.next = u, u.prev = i)), u }(e, t, n, r, o), function pI() { return x.lFrame.inI18n }() && (i.flags |= 32); else if (64 & i.type) { i.type = n, i.value = r, i.attrs = o; const s = function Uo() { const e = x.lFrame, t = e.currentTNode; return e.isParent ? t : t.parent }(); i.injectorIndex = null === s ? -1 : s.injectorIndex } return Ut(i, !0), i } function ci(e, t, n, r) { if (0 === n) return -1; const o = t.length; for (let i = 0; i < n; i++)t.push(r), e.blueprint.push(r), e.data.push(null); return o } function $m(e, t, n, r, o) { const i = km(t, jo), s = $e(), a = 2 & r; try { Zn(-1), a && t.length > G && Bm(e, t, G, !1), $t(a ? 2 : 0, o); const c = a ? i : null, l = uc(c); try { null !== c && (c.dirty = !1), n(r, o) } finally { cc(c, l) } } finally { a && null === t[jo] && Lm(t, jo), Zn(s), $t(a ? 3 : 1, o) } } function Il(e, t, n) { if (ic(t)) { const r = _t(null); try { const i = t.directiveEnd; for (let s = t.directiveStart; s < i; s++) { const a = e.data[s]; a.contentQueries && a.contentQueries(1, n[s], s) } } finally { _t(r) } } } function Sl(e, t, n) { Np() && (function bA(e, t, n, r) { const o = n.directiveStart, i = n.directiveEnd; qn(n) && function NA(e, t, n) { const r = Ke(t, e), o = Um(n); let s = 16; n.signals ? s = 4096 : n.onPush && (s = 64); const a = da(e, la(e, o, null, s, r, t, null, e[yr].rendererFactory.createRenderer(r, n), null, null, null)); e[t.index] = a }(t, n, e.data[o + n.componentOffset]), e.firstCreatePass || Ts(n, t), Fe(r, t); const s = n.initialInputs; for (let a = o; a < i; a++) { const u = e.data[a], c = Yn(t, e, a, n); Fe(c, t), null !== s && PA(0, a - o, c, u, 0, s), Nt(u) && (ut(n.index, t)[ve] = Yn(t, e, a, n)) } }(e, t, n, Ke(n, t)), 64 == (64 & n.flags) && Zm(e, t, n)) } function Al(e, t, n = Ke) { const r = t.localNames; if (null !== r) { let o = t.index + 1; for (let i = 0; i < r.length; i += 2) { const s = r[i + 1], a = -1 === s ? n(t, e) : e[s]; e[o++] = a } } } function Um(e) { const t = e.tView; return null === t || t.incompleteFirstPass ? e.tView = Tl(1, null, e.template, e.decls, e.vars, e.directiveDefs, e.pipeDefs, e.viewQuery, e.schemas, e.consts, e.id) : t } function Tl(e, t, n, r, o, i, s, a, u, c, l) { const d = G + r, f = d + o, h = function dA(e, t) { const n = []; for (let r = 0; r < t; r++)n.push(r < e ? null : V); return n }(d, f), p = "function" == typeof c ? c() : c; return h[w] = { type: e, blueprint: h, template: n, queries: null, viewQuery: a, declTNode: t, data: h.slice().fill(null, d), bindingStartIndex: d, expandoStartIndex: f, hostBindingOpCodes: null, firstCreatePass: !0, firstUpdatePass: !0, staticViewQueries: !1, staticContentQueries: !1, preOrderHooks: null, preOrderCheckHooks: null, contentHooks: null, contentCheckHooks: null, viewHooks: null, viewCheckHooks: null, destroyHooks: null, cleanup: null, contentQueries: null, components: null, directiveRegistry: "function" == typeof i ? i() : i, pipeRegistry: "function" == typeof s ? s() : s, firstChild: null, schemas: u, consts: p, incompleteFirstPass: !1, ssrId: l } } let zm = e => null; function Gm(e, t, n, r) { for (let o in e) if (e.hasOwnProperty(o)) { n = null === n ? {} : n; const i = e[o]; null === r ? qm(n, t, o, i) : r.hasOwnProperty(o) && qm(n, t, r[o], i) } return n } function qm(e, t, n, r) { e.hasOwnProperty(n) ? e[n].push(t, r) : e[n] = [t, r] } function Ol(e, t, n, r) { if (Np()) { const o = null === r ? null : { "": -1 }, i = function IA(e, t) { const n = e.directiveRegistry; let r = null, o = null; if (n) for (let i = 0; i < n.length; i++) { const s = n[i]; if (Qh(t, s.selectors, !1)) if (r || (r = []), Nt(s)) if (null !== s.findHostDirectiveDefs) { const a = []; o = o || new Map, s.findHostDirectiveDefs(s, a, o), r.unshift(...a, s), Nl(e, t, a.length) } else r.unshift(s), Nl(e, t, 0); else o = o || new Map, s.findHostDirectiveDefs?.(s, r, o), r.push(s) } return null === r ? null : [r, o] }(e, n); let s, a; null === i ? s = a = null : [s, a] = i, null !== s && Wm(e, t, n, s, o, a), o && function SA(e, t, n) { if (t) { const r = e.localNames = []; for (let o = 0; o < t.length; o += 2) { const i = n[t[o + 1]]; if (null == i) throw new C(-301, !1); r.push(t[o], i) } } }(n, r, o) } n.mergedAttrs = Ro(n.mergedAttrs, n.attrs) } function Wm(e, t, n, r, o, i) { for (let c = 0; c < r.length; c++)Ic(Ts(n, t), e, r[c].type); !function TA(e, t, n) { e.flags |= 1, e.directiveStart = t, e.directiveEnd = t + n, e.providerIndexes = t }(n, e.data.length, r.length); for (let c = 0; c < r.length; c++) { const l = r[c]; l.providersResolver && l.providersResolver(l) } let s = !1, a = !1, u = ci(e, t, r.length, null); for (let c = 0; c < r.length; c++) { const l = r[c]; n.mergedAttrs = Ro(n.mergedAttrs, l.hostAttrs), OA(e, n, t, u, l), AA(u, l, o), null !== l.contentQueries && (n.flags |= 4), (null !== l.hostBindings || null !== l.hostAttrs || 0 !== l.hostVars) && (n.flags |= 64); const d = l.type.prototype; !s && (d.ngOnChanges || d.ngOnInit || d.ngDoCheck) && ((e.preOrderHooks ??= []).push(n.index), s = !0), !a && (d.ngOnChanges || d.ngDoCheck) && ((e.preOrderCheckHooks ??= []).push(n.index), a = !0), u++ } !function yA(e, t, n) { const o = t.directiveEnd, i = e.data, s = t.attrs, a = []; let u = null, c = null; for (let l = t.directiveStart; l < o; l++) { const d = i[l], f = n ? n.get(d) : null, p = f ? f.outputs : null; u = Gm(d.inputs, l, u, f ? f.inputs : null), c = Gm(d.outputs, l, c, p); const g = null === u || null === s || Yh(t) ? null : xA(u, l, s); a.push(g) } null !== u && (u.hasOwnProperty("class") && (t.flags |= 8), u.hasOwnProperty("style") && (t.flags |= 16)), t.initialInputs = a, t.inputs = u, t.outputs = c }(e, n, i) } function Zm(e, t, n) { const r = n.directiveStart, o = n.directiveEnd, i = n.index, s = function mI() { return x.lFrame.currentDirectiveIndex }(); try { Zn(i); for (let a = r; a < o; a++) { const u = e.data[a], c = t[a]; mc(a), (null !== u.hostBindings || 0 !== u.hostVars || null !== u.hostAttrs) && MA(u, c) } } finally { Zn(-1), mc(s) } } function MA(e, t) { null !== e.hostBindings && e.hostBindings(1, t) } function Nl(e, t, n) { t.componentOffset = n, (e.components ??= []).push(t.index) } function AA(e, t, n) { if (n) { if (t.exportAs) for (let r = 0; r < t.exportAs.length; r++)n[t.exportAs[r]] = e; Nt(t) && (n[""] = e) } } function OA(e, t, n, r, o) { e.data[r] = o; const i = o.factory || (o.factory = Wn(o.type)), s = new zo(i, Nt(o), D); e.blueprint[r] = s, n[r] = s, function wA(e, t, n, r, o) { const i = o.hostBindings; if (i) { let s = e.hostBindingOpCodes; null === s && (s = e.hostBindingOpCodes = []); const a = ~t.index; (function EA(e) { let t = e.length; for (; t > 0;) { const n = e[--t]; if ("number" == typeof n && n < 0) return n } return 0 })(s) != a && s.push(a), s.push(n, r, i) } }(e, t, r, ci(e, n, o.hostVars, V), o) } function PA(e, t, n, r, o, i) { const s = i[t]; if (null !== s) for (let a = 0; a < s.length;)Ym(r, n, s[a++], s[a++], s[a++]) } function Ym(e, t, n, r, o) { const i = _t(null); try { const s = e.inputTransforms; null !== s && s.hasOwnProperty(r) && (o = s[r].call(t, o)), null !== e.setInput ? e.setInput(t, o, n, r) : t[r] = o } finally { _t(i) } } function xA(e, t, n) { let r = null, o = 0; for (; o < n.length;) { const i = n[o]; if (0 !== i) if (5 !== i) { if ("number" == typeof i) break; if (e.hasOwnProperty(i)) { null === r && (r = []); const s = e[i]; for (let a = 0; a < s.length; a += 2)if (s[a] === t) { r.push(i, s[a + 1], n[o + 1]); break } } o += 2 } else o += 2; else o += 4 } return r } function Qm(e, t, n, r) { return [e, !0, !1, t, null, 0, r, n, null, null, null] } function Xm(e, t) { const n = e.contentQueries; if (null !== n) for (let r = 0; r < n.length; r += 2) { const i = n[r + 1]; if (-1 !== i) { const s = e.data[i]; yc(n[r]), s.contentQueries(2, t[i], i) } } } function da(e, t) { return e[ko] ? e[tp][Ot] = t : e[ko] = t, e[tp] = t, t } function xl(e, t, n) { yc(0); const r = _t(null); try { t(e, n) } finally { _t(r) } } function tv(e, t) { const n = e[bn], r = n ? n.get(ln, null) : null; r && r.handleError(t) } function Rl(e, t, n, r, o) { for (let i = 0; i < n.length;) { const s = n[i++], a = n[i++]; Ym(e.data[s], t[s], r, a, o) } } function RA(e, t) { const n = ut(t, e), r = n[w]; !function FA(e, t) { for (let n = t.length; n < e.blueprint.length; n++)t.push(e.blueprint[n]) }(r, n); const o = n[he]; null !== o && null === n[on] && (n[on] = pl(o, n[bn])), Fl(r, n, n[ve]) } function Fl(e, t, n) { _c(t); try { const r = e.viewQuery; null !== r && xl(1, r, n); const o = e.template; null !== o && $m(e, t, o, 1, n), e.firstCreatePass && (e.firstCreatePass = !1), e.staticContentQueries && Xm(e, t), e.staticViewQueries && xl(2, e.viewQuery, n); const i = e.components; null !== i && function kA(e, t) { for (let n = 0; n < t.length; n++)RA(e, t[n]) }(t, i) } catch (r) { throw e.firstCreatePass && (e.incompleteFirstPass = !0, e.firstCreatePass = !1), r } finally { t[j] &= -5, Cc() } } let nv = (() => { class e { constructor() { this.all = new Set, this.queue = new Map } create(n, r, o) { const i = typeof Zone > "u" ? null : Zone.current, s = function qM(e, t, n) { const r = Object.create(WM); n && (r.consumerAllowSignalWrites = !0), r.fn = e, r.schedule = t; const o = s => { r.cleanupFn = s }; return r.ref = { notify: () => lp(r), run: () => { if (r.dirty = !1, r.hasRun && !dp(r)) return; r.hasRun = !0; const s = uc(r); try { r.cleanupFn(), r.cleanupFn = _p, r.fn(o) } finally { cc(r, s) } }, cleanup: () => r.cleanupFn() }, r.ref }(n, c => { this.all.has(c) && this.queue.set(c, i) }, o); let a; this.all.add(s), s.notify(); const u = () => { s.cleanup(), a?.(), this.all.delete(s), this.queue.delete(s) }; return a = r?.onDestroy(u), { destroy: u } } flush() { if (0 !== this.queue.size) for (const [n, r] of this.queue) this.queue.delete(n), r ? r.run(() => n.run()) : n.run() } get isQueueEmpty() { return 0 === this.queue.size } static #e = this.\u0275prov = S({ token: e, providedIn: "root", factory: () => new e }) } return e })(); function fa(e, t, n) { let r = n ? e.styles : null, o = n ? e.classes : null, i = 0; if (null !== t) for (let s = 0; s < t.length; s++) { const a = t[s]; "number" == typeof a ? i = a : 1 == i ? o = Uu(o, a) : 2 == i && (r = Uu(r, a + ": " + t[++s] + ";")) } n ? e.styles = r : e.stylesWithoutHost = r, n ? e.classes = o : e.classesWithoutHost = o } function li(e, t, n, r, o = !1) { for (; null !== n;) { const i = t[n.index]; null !== i && r.push(se(i)), Be(i) && rv(i, r); const s = n.type; if (8 & s) li(e, t, n.child, r); else if (32 & s) { const a = Vc(n, t); let u; for (; u = a();)r.push(u) } else if (16 & s) { const a = Vg(t, n); if (Array.isArray(a)) r.push(...a); else { const u = Jo(t[ye]); li(u[w], u, a, r, !0) } } n = o ? n.projectionNext : n.next } return r } function rv(e, t) { for (let n = Oe; n < e.length; n++) { const r = e[n], o = r[w].firstChild; null !== o && li(r[w], r, o, t) } e[Ht] !== e[he] && t.push(e[Ht]) } function ha(e, t, n, r = !0) { const o = t[yr], i = o.rendererFactory, s = o.afterRenderEventManager; i.begin?.(), s?.begin(); try { ov(e, t, e.template, n) } catch (u) { throw r && tv(t, u), u } finally { i.end?.(), o.effectManager?.flush(), s?.end() } } function ov(e, t, n, r) { const o = t[j]; if (256 != (256 & o)) { t[yr].effectManager?.flush(), _c(t); try { Ip(t), function kp(e) { return x.lFrame.bindingIndex = e }(e.bindingStartIndex), null !== n && $m(e, t, n, 2, r); const s = 3 == (3 & o); if (s) { const c = e.preOrderCheckHooks; null !== c && Is(t, c, null) } else { const c = e.preOrderHooks; null !== c && Ss(t, c, 0, null), Dc(t, 0) } if (function jA(e) { for (let t = Ig(e); null !== t; t = Sg(t)) { if (!t[rp]) continue; const n = t[Dr]; for (let r = 0; r < n.length; r++) { rI(n[r]) } } }(t), iv(t, 2), null !== e.contentQueries && Xm(e, t), s) { const c = e.contentCheckHooks; null !== c && Is(t, c) } else { const c = e.contentHooks; null !== c && Ss(t, c, 1), Dc(t, 1) } !function lA(e, t) { const n = e.hostBindingOpCodes; if (null === n) return; const r = km(t, Bo); try { for (let o = 0; o < n.length; o++) { const i = n[o]; if (i < 0) Zn(~i); else { const s = i, a = n[++o], u = n[++o]; gI(a, s), r.dirty = !1; const c = uc(r); try { u(2, t[s]) } finally { cc(r, c) } } } } finally { null === t[Bo] && Lm(t, Bo), Zn(-1) } }(e, t); const a = e.components; null !== a && av(t, a, 0); const u = e.viewQuery; if (null !== u && xl(2, u, r), s) { const c = e.viewCheckHooks; null !== c && Is(t, c) } else { const c = e.viewHooks; null !== c && Ss(t, c, 2), Dc(t, 2) } !0 === e.firstUpdatePass && (e.firstUpdatePass = !1), t[j] &= -73, Sp(t) } finally { Cc() } } } function iv(e, t) { for (let n = Ig(e); null !== n; n = Sg(n))for (let r = Oe; r < n.length; r++)sv(n[r], t) } function BA(e, t, n) { sv(ut(t, e), n) } function sv(e, t) { if (!function tI(e) { return 128 == (128 & e[j]) }(e)) return; const n = e[w], r = e[j]; if (80 & r && 0 === t || 1024 & r || 2 === t) ov(n, e, n.template, e[ve]); else if (e[Fo] > 0) { iv(e, 1); const o = n.components; null !== o && av(e, o, 1) } } function av(e, t, n) { for (let r = 0; r < t.length; r++)BA(e, t[r], n) } class di { get rootNodes() { const t = this._lView, n = t[w]; return li(n, t, n.firstChild, []) } constructor(t, n) { this._lView = t, this._cdRefInjectingView = n, this._appRef = null, this._attachedToViewContainer = !1 } get context() { return this._lView[ve] } set context(t) { this._lView[ve] = t } get destroyed() { return 256 == (256 & this._lView[j]) } destroy() { if (this._appRef) this._appRef.detachView(this); else if (this._attachedToViewContainer) { const t = this._lView[le]; if (Be(t)) { const n = t[8], r = n ? n.indexOf(this) : -1; r > -1 && (Gs(t, r), xs(n, r)) } this._attachedToViewContainer = !1 } Bc(this._lView[w], this._lView) } onDestroy(t) { !function Tp(e, t) { if (256 == (256 & e[j])) throw new C(911, !1); null === e[Mn] && (e[Mn] = []), e[Mn].push(t) }(this._lView, t) } markForCheck() { ui(this._cdRefInjectingView || this._lView) } detach() { this._lView[j] &= -129 } reattach() { this._lView[j] |= 128 } detectChanges() { ha(this._lView[w], this._lView, this.context) } checkNoChanges() { } attachToViewContainerRef() { if (this._appRef) throw new C(902, !1); this._attachedToViewContainer = !0 } detachFromAppRef() { this._appRef = null, function TS(e, t) { ei(e, t, t[L], 2, null, null) }(this._lView[w], this._lView) } attachToAppRef(t) { if (this._attachedToViewContainer) throw new C(902, !1); this._appRef = t } } class HA extends di { constructor(t) { super(t), this._view = t } detectChanges() { const t = this._view; ha(t[w], t, t[ve], !1) } checkNoChanges() { } get context() { return null } } class uv extends aa { constructor(t) { super(), this.ngModule = t } resolveComponentFactory(t) { const n = q(t); return new fi(n, this.ngModule) } } function cv(e) { const t = []; for (let n in e) e.hasOwnProperty(n) && t.push({ propName: e[n], templateName: n }); return t } class UA { constructor(t, n) { this.injector = t, this.parentInjector = n } get(t, n, r) { r = ps(r); const o = this.injector.get(t, vl, r); return o !== vl || n === vl ? o : this.parentInjector.get(t, n, r) } } class fi extends pm { get inputs() { const t = this.componentDef, n = t.inputTransforms, r = cv(t.inputs); if (null !== n) for (const o of r) n.hasOwnProperty(o.propName) && (o.transform = n[o.propName]); return r } get outputs() { return cv(this.componentDef.outputs) } constructor(t, n) { super(), this.componentDef = t, this.ngModule = n, this.componentType = t.type, this.selector = function SM(e) { return e.map(IM).join(",") }(t.selectors), this.ngContentSelectors = t.ngContentSelectors ? t.ngContentSelectors : [], this.isBoundToModule = !!n } create(t, n, r, o) { let i = (o = o || this.ngModule) instanceof lt ? o : o?.injector; i && null !== this.componentDef.getStandaloneInjector && (i = this.componentDef.getStandaloneInjector(i) || i); const s = i ? new UA(t, i) : t, a = s.get(mm, null); if (null === a) throw new C(407, !1); const d = { rendererFactory: a, sanitizer: s.get(j0, null), effectManager: s.get(nv, null), afterRenderEventManager: s.get(bl, null) }, f = a.createRenderer(null, this.componentDef), h = this.componentDef.selectors[0][0] || "div", p = r ? function fA(e, t, n, r) { const i = r.get(Pm, !1) || n === At.ShadowDom, s = e.selectRootElement(t, i); return function hA(e) { zm(e) }(s), s }(f, r, this.componentDef.encapsulation, s) : zs(f, h, function $A(e) { const t = e.toLowerCase(); return "svg" === t ? "svg" : "math" === t ? "math" : null }(h)), _ = this.componentDef.signals ? 4608 : this.componentDef.onPush ? 576 : 528; let m = null; null !== p && (m = pl(p, s, !0)); const b = Tl(0, null, null, 1, 0, null, null, null, null, null, null), T = la(null, b, null, _, null, null, d, f, s, null, m); let U, Se; _c(T); try { const en = this.componentDef; let hr, sh = null; en.findHostDirectiveDefs ? (hr = [], sh = new Map, en.findHostDirectiveDefs(en, hr, sh), hr.push(en)) : hr = [en]; const kj = function GA(e, t) { const n = e[w], r = G; return e[r] = t, Wr(n, r, 2, "#host", null) }(T, p), Lj = function qA(e, t, n, r, o, i, s) { const a = o[w]; !function WA(e, t, n, r) { for (const o of e) t.mergedAttrs = Ro(t.mergedAttrs, o.hostAttrs); null !== t.mergedAttrs && (fa(t, t.mergedAttrs, !0), null !== n && $g(r, n, t)) }(r, e, t, s); let u = null; null !== t && (u = pl(t, o[bn])); const c = i.rendererFactory.createRenderer(t, n); let l = 16; n.signals ? l = 4096 : n.onPush && (l = 64); const d = la(o, Um(n), null, l, o[e.index], e, i, c, null, null, u); return a.firstCreatePass && Nl(a, e, r.length - 1), da(o, d), o[e.index] = d }(kj, p, en, hr, T, d, f); Se = Mp(b, G), p && function YA(e, t, n, r) { if (r) rc(e, n, ["ng-version", B0.full]); else { const { attrs: o, classes: i } = function AM(e) { const t = [], n = []; let r = 1, o = 2; for (; r < e.length;) { let i = e[r]; if ("string" == typeof i) 2 === o ? "" !== i && t.push(i, e[++r]) : 8 === o && n.push(i); else { if (!Tt(o)) break; o = i } r++ } return { attrs: t, classes: n } }(t.selectors[0]); o && rc(e, n, o), i && i.length > 0 && Hg(e, n, i.join(" ")) } }(f, en, p, r), void 0 !== n && function QA(e, t, n) { const r = e.projection = []; for (let o = 0; o < t.length; o++) { const i = n[o]; r.push(null != i ? Array.from(i) : null) } }(Se, this.ngContentSelectors, n), U = function ZA(e, t, n, r, o, i) { const s = Pe(), a = o[w], u = Ke(s, o); Wm(a, o, s, n, null, r); for (let l = 0; l < n.length; l++)Fe(Yn(o, a, s.directiveStart + l, s), o); Zm(a, o, s), u && Fe(u, o); const c = Yn(o, a, s.directiveStart + s.componentOffset, s); if (e[ve] = o[ve] = c, null !== i) for (const l of i) l(c, t); return Il(a, s, e), c }(Lj, en, hr, sh, T, [XA]), Fl(b, T, null) } finally { Cc() } return new zA(this.componentType, U, zr(Se, T), T, Se) } } class zA extends x0 { constructor(t, n, r, o, i) { super(), this.location = r, this._rootLView = o, this._tNode = i, this.previousInputValues = null, this.instance = n, this.hostView = this.changeDetectorRef = new HA(o), this.componentType = t } setInput(t, n) { const r = this._tNode.inputs; let o; if (null !== r && (o = r[t])) { if (this.previousInputValues ??= new Map, this.previousInputValues.has(t) && Object.is(this.previousInputValues.get(t), n)) return; const i = this._rootLView; Rl(i[w], i, o, t, n), this.previousInputValues.set(t, n), ui(ut(this._tNode.index, i)) } } get injector() { return new Ue(this._tNode, this._rootLView) } destroy() { this.hostView.destroy() } onDestroy(t) { this.hostView.onDestroy(t) } } function XA() { const e = Pe(); Ms(y()[w], e) } function ee(e) { let t = function lv(e) { return Object.getPrototypeOf(e.prototype).constructor }(e.type), n = !0; const r = [e]; for (; t;) { let o; if (Nt(e)) o = t.\u0275cmp || t.\u0275dir; else { if (t.\u0275cmp) throw new C(903, !1); o = t.\u0275dir } if (o) { if (n) { r.push(o); const s = e; s.inputs = pa(e.inputs), s.inputTransforms = pa(e.inputTransforms), s.declaredInputs = pa(e.declaredInputs), s.outputs = pa(e.outputs); const a = o.hostBindings; a && tT(e, a); const u = o.viewQuery, c = o.contentQueries; if (u && KA(e, u), c && eT(e, c), us(e.inputs, o.inputs), us(e.declaredInputs, o.declaredInputs), us(e.outputs, o.outputs), null !== o.inputTransforms && (null === s.inputTransforms && (s.inputTransforms = {}), us(s.inputTransforms, o.inputTransforms)), Nt(o) && o.data.animation) { const l = e.data; l.animation = (l.animation || []).concat(o.data.animation) } } const i = o.features; if (i) for (let s = 0; s < i.length; s++) { const a = i[s]; a && a.ngInherit && a(e), a === ee && (n = !1) } } t = Object.getPrototypeOf(t) } !function JA(e) { let t = 0, n = null; for (let r = e.length - 1; r >= 0; r--) { const o = e[r]; o.hostVars = t += o.hostVars, o.hostAttrs = Ro(o.hostAttrs, n = Ro(n, o.hostAttrs)) } }(r) } function pa(e) { return e === jt ? {} : e === Z ? [] : e } function KA(e, t) { const n = e.viewQuery; e.viewQuery = n ? (r, o) => { t(r, o), n(r, o) } : t } function eT(e, t) { const n = e.contentQueries; e.contentQueries = n ? (r, o, i) => { t(r, o, i), n(r, o, i) } : t } function tT(e, t) { const n = e.hostBindings; e.hostBindings = n ? (r, o) => { t(r, o), n(r, o) } : t } function ga(e) { return !!kl(e) && (Array.isArray(e) || !(e instanceof Map) && Symbol.iterator in e) } function kl(e) { return null !== e && ("function" == typeof e || "object" == typeof e) } function ke(e, t, n) { return !Object.is(e[t], n) && (e[t] = n, !0) } let Av = function Tv(e, t, n, r) { return An(!0), t[L].createComment("") }; function vi(e, t, n) { const r = y(); return ke(r, Mr(), t) && function ht(e, t, n, r, o, i, s, a) { const u = Ke(t, n); let l, c = t.inputs; !a && null != c && (l = c[r]) ? (Rl(e, n, l, r, o), qn(t) && function CA(e, t) { const n = ut(t, e); 16 & n[j] || (n[j] |= 64) }(n, t.index)) : 3 & t.type && (r = function _A(e) { return "class" === e ? "className" : "for" === e ? "htmlFor" : "formaction" === e ? "formAction" : "innerHtml" === e ? "innerHTML" : "readonly" === e ? "readOnly" : "tabindex" === e ? "tabIndex" : e }(r), o = null != s ? s(o, t.value || "", r) : o, i.setProperty(u, r, o)) }(W(), function fe() { const e = x.lFrame; return Mp(e.tView, e.selectedIndex) }(), r, e, t, r[L], n, !1), vi } function $l(e, t, n, r, o) { const s = o ? "class" : "style"; Rl(e, n, t.inputs[s], s, r) } function A(e, t, n, r) { const o = y(), i = W(), s = G + e, a = o[L], u = i.firstCreatePass ? function NT(e, t, n, r, o, i) { const s = t.consts, u = Wr(t, e, 2, r, Sn(s, o)); return Ol(t, n, u, Sn(s, i)), null !== u.attrs && fa(u, u.attrs, !1), null !== u.mergedAttrs && fa(u, u.mergedAttrs, !0), null !== t.queries && t.queries.elementStart(t, u), u }(s, i, o, t, n, r) : i.data[s], c = Ov(i, o, u, a, t, e); o[s] = c; const l = Cs(u); return Ut(u, !0), $g(a, c, u), 32 != (32 & u.flags) && bs() && Ws(i, o, c, u), 0 === function iI() { return x.lFrame.elementDepthCount }() && Fe(c, o), function sI() { x.lFrame.elementDepthCount++ }(), l && (Sl(i, o, u), Il(i, u, o)), null !== r && Al(o, u), A } function O() { let e = Pe(); pc() ? function gc() { x.lFrame.isParent = !1 }() : (e = e.parent, Ut(e, !1)); const t = e; (function uI(e) { return x.skipHydrationRootTNode === e })(t) && function fI() { x.skipHydrationRootTNode = null }(), function aI() { x.lFrame.elementDepthCount-- }(); const n = W(); return n.firstCreatePass && (Ms(n, e), ic(e) && n.queries.elementEnd(e)), null != t.classesWithoutHost && function SI(e) { return 0 != (8 & e.flags) }(t) && $l(n, t, y(), t.classesWithoutHost, !0), null != t.stylesWithoutHost && function AI(e) { return 0 != (16 & e.flags) }(t) && $l(n, t, y(), t.stylesWithoutHost, !1), O } function ze(e, t, n, r) { return A(e, t, n, r), O(), ze } let Ov = (e, t, n, r, o, i) => (An(!0), zs(r, o, function zp() { return x.lFrame.currentNamespace }())); function yi(e) { return !!e && "function" == typeof e.then } function Rv(e) { return !!e && "function" == typeof e.subscribe } function Ge(e, t, n, r) { const o = y(), i = W(), s = Pe(); return function kv(e, t, n, r, o, i, s) { const a = Cs(r), c = e.firstCreatePass && function Km(e) { return e.cleanup || (e.cleanup = []) }(e), l = t[ve], d = function Jm(e) { return e[vr] || (e[vr] = []) }(t); let f = !0; if (3 & r.type || s) { const g = Ke(r, t), v = s ? s(g) : g, _ = d.length, m = s ? T => s(se(T[r.index])) : r.index; let b = null; if (!s && a && (b = function LT(e, t, n, r) { const o = e.cleanup; if (null != o) for (let i = 0; i < o.length - 1; i += 2) { const s = o[i]; if (s === n && o[i + 1] === r) { const a = t[vr], u = o[i + 2]; return a.length > u ? a[u] : null } "string" == typeof s && (i += 2) } return null }(e, t, o, r.index)), null !== b) (b.__ngLastListenerFn__ || b).__ngNextListenerFn__ = i, b.__ngLastListenerFn__ = i, f = !1; else { i = Vv(r, t, l, i, !1); const T = n.listen(v, o, i); d.push(i, T), c && c.push(o, m, _, _ + 1) } } else i = Vv(r, t, l, i, !1); const h = r.outputs; let p; if (f && null !== h && (p = h[o])) { const g = p.length; if (g) for (let v = 0; v < g; v += 2) { const U = t[p[v]][p[v + 1]].subscribe(i), Se = d.length; d.push(i, U), c && c.push(o, r.index, Se, -(Se + 1)) } } }(i, o, o[L], s, e, t, r), Ge } function Lv(e, t, n, r) { try { return $t(6, t, n), !1 !== n(r) } catch (o) { return tv(e, o), !1 } finally { $t(7, t, n) } } function Vv(e, t, n, r, o) { return function i(s) { if (s === Function) return r; ui(e.componentOffset > -1 ? ut(e.index, t) : t); let u = Lv(t, n, r, s), c = i.__ngNextListenerFn__; for (; c;)u = Lv(t, n, c, s) && u, c = c.__ngNextListenerFn__; return o && !1 === u && s.preventDefault(), u } } function jv(e = 1) { return function yI(e) { return (x.lFrame.contextLView = function _I(e, t) { for (; e > 0;)t = t[_r], e--; return t }(e, x.lFrame.contextLView))[ve] }(e) } function Ca(e, t) { return e << 17 | t << 2 } function Pn(e) { return e >> 17 & 32767 } function ql(e) { return 2 | e } function er(e) { return (131068 & e) >> 2 } function Wl(e, t) { return -131069 & e | t << 2 } function Zl(e) { return 1 | e } function Yv(e, t, n, r, o) { const i = e[n + 1], s = null === t; let a = r ? Pn(i) : er(i), u = !1; for (; 0 !== a && (!1 === u || s);) { const l = e[a + 1]; qT(e[a], t) && (u = !0, e[a + 1] = r ? Zl(l) : ql(l)), a = r ? Pn(l) : er(l) } u && (e[n + 1] = r ? ql(i) : Zl(i)) } function qT(e, t) { return null === e || null == t || (Array.isArray(e) ? e[1] : e) === t || !(!Array.isArray(e) || "string" != typeof t) && xr(e, t) >= 0 } function Da(e, t) { return function Pt(e, t, n, r) { const o = y(), i = W(), s = function an(e) { const t = x.lFrame, n = t.bindingIndex; return t.bindingIndex = t.bindingIndex + e, n }(2); i.firstUpdatePass && function oy(e, t, n, r) { const o = e.data; if (null === o[n + 1]) { const i = o[$e()], s = function ry(e, t) { return t >= e.expandoStartIndex }(e, n); (function uy(e, t) { return 0 != (e.flags & (t ? 8 : 16)) })(i, r) && null === t && !s && (t = !1), t = function tO(e, t, n, r) { const o = function vc(e) { const t = x.lFrame.currentDirectiveIndex; return -1 === t ? null : e[t] }(e); let i = r ? t.residualClasses : t.residualStyles; if (null === o) 0 === (r ? t.classBindings : t.styleBindings) && (n = _i(n = Yl(null, e, t, n, r), t.attrs, r), i = null); else { const s = t.directiveStylingLast; if (-1 === s || e[s] !== o) if (n = Yl(o, e, t, n, r), null === i) { let u = function nO(e, t, n) { const r = n ? t.classBindings : t.styleBindings; if (0 !== er(r)) return e[Pn(r)] }(e, t, r); void 0 !== u && Array.isArray(u) && (u = Yl(null, e, t, u[1], r), u = _i(u, t.attrs, r), function rO(e, t, n, r) { e[Pn(n ? t.classBindings : t.styleBindings)] = r }(e, t, r, u)) } else i = function oO(e, t, n) { let r; const o = t.directiveEnd; for (let i = 1 + t.directiveStylingLast; i < o; i++)r = _i(r, e[i].hostAttrs, n); return _i(r, t.attrs, n) }(e, t, r) } return void 0 !== i && (r ? t.residualClasses = i : t.residualStyles = i), n }(o, i, t, r), function zT(e, t, n, r, o, i) { let s = i ? t.classBindings : t.styleBindings, a = Pn(s), u = er(s); e[r] = n; let l, c = !1; if (Array.isArray(n) ? (l = n[1], (null === l || xr(n, l) > 0) && (c = !0)) : l = n, o) if (0 !== u) { const f = Pn(e[a + 1]); e[r + 1] = Ca(f, a), 0 !== f && (e[f + 1] = Wl(e[f + 1], r)), e[a + 1] = function $T(e, t) { return 131071 & e | t << 17 }(e[a + 1], r) } else e[r + 1] = Ca(a, 0), 0 !== a && (e[a + 1] = Wl(e[a + 1], r)), a = r; else e[r + 1] = Ca(u, 0), 0 === a ? a = r : e[u + 1] = Wl(e[u + 1], r), u = r; c && (e[r + 1] = ql(e[r + 1])), Yv(e, l, r, !0), Yv(e, l, r, !1), function GT(e, t, n, r, o) { const i = o ? e.residualClasses : e.residualStyles; null != i && "string" == typeof t && xr(i, t) >= 0 && (n[r + 1] = Zl(n[r + 1])) }(t, l, e, r, i), s = Ca(a, u), i ? t.classBindings = s : t.styleBindings = s }(o, i, t, n, s, r) } }(i, e, s, r), t !== V && ke(o, s, t) && function sy(e, t, n, r, o, i, s, a) { if (!(3 & t.type)) return; const u = e.data, c = u[a + 1], l = function UT(e) { return 1 == (1 & e) }(c) ? ay(u, t, n, o, er(c), s) : void 0; wa(l) || (wa(i) || function HT(e) { return 2 == (2 & e) }(c) && (i = ay(u, null, n, o, a, s)), function jS(e, t, n, r, o) { if (t) o ? e.addClass(n, r) : e.removeClass(n, r); else { let i = -1 === r.indexOf("-") ? void 0 : Tn.DashCase; null == o ? e.removeStyle(n, r, i) : ("string" == typeof o && o.endsWith("!important") && (o = o.slice(0, -10), i |= Tn.Important), e.setStyle(n, r, o, i)) } }(r, s, Es($e(), n), o, i)) }(i, i.data[$e()], o, o[L], e, o[s + 1] = function uO(e, t) { return null == e || "" === e || ("string" == typeof t ? e += t : "object" == typeof e && (e = be(function On(e) { return e instanceof qg ? e.changingThisBreaksApplicationSecurity : e }(e)))), e }(t, n), r, s) }(e, t, null, !0), Da } function Yl(e, t, n, r, o) { let i = null; const s = n.directiveEnd; let a = n.directiveStylingLast; for (-1 === a ? a = n.directiveStart : a++; a < s && (i = t[a], r = _i(r, i.hostAttrs, o), i !== e);)a++; return null !== e && (n.directiveStylingLast = a), r } function _i(e, t, n) { const r = n ? 1 : 2; let o = -1; if (null !== t) for (let i = 0; i < t.length; i++) { const s = t[i]; "number" == typeof s ? o = s : o === r && (Array.isArray(e) || (e = void 0 === e ? [] : ["", e]), ct(e, s, !!n || t[++i])) } return void 0 === e ? null : e } function ay(e, t, n, r, o, i) { const s = null === t; let a; for (; o > 0;) { const u = e[o], c = Array.isArray(u), l = c ? u[1] : u, d = null === l; let f = n[o + 1]; f === V && (f = d ? Z : void 0); let h = d ? Tc(f, r) : l === r ? f : void 0; if (c && !wa(h) && (h = Tc(u, r)), wa(h) && (a = h, s)) return a; const p = e[o + 1]; o = s ? Pn(p) : er(p) } if (null !== t) { let u = i ? t.residualClasses : t.residualStyles; null != u && (a = Tc(u, r)) } return a } function wa(e) { return void 0 !== e } function H(e, t = "") { const n = y(), r = W(), o = e + G, i = r.firstCreatePass ? Wr(r, o, 1, t, null) : r.data[o], s = cy(r, n, i, t, e); n[o] = s, bs() && Ws(r, n, s, i), Ut(i, !1) } let cy = (e, t, n, r, o) => (An(!0), function Us(e, t) { return e.createText(t) }(t[L], r)); function oo(e) { return Ql("", e, ""), oo } function Ql(e, t, n) { const r = y(), o = function Yr(e, t, n, r) { return ke(e, Mr(), n) ? t + k(n) + r : V }(r, e, t, n); return o !== V && function fn(e, t, n) { const r = Es(t, e); !function Tg(e, t, n) { e.setValue(t, n) }(e[L], r, n) }(r, $e(), o), Ql } const so = "en-US"; let Ny = so; function Kl(e, t, n, r, o) { if (e = R(e), Array.isArray(e)) for (let i = 0; i < e.length; i++)Kl(e[i], t, n, r, o); else { const i = W(), s = y(), a = Pe(); let u = Xn(e) ? e : R(e.provide); const c = um(e), l = 1048575 & a.providerIndexes, d = a.directiveStart, f = a.providerIndexes >> 20; if (Xn(e) || !e.multi) { const h = new zo(c, o, D), p = td(u, t, o ? l : l + f, d); -1 === p ? (Ic(Ts(a, s), i, u), ed(i, e, t.length), t.push(u), a.directiveStart++, a.directiveEnd++, o && (a.providerIndexes += 1048576), n.push(h), s.push(h)) : (n[p] = h, s[p] = h) } else { const h = td(u, t, l + f, d), p = td(u, t, l, l + f), v = p >= 0 && n[p]; if (o && !v || !o && !(h >= 0 && n[h])) { Ic(Ts(a, s), i, u); const _ = function TN(e, t, n, r, o) { const i = new zo(e, n, D); return i.multi = [], i.index = t, i.componentProviders = 0, n_(i, o, r && !n), i }(o ? AN : SN, n.length, o, r, c); !o && v && (n[p].providerFactory = _), ed(i, e, t.length, 0), t.push(u), a.directiveStart++, a.directiveEnd++, o && (a.providerIndexes += 1048576), n.push(_), s.push(_) } else ed(i, e, h > -1 ? h : p, n_(n[o ? p : h], c, !o && r)); !o && r && v && n[p].componentProviders++ } } } function ed(e, t, n, r) { const o = Xn(t), i = function m0(e) { return !!e.useClass }(t); if (o || i) { const u = (i ? R(t.useClass) : t).prototype.ngOnDestroy; if (u) { const c = e.destroyHooks || (e.destroyHooks = []); if (!o && t.multi) { const l = c.indexOf(n); -1 === l ? c.push(n, [r, u]) : c[l + 1].push(r, u) } else c.push(n, u) } } } function n_(e, t, n) { return n && e.componentProviders++, e.multi.push(t) - 1 } function td(e, t, n, r) { for (let o = n; o < r; o++)if (t[o] === e) return o; return -1 } function SN(e, t, n, r) { return nd(this.multi, []) } function AN(e, t, n, r) { const o = this.multi; let i; if (this.providerFactory) { const s = this.providerFactory.componentProviders, a = Yn(n, n[w], this.providerFactory.index, r); i = a.slice(0, s), nd(o, i); for (let u = s; u < a.length; u++)i.push(a[u]) } else i = [], nd(o, i); return i } function nd(e, t) { for (let n = 0; n < e.length; n++)t.push((0, e[n])()); return t } function de(e, t = []) { return n => { n.providersResolver = (r, o) => function IN(e, t, n) { const r = W(); if (r.firstCreatePass) { const o = Nt(e); Kl(n, r.data, r.blueprint, o, !0), Kl(t, r.data, r.blueprint, o, !1) } }(r, o ? o(e) : e, t) } } class nr { } class r_ { } class rd extends nr { constructor(t, n, r) { super(), this._parent = n, this._bootstrapComponents = [], this.destroyCbs = [], this.componentFactoryResolver = new uv(this); const o = at(t); this._bootstrapComponents = dn(o.bootstrap), this._r3Injector = Dm(t, n, [{ provide: nr, useValue: this }, { provide: aa, useValue: this.componentFactoryResolver }, ...r], be(t), new Set(["environment"])), this._r3Injector.resolveInjectorInitializers(), this.instance = this._r3Injector.get(t) } get injector() { return this._r3Injector } destroy() { const t = this._r3Injector; !t.destroyed && t.destroy(), this.destroyCbs.forEach(n => n()), this.destroyCbs = null } onDestroy(t) { this.destroyCbs.push(t) } } class od extends r_ { constructor(t) { super(), this.moduleType = t } create(t) { return new rd(this.moduleType, t, []) } } class o_ extends nr { constructor(t) { super(), this.componentFactoryResolver = new uv(this), this.instance = null; const n = new Br([...t.providers, { provide: nr, useValue: this }, { provide: aa, useValue: this.componentFactoryResolver }], t.parent || ea(), t.debugName, new Set(["environment"])); this.injector = n, t.runEnvironmentInitializers && n.resolveInjectorInitializers() } destroy() { this.injector.destroy() } onDestroy(t) { this.injector.onDestroy(t) } } function id(e, t, n = null) { return new o_({ providers: e, parent: t, debugName: n, runEnvironmentInitializers: !0 }).injector } let PN = (() => { class e { constructor(n) { this._injector = n, this.cachedInjectors = new Map } getOrCreateStandaloneInjector(n) { if (!n.standalone) return null; if (!this.cachedInjectors.has(n)) { const r = om(0, n.type), o = r.length > 0 ? id([r], this._injector, `Standalone[${n.type.name}]`) : null; this.cachedInjectors.set(n, o) } return this.cachedInjectors.get(n) } ngOnDestroy() { try { for (const n of this.cachedInjectors.values()) null !== n && n.destroy() } finally { this.cachedInjectors.clear() } } static #e = this.\u0275prov = S({ token: e, providedIn: "environment", factory: () => new e(I(lt)) }) } return e })(); function i_(e) { e.getStandaloneInjector = t => t.get(PN).getOrCreateStandaloneInjector(e) } function sP(e, t, n, r = !0) { const o = t[w]; if (function NS(e, t, n, r) { const o = Oe + r, i = n.length; r > 0 && (n[o - 1][Ot] = t), r < i - Oe ? (t[Ot] = n[o], ig(n, Oe + r, t)) : (n.push(t), t[Ot] = null), t[le] = n; const s = t[Lo]; null !== s && n !== s && function PS(e, t) { const n = e[Dr]; t[ye] !== t[le][le][ye] && (e[rp] = !0), null === n ? e[Dr] = [t] : n.push(t) }(s, t); const a = t[Bt]; null !== a && a.insertView(e), t[j] |= 128 }(o, t, e, n), r) { const i = zc(n, e), s = t[L], a = qs(s, e[Ht]); null !== a && function AS(e, t, n, r, o, i) { r[he] = o, r[Re] = t, ei(e, r, n, 1, o, i) }(o, e[Re], s, t, a, i) } } Symbol; let hn = (() => { class e { static #e = this.__NG_ELEMENT_ID__ = cP } return e })(); const aP = hn, uP = class extends aP { constructor(t, n, r) { super(), this._declarationLView = t, this._declarationTContainer = n, this.elementRef = r } get ssrId() { return this._declarationTContainer.tView?.ssrId || null } createEmbeddedView(t, n) { return this.createEmbeddedViewImpl(t, n) } createEmbeddedViewImpl(t, n, r) { const o = function iP(e, t, n, r) { const o = t.tView, a = la(e, o, n, 4096 & e[j] ? 4096 : 16, null, t, null, null, null, r?.injector ?? null, r?.hydrationInfo ?? null); a[Lo] = e[t.index]; const c = e[Bt]; return null !== c && (a[Bt] = c.createEmbeddedView(o)), Fl(o, a, n), a }(this._declarationLView, this._declarationTContainer, t, { injector: n, hydrationInfo: r }); return new di(o) } }; function cP() { return function Sa(e, t) { return 4 & e.type ? new uP(t, e, zr(e, t)) : null }(Pe(), y()) } let Rt = (() => { class e { static #e = this.__NG_ELEMENT_ID__ = gP } return e })(); function gP() { return function E_(e, t) { let n; const r = t[e.index]; return Be(r) ? n = r : (n = Qm(r, t, null, e), t[e.index] = n, da(t, n)), b_(n, t, e, r), new D_(n, e, t) }(Pe(), y()) } const mP = Rt, D_ = class extends mP { constructor(t, n, r) { super(), this._lContainer = t, this._hostTNode = n, this._hostLView = r } get element() { return zr(this._hostTNode, this._hostLView) } get injector() { return new Ue(this._hostTNode, this._hostLView) } get parentInjector() { const t = Os(this._hostTNode, this._hostLView); if (Ec(t)) { const n = qo(t, this._hostLView), r = Go(t); return new Ue(n[w].data[r + 8], n) } return new Ue(null, this._hostLView) } clear() { for (; this.length > 0;)this.remove(this.length - 1) } get(t) { const n = w_(this._lContainer); return null !== n && n[t] || null } get length() { return this._lContainer.length - Oe } createEmbeddedView(t, n, r) { let o, i; "number" == typeof r ? o = r : null != r && (o = r.index, i = r.injector); const a = t.createEmbeddedViewImpl(n || {}, i, null); return this.insertImpl(a, o, false), a } createComponent(t, n, r, o, i) { const s = t && !function Zo(e) { return "function" == typeof e }(t); let a; if (s) a = n; else { const g = n || {}; a = g.index, r = g.injector, o = g.projectableNodes, i = g.environmentInjector || g.ngModuleRef } const u = s ? t : new fi(q(t)), c = r || this.parentInjector; if (!i && null == u.ngModule) { const v = (s ? c : this.parentInjector).get(lt, null); v && (i = v) } q(u.componentType ?? {}); const h = u.create(c, o, null, i); return this.insertImpl(h.hostView, a, false), h } insert(t, n) { return this.insertImpl(t, n, !1) } insertImpl(t, n, r) { const o = t._lView; if (function nI(e) { return Be(e[le]) }(o)) { const u = this.indexOf(t); if (-1 !== u) this.detach(u); else { const c = o[le], l = new D_(c, c[Re], c[le]); l.detach(l.indexOf(t)) } } const s = this._adjustIndex(n), a = this._lContainer; return sP(a, o, s, !r), t.attachToViewContainerRef(), ig(ud(a), s, t), t } move(t, n) { return this.insert(t, n) } indexOf(t) { const n = w_(this._lContainer); return null !== n ? n.indexOf(t) : -1 } remove(t) { const n = this._adjustIndex(t, -1), r = Gs(this._lContainer, n); r && (xs(ud(this._lContainer), n), Bc(r[w], r)) } detach(t) { const n = this._adjustIndex(t, -1), r = Gs(this._lContainer, n); return r && null != xs(ud(this._lContainer), n) ? new di(r) : null } _adjustIndex(t, n = 0) { return t ?? this.length + n } }; function w_(e) { return e[8] } function ud(e) { return e[8] || (e[8] = []) } let b_ = function M_(e, t, n, r) { if (e[Ht]) return; let o; o = 8 & n.type ? se(r) : function vP(e, t) { const n = e[L], r = n.createComment(""), o = Ke(t, e); return Qn(n, qs(n, o), r, function kS(e, t) { return e.nextSibling(t) }(n, o), !1), r }(t, n), e[Ht] = o }; const _d = new M("Application Initializer"); let Cd = (() => { class e { constructor() { this.initialized = !1, this.done = !1, this.donePromise = new Promise((n, r) => { this.resolve = n, this.reject = r }), this.appInits = E(_d, { optional: !0 }) ?? [] } runInitializers() { if (this.initialized) return; const n = []; for (const o of this.appInits) { const i = o(); if (yi(i)) n.push(i); else if (Rv(i)) { const s = new Promise((a, u) => { i.subscribe({ complete: a, error: u }) }); n.push(s) } } const r = () => { this.done = !0, this.resolve() }; Promise.all(n).then(() => { r() }).catch(o => { this.reject(o) }), 0 === n.length && r(), this.initialized = !0 } static #e = this.\u0275fac = function (r) { return new (r || e) }; static #t = this.\u0275prov = S({ token: e, factory: e.\u0275fac, providedIn: "root" }) } return e })(), Q_ = (() => { class e { log(n) { console.log(n) } warn(n) { console.warn(n) } static #e = this.\u0275fac = function (r) { return new (r || e) }; static #t = this.\u0275prov = S({ token: e, factory: e.\u0275fac, providedIn: "platform" }) } return e })(); const pn = new M("LocaleId", { providedIn: "root", factory: () => E(pn, z.Optional | z.SkipSelf) || function ZP() { return typeof $localize < "u" && $localize.locale || so }() }); let Oa = (() => { class e { constructor() { this.taskId = 0, this.pendingTasks = new Set, this.hasPendingTasks = new mt(!1) } add() { this.hasPendingTasks.next(!0); const n = this.taskId++; return this.pendingTasks.add(n), n } remove(n) { this.pendingTasks.delete(n), 0 === this.pendingTasks.size && this.hasPendingTasks.next(!1) } ngOnDestroy() { this.pendingTasks.clear(), this.hasPendingTasks.next(!1) } static #e = this.\u0275fac = function (r) { return new (r || e) }; static #t = this.\u0275prov = S({ token: e, factory: e.\u0275fac, providedIn: "root" }) } return e })(); class XP { constructor(t, n) { this.ngModuleFactory = t, this.componentFactories = n } } let X_ = (() => { class e { compileModuleSync(n) { return new od(n) } compileModuleAsync(n) { return Promise.resolve(this.compileModuleSync(n)) } compileModuleAndAllComponentsSync(n) { const r = this.compileModuleSync(n), i = dn(at(n).declarations).reduce((s, a) => { const u = q(a); return u && s.push(new fi(u)), s }, []); return new XP(r, i) } compileModuleAndAllComponentsAsync(n) { return Promise.resolve(this.compileModuleAndAllComponentsSync(n)) } clearCache() { } clearCacheFor(n) { } getModuleId(n) { } static #e = this.\u0275fac = function (r) { return new (r || e) }; static #t = this.\u0275prov = S({ token: e, factory: e.\u0275fac, providedIn: "root" }) } return e })(); const tC = new M(""), Pa = new M(""); let Md, Ed = (() => { class e { constructor(n, r, o) { this._ngZone = n, this.registry = r, this._pendingCount = 0, this._isZoneStable = !0, this._didWork = !1, this._callbacks = [], this.taskTrackingZone = null, Md || (function _x(e) { Md = e }(o), o.addToWindow(r)), this._watchAngularEvents(), n.run(() => { this.taskTrackingZone = typeof Zone > "u" ? null : Zone.current.get("TaskTrackingZone") }) } _watchAngularEvents() { this._ngZone.onUnstable.subscribe({ next: () => { this._didWork = !0, this._isZoneStable = !1 } }), this._ngZone.runOutsideAngular(() => { this._ngZone.onStable.subscribe({ next: () => { ae.assertNotInAngularZone(), queueMicrotask(() => { this._isZoneStable = !0, this._runCallbacksIfReady() }) } }) }) } increasePendingRequestCount() { return this._pendingCount += 1, this._didWork = !0, this._pendingCount } decreasePendingRequestCount() { if (this._pendingCount -= 1, this._pendingCount < 0) throw new Error("pending async requests below zero"); return this._runCallbacksIfReady(), this._pendingCount } isStable() { return this._isZoneStable && 0 === this._pendingCount && !this._ngZone.hasPendingMacrotasks } _runCallbacksIfReady() { if (this.isStable()) queueMicrotask(() => { for (; 0 !== this._callbacks.length;) { let n = this._callbacks.pop(); clearTimeout(n.timeoutId), n.doneCb(this._didWork) } this._didWork = !1 }); else { let n = this.getPendingTasks(); this._callbacks = this._callbacks.filter(r => !r.updateCb || !r.updateCb(n) || (clearTimeout(r.timeoutId), !1)), this._didWork = !0 } } getPendingTasks() { return this.taskTrackingZone ? this.taskTrackingZone.macroTasks.map(n => ({ source: n.source, creationLocation: n.creationLocation, data: n.data })) : [] } addCallback(n, r, o) { let i = -1; r && r > 0 && (i = setTimeout(() => { this._callbacks = this._callbacks.filter(s => s.timeoutId !== i), n(this._didWork, this.getPendingTasks()) }, r)), this._callbacks.push({ doneCb: n, timeoutId: i, updateCb: o }) } whenStable(n, r, o) { if (o && !this.taskTrackingZone) throw new Error('Task tracking zone is required when passing an update callback to whenStable(). Is "zone.js/plugins/task-tracking" loaded?'); this.addCallback(n, r, o), this._runCallbacksIfReady() } getPendingRequestCount() { return this._pendingCount } registerApplication(n) { this.registry.registerApplication(n, this) } unregisterApplication(n) { this.registry.unregisterApplication(n) } findProviders(n, r, o) { return [] } static #e = this.\u0275fac = function (r) { return new (r || e)(I(ae), I(bd), I(Pa)) }; static #t = this.\u0275prov = S({ token: e, factory: e.\u0275fac }) } return e })(), bd = (() => { class e { constructor() { this._applications = new Map } registerApplication(n, r) { this._applications.set(n, r) } unregisterApplication(n) { this._applications.delete(n) } unregisterAllApplications() { this._applications.clear() } getTestability(n) { return this._applications.get(n) || null } getAllTestabilities() { return Array.from(this._applications.values()) } getAllRootElements() { return Array.from(this._applications.keys()) } findTestabilityInTree(n, r = !0) { return Md?.findTestabilityInTree(this, n, r) ?? null } static #e = this.\u0275fac = function (r) { return new (r || e) }; static #t = this.\u0275prov = S({ token: e, factory: e.\u0275fac, providedIn: "platform" }) } return e })(), xn = null; const nC = new M("AllowMultipleToken"), Id = new M("PlatformDestroyListeners"), Sd = new M("appBootstrapListener"); class oC { constructor(t, n) { this.name = t, this.token = n } } function sC(e, t, n = []) { const r = `Platform: ${t}`, o = new M(r); return (i = []) => { let s = Ad(); if (!s || s.injector.get(nC, !1)) { const a = [...n, ...i, { provide: o, useValue: !0 }]; e ? e(a) : function wx(e) { if (xn && !xn.get(nC, !1)) throw new C(400, !1); (function rC() { !function HM(e) { gp = e }(() => { throw new C(600, !1) }) })(), xn = e; const t = e.get(uC); (function iC(e) { e.get(cm, null)?.forEach(n => n()) })(e) }(function aC(e = [], t) { return ft.create({ name: t, providers: [{ provide: rl, useValue: "platform" }, { provide: Id, useValue: new Set([() => xn = null]) }, ...e] }) }(a, r)) } return function bx(e) { const t = Ad(); if (!t) throw new C(401, !1); return t }() } } function Ad() { return xn?.get(uC) ?? null } let uC = (() => { class e { constructor(n) { this._injector = n, this._modules = [], this._destroyListeners = [], this._destroyed = !1 } bootstrapModuleFactory(n, r) { const o = function Mx(e = "zone.js", t) { return "noop" === e ? new J0 : "zone.js" === e ? new ae(t) : e }(r?.ngZone, function cC(e) { return { enableLongStackTrace: !1, shouldCoalesceEventChangeDetection: e?.eventCoalescing ?? !1, shouldCoalesceRunChangeDetection: e?.runCoalescing ?? !1 } }({ eventCoalescing: r?.ngZoneEventCoalescing, runCoalescing: r?.ngZoneRunCoalescing })); return o.run(() => { const i = function NN(e, t, n) { return new rd(e, t, n) }(n.moduleType, this.injector, function pC(e) { return [{ provide: ae, useFactory: e }, { provide: oi, multi: !0, useFactory: () => { const t = E(Sx, { optional: !0 }); return () => t.initialize() } }, { provide: hC, useFactory: Ix }, { provide: Im, useFactory: Sm }] }(() => o)), s = i.injector.get(ln, null); return o.runOutsideAngular(() => { const a = o.onError.subscribe({ next: u => { s.handleError(u) } }); i.onDestroy(() => { xa(this._modules, i), a.unsubscribe() }) }), function lC(e, t, n) { try { const r = n(); return yi(r) ? r.catch(o => { throw t.runOutsideAngular(() => e.handleError(o)), o }) : r } catch (r) { throw t.runOutsideAngular(() => e.handleError(r)), r } }(s, o, () => { const a = i.injector.get(Cd); return a.runInitializers(), a.donePromise.then(() => (function Py(e) { vt(e, "Expected localeId to be defined"), "string" == typeof e && (Ny = e.toLowerCase().replace(/_/g, "-")) }(i.injector.get(pn, so) || so), this._moduleDoBootstrap(i), i)) }) }) } bootstrapModule(n, r = []) { const o = dC({}, r); return function Cx(e, t, n) { const r = new od(n); return Promise.resolve(r) }(0, 0, n).then(i => this.bootstrapModuleFactory(i, o)) } _moduleDoBootstrap(n) { const r = n.injector.get(co); if (n._bootstrapComponents.length > 0) n._bootstrapComponents.forEach(o => r.bootstrap(o)); else { if (!n.instance.ngDoBootstrap) throw new C(-403, !1); n.instance.ngDoBootstrap(r) } this._modules.push(n) } onDestroy(n) { this._destroyListeners.push(n) } get injector() { return this._injector } destroy() { if (this._destroyed) throw new C(404, !1); this._modules.slice().forEach(r => r.destroy()), this._destroyListeners.forEach(r => r()); const n = this._injector.get(Id, null); n && (n.forEach(r => r()), n.clear()), this._destroyed = !0 } get destroyed() { return this._destroyed } static #e = this.\u0275fac = function (r) { return new (r || e)(I(ft)) }; static #t = this.\u0275prov = S({ token: e, factory: e.\u0275fac, providedIn: "platform" }) } return e })(); function dC(e, t) { return Array.isArray(t) ? t.reduce(dC, e) : { ...e, ...t } } let co = (() => { class e { constructor() { this._bootstrapListeners = [], this._runningTick = !1, this._destroyed = !1, this._destroyListeners = [], this._views = [], this.internalErrorHandler = E(hC), this.zoneIsStable = E(Im), this.componentTypes = [], this.components = [], this.isStable = E(Oa).hasPendingTasks.pipe(St(n => n ? N(!1) : this.zoneIsStable), function Jb(e, t = Dn) { return e = e ?? Kb, we((n, r) => { let o, i = !0; n.subscribe(Ce(r, s => { const a = t(s); (i || !e(o, a)) && (i = !1, o = a, r.next(s)) })) }) }(), xh()), this._injector = E(lt) } get destroyed() { return this._destroyed } get injector() { return this._injector } bootstrap(n, r) { const o = n instanceof pm; if (!this._injector.get(Cd).done) throw !o && function mr(e) { const t = q(e) || Te(e) || je(e); return null !== t && t.standalone }(n), new C(405, !1); let s; s = o ? n : this._injector.get(aa).resolveComponentFactory(n), this.componentTypes.push(s.componentType); const a = function Dx(e) { return e.isBoundToModule }(s) ? void 0 : this._injector.get(nr), c = s.create(ft.NULL, [], r || s.selector, a), l = c.location.nativeElement, d = c.injector.get(tC, null); return d?.registerApplication(l), c.onDestroy(() => { this.detachView(c.hostView), xa(this.components, c), d?.unregisterApplication(l) }), this._loadComponent(c), c } tick() { if (this._runningTick) throw new C(101, !1); try { this._runningTick = !0; for (let n of this._views) n.detectChanges() } catch (n) { this.internalErrorHandler(n) } finally { this._runningTick = !1 } } attachView(n) { const r = n; this._views.push(r), r.attachToAppRef(this) } detachView(n) { const r = n; xa(this._views, r), r.detachFromAppRef() } _loadComponent(n) { this.attachView(n.hostView), this.tick(), this.components.push(n); const r = this._injector.get(Sd, []); r.push(...this._bootstrapListeners), r.forEach(o => o(n)) } ngOnDestroy() { if (!this._destroyed) try { this._destroyListeners.forEach(n => n()), this._views.slice().forEach(n => n.destroy()) } finally { this._destroyed = !0, this._views = [], this._bootstrapListeners = [], this._destroyListeners = [] } } onDestroy(n) { return this._destroyListeners.push(n), () => xa(this._destroyListeners, n) } destroy() { if (this._destroyed) throw new C(406, !1); const n = this._injector; n.destroy && !n.destroyed && n.destroy() } get viewCount() { return this._views.length } warnIfDestroyed() { } static #e = this.\u0275fac = function (r) { return new (r || e) }; static #t = this.\u0275prov = S({ token: e, factory: e.\u0275fac, providedIn: "root" }) } return e })(); function xa(e, t) { const n = e.indexOf(t); n > -1 && e.splice(n, 1) } const hC = new M("", { providedIn: "root", factory: () => E(ln).handleError.bind(void 0) }); function Ix() { const e = E(ae), t = E(ln); return n => e.runOutsideAngular(() => t.handleError(n)) } let Sx = (() => { class e { constructor() { this.zone = E(ae), this.applicationRef = E(co) } initialize() { this._onMicrotaskEmptySubscription || (this._onMicrotaskEmptySubscription = this.zone.onMicrotaskEmpty.subscribe({ next: () => { this.zone.run(() => { this.applicationRef.tick() }) } })) } ngOnDestroy() { this._onMicrotaskEmptySubscription?.unsubscribe() } static #e = this.\u0275fac = function (r) { return new (r || e) }; static #t = this.\u0275prov = S({ token: e, factory: e.\u0275fac, providedIn: "root" }) } return e })(); let Ra = (() => { class e { static #e = this.__NG_ELEMENT_ID__ = Tx } return e })(); function Tx(e) { return function Ox(e, t, n) { if (qn(e) && !n) { const r = ut(e.index, t); return new di(r, r) } return 47 & e.type ? new di(t[ye], t) : null }(Pe(), y(), 16 == (16 & e)) } class yC { constructor() { } supports(t) { return ga(t) } create(t) { return new kx(t) } } const Fx = (e, t) => t; class kx { constructor(t) { this.length = 0, this._linkedRecords = null, this._unlinkedRecords = null, this._previousItHead = null, this._itHead = null, this._itTail = null, this._additionsHead = null, this._additionsTail = null, this._movesHead = null, this._movesTail = null, this._removalsHead = null, this._removalsTail = null, this._identityChangesHead = null, this._identityChangesTail = null, this._trackByFn = t || Fx } forEachItem(t) { let n; for (n = this._itHead; null !== n; n = n._next)t(n) } forEachOperation(t) { let n = this._itHead, r = this._removalsHead, o = 0, i = null; for (; n || r;) { const s = !r || n && n.currentIndex < CC(r, o, i) ? n : r, a = CC(s, o, i), u = s.currentIndex; if (s === r) o--, r = r._nextRemoved; else if (n = n._next, null == s.previousIndex) o++; else { i || (i = []); const c = a - o, l = u - o; if (c != l) { for (let f = 0; f < c; f++) { const h = f < i.length ? i[f] : i[f] = 0, p = h + f; l <= p && p < c && (i[f] = h + 1) } i[s.previousIndex] = l - c } } a !== u && t(s, a, u) } } forEachPreviousItem(t) { let n; for (n = this._previousItHead; null !== n; n = n._nextPrevious)t(n) } forEachAddedItem(t) { let n; for (n = this._additionsHead; null !== n; n = n._nextAdded)t(n) } forEachMovedItem(t) { let n; for (n = this._movesHead; null !== n; n = n._nextMoved)t(n) } forEachRemovedItem(t) { let n; for (n = this._removalsHead; null !== n; n = n._nextRemoved)t(n) } forEachIdentityChange(t) { let n; for (n = this._identityChangesHead; null !== n; n = n._nextIdentityChange)t(n) } diff(t) { if (null == t && (t = []), !ga(t)) throw new C(900, !1); return this.check(t) ? this : null } onDestroy() { } check(t) { this._reset(); let o, i, s, n = this._itHead, r = !1; if (Array.isArray(t)) { this.length = t.length; for (let a = 0; a < this.length; a++)i = t[a], s = this._trackByFn(a, i), null !== n && Object.is(n.trackById, s) ? (r && (n = this._verifyReinsertion(n, i, s, a)), Object.is(n.item, i) || this._addIdentityChange(n, i)) : (n = this._mismatch(n, i, s, a), r = !0), n = n._next } else o = 0, function uT(e, t) { if (Array.isArray(e)) for (let n = 0; n < e.length; n++)t(e[n]); else { const n = e[Symbol.iterator](); let r; for (; !(r = n.next()).done;)t(r.value) } }(t, a => { s = this._trackByFn(o, a), null !== n && Object.is(n.trackById, s) ? (r && (n = this._verifyReinsertion(n, a, s, o)), Object.is(n.item, a) || this._addIdentityChange(n, a)) : (n = this._mismatch(n, a, s, o), r = !0), n = n._next, o++ }), this.length = o; return this._truncate(n), this.collection = t, this.isDirty } get isDirty() { return null !== this._additionsHead || null !== this._movesHead || null !== this._removalsHead || null !== this._identityChangesHead } _reset() { if (this.isDirty) { let t; for (t = this._previousItHead = this._itHead; null !== t; t = t._next)t._nextPrevious = t._next; for (t = this._additionsHead; null !== t; t = t._nextAdded)t.previousIndex = t.currentIndex; for (this._additionsHead = this._additionsTail = null, t = this._movesHead; null !== t; t = t._nextMoved)t.previousIndex = t.currentIndex; this._movesHead = this._movesTail = null, this._removalsHead = this._removalsTail = null, this._identityChangesHead = this._identityChangesTail = null } } _mismatch(t, n, r, o) { let i; return null === t ? i = this._itTail : (i = t._prev, this._remove(t)), null !== (t = null === this._unlinkedRecords ? null : this._unlinkedRecords.get(r, null)) ? (Object.is(t.item, n) || this._addIdentityChange(t, n), this._reinsertAfter(t, i, o)) : null !== (t = null === this._linkedRecords ? null : this._linkedRecords.get(r, o)) ? (Object.is(t.item, n) || this._addIdentityChange(t, n), this._moveAfter(t, i, o)) : t = this._addAfter(new Lx(n, r), i, o), t } _verifyReinsertion(t, n, r, o) { let i = null === this._unlinkedRecords ? null : this._unlinkedRecords.get(r, null); return null !== i ? t = this._reinsertAfter(i, t._prev, o) : t.currentIndex != o && (t.currentIndex = o, this._addToMoves(t, o)), t } _truncate(t) { for (; null !== t;) { const n = t._next; this._addToRemovals(this._unlink(t)), t = n } null !== this._unlinkedRecords && this._unlinkedRecords.clear(), null !== this._additionsTail && (this._additionsTail._nextAdded = null), null !== this._movesTail && (this._movesTail._nextMoved = null), null !== this._itTail && (this._itTail._next = null), null !== this._removalsTail && (this._removalsTail._nextRemoved = null), null !== this._identityChangesTail && (this._identityChangesTail._nextIdentityChange = null) } _reinsertAfter(t, n, r) { null !== this._unlinkedRecords && this._unlinkedRecords.remove(t); const o = t._prevRemoved, i = t._nextRemoved; return null === o ? this._removalsHead = i : o._nextRemoved = i, null === i ? this._removalsTail = o : i._prevRemoved = o, this._insertAfter(t, n, r), this._addToMoves(t, r), t } _moveAfter(t, n, r) { return this._unlink(t), this._insertAfter(t, n, r), this._addToMoves(t, r), t } _addAfter(t, n, r) { return this._insertAfter(t, n, r), this._additionsTail = null === this._additionsTail ? this._additionsHead = t : this._additionsTail._nextAdded = t, t } _insertAfter(t, n, r) { const o = null === n ? this._itHead : n._next; return t._next = o, t._prev = n, null === o ? this._itTail = t : o._prev = t, null === n ? this._itHead = t : n._next = t, null === this._linkedRecords && (this._linkedRecords = new _C), this._linkedRecords.put(t), t.currentIndex = r, t } _remove(t) { return this._addToRemovals(this._unlink(t)) } _unlink(t) { null !== this._linkedRecords && this._linkedRecords.remove(t); const n = t._prev, r = t._next; return null === n ? this._itHead = r : n._next = r, null === r ? this._itTail = n : r._prev = n, t } _addToMoves(t, n) { return t.previousIndex === n || (this._movesTail = null === this._movesTail ? this._movesHead = t : this._movesTail._nextMoved = t), t } _addToRemovals(t) { return null === this._unlinkedRecords && (this._unlinkedRecords = new _C), this._unlinkedRecords.put(t), t.currentIndex = null, t._nextRemoved = null, null === this._removalsTail ? (this._removalsTail = this._removalsHead = t, t._prevRemoved = null) : (t._prevRemoved = this._removalsTail, this._removalsTail = this._removalsTail._nextRemoved = t), t } _addIdentityChange(t, n) { return t.item = n, this._identityChangesTail = null === this._identityChangesTail ? this._identityChangesHead = t : this._identityChangesTail._nextIdentityChange = t, t } } class Lx { constructor(t, n) { this.item = t, this.trackById = n, this.currentIndex = null, this.previousIndex = null, this._nextPrevious = null, this._prev = null, this._next = null, this._prevDup = null, this._nextDup = null, this._prevRemoved = null, this._nextRemoved = null, this._nextAdded = null, this._nextMoved = null, this._nextIdentityChange = null } } class Vx { constructor() { this._head = null, this._tail = null } add(t) { null === this._head ? (this._head = this._tail = t, t._nextDup = null, t._prevDup = null) : (this._tail._nextDup = t, t._prevDup = this._tail, t._nextDup = null, this._tail = t) } get(t, n) { let r; for (r = this._head; null !== r; r = r._nextDup)if ((null === n || n <= r.currentIndex) && Object.is(r.trackById, t)) return r; return null } remove(t) { const n = t._prevDup, r = t._nextDup; return null === n ? this._head = r : n._nextDup = r, null === r ? this._tail = n : r._prevDup = n, null === this._head } } class _C { constructor() { this.map = new Map } put(t) { const n = t.trackById; let r = this.map.get(n); r || (r = new Vx, this.map.set(n, r)), r.add(t) } get(t, n) { const o = this.map.get(t); return o ? o.get(t, n) : null } remove(t) { const n = t.trackById; return this.map.get(n).remove(t) && this.map.delete(n), t } get isEmpty() { return 0 === this.map.size } clear() { this.map.clear() } } function CC(e, t, n) { const r = e.previousIndex; if (null === r) return r; let o = 0; return n && r < n.length && (o = n[r]), r + t + o } class DC { constructor() { } supports(t) { return t instanceof Map || kl(t) } create() { return new jx } } class jx { constructor() { this._records = new Map, this._mapHead = null, this._appendAfter = null, this._previousMapHead = null, this._changesHead = null, this._changesTail = null, this._additionsHead = null, this._additionsTail = null, this._removalsHead = null, this._removalsTail = null } get isDirty() { return null !== this._additionsHead || null !== this._changesHead || null !== this._removalsHead } forEachItem(t) { let n; for (n = this._mapHead; null !== n; n = n._next)t(n) } forEachPreviousItem(t) { let n; for (n = this._previousMapHead; null !== n; n = n._nextPrevious)t(n) } forEachChangedItem(t) { let n; for (n = this._changesHead; null !== n; n = n._nextChanged)t(n) } forEachAddedItem(t) { let n; for (n = this._additionsHead; null !== n; n = n._nextAdded)t(n) } forEachRemovedItem(t) { let n; for (n = this._removalsHead; null !== n; n = n._nextRemoved)t(n) } diff(t) { if (t) { if (!(t instanceof Map || kl(t))) throw new C(900, !1) } else t = new Map; return this.check(t) ? this : null } onDestroy() { } check(t) { this._reset(); let n = this._mapHead; if (this._appendAfter = null, this._forEach(t, (r, o) => { if (n && n.key === o) this._maybeAddToChanges(n, r), this._appendAfter = n, n = n._next; else { const i = this._getOrCreateRecordForKey(o, r); n = this._insertBeforeOrAppend(n, i) } }), n) { n._prev && (n._prev._next = null), this._removalsHead = n; for (let r = n; null !== r; r = r._nextRemoved)r === this._mapHead && (this._mapHead = null), this._records.delete(r.key), r._nextRemoved = r._next, r.previousValue = r.currentValue, r.currentValue = null, r._prev = null, r._next = null } return this._changesTail && (this._changesTail._nextChanged = null), this._additionsTail && (this._additionsTail._nextAdded = null), this.isDirty } _insertBeforeOrAppend(t, n) { if (t) { const r = t._prev; return n._next = t, n._prev = r, t._prev = n, r && (r._next = n), t === this._mapHead && (this._mapHead = n), this._appendAfter = t, t } return this._appendAfter ? (this._appendAfter._next = n, n._prev = this._appendAfter) : this._mapHead = n, this._appendAfter = n, null } _getOrCreateRecordForKey(t, n) { if (this._records.has(t)) { const o = this._records.get(t); this._maybeAddToChanges(o, n); const i = o._prev, s = o._next; return i && (i._next = s), s && (s._prev = i), o._next = null, o._prev = null, o } const r = new Bx(t); return this._records.set(t, r), r.currentValue = n, this._addToAdditions(r), r } _reset() { if (this.isDirty) { let t; for (this._previousMapHead = this._mapHead, t = this._previousMapHead; null !== t; t = t._next)t._nextPrevious = t._next; for (t = this._changesHead; null !== t; t = t._nextChanged)t.previousValue = t.currentValue; for (t = this._additionsHead; null != t; t = t._nextAdded)t.previousValue = t.currentValue; this._changesHead = this._changesTail = null, this._additionsHead = this._additionsTail = null, this._removalsHead = null } } _maybeAddToChanges(t, n) { Object.is(n, t.currentValue) || (t.previousValue = t.currentValue, t.currentValue = n, this._addToChanges(t)) } _addToAdditions(t) { null === this._additionsHead ? this._additionsHead = this._additionsTail = t : (this._additionsTail._nextAdded = t, this._additionsTail = t) } _addToChanges(t) { null === this._changesHead ? this._changesHead = this._changesTail = t : (this._changesTail._nextChanged = t, this._changesTail = t) } _forEach(t, n) { t instanceof Map ? t.forEach(n) : Object.keys(t).forEach(r => n(t[r], r)) } } class Bx { constructor(t) { this.key = t, this.previousValue = null, this.currentValue = null, this._nextPrevious = null, this._next = null, this._prev = null, this._nextAdded = null, this._nextRemoved = null, this._nextChanged = null } } function wC() { return new La([new yC]) } let La = (() => { class e { static #e = this.\u0275prov = S({ token: e, providedIn: "root", factory: wC }); constructor(n) { this.factories = n } static create(n, r) { if (null != r) { const o = r.factories.slice(); n = n.concat(o) } return new e(n) } static extend(n) { return { provide: e, useFactory: r => e.create(n, r || wC()), deps: [[e, new ks, new Fs]] } } find(n) { const r = this.factories.find(o => o.supports(n)); if (null != r) return r; throw new C(901, !1) } } return e })(); function EC() { return new Ti([new DC]) } let Ti = (() => { class e { static #e = this.\u0275prov = S({ token: e, providedIn: "root", factory: EC }); constructor(n) { this.factories = n } static create(n, r) { if (r) { const o = r.factories.slice(); n = n.concat(o) } return new e(n) } static extend(n) { return { provide: e, useFactory: r => e.create(n, r || EC()), deps: [[e, new ks, new Fs]] } } find(n) { const r = this.factories.find(o => o.supports(n)); if (r) return r; throw new C(901, !1) } } return e })(); const Ux = sC(null, "core", []); let zx = (() => { class e { constructor(n) { } static #e = this.\u0275fac = function (r) { return new (r || e)(I(co)) }; static #t = this.\u0275mod = yt({ type: e }); static #n = this.\u0275inj = st({}) } return e })(); let Rd = null; function Rn() { return Rd } class oR { } const pt = new M("DocumentToken"); let Fd = (() => { class e { historyGo(n) { throw new Error("Not implemented") } static #e = this.\u0275fac = function (r) { return new (r || e) }; static #t = this.\u0275prov = S({ token: e, factory: function () { return E(sR) }, providedIn: "platform" }) } return e })(); const iR = new M("Location Initialized"); let sR = (() => { class e extends Fd { constructor() { super(), this._doc = E(pt), this._location = window.location, this._history = window.history } getBaseHrefFromDOM() { return Rn().getBaseHref(this._doc) } onPopState(n) { const r = Rn().getGlobalEventTarget(this._doc, "window"); return r.addEventListener("popstate", n, !1), () => r.removeEventListener("popstate", n) } onHashChange(n) { const r = Rn().getGlobalEventTarget(this._doc, "window"); return r.addEventListener("hashchange", n, !1), () => r.removeEventListener("hashchange", n) } get href() { return this._location.href } get protocol() { return this._location.protocol } get hostname() { return this._location.hostname } get port() { return this._location.port } get pathname() { return this._location.pathname } get search() { return this._location.search } get hash() { return this._location.hash } set pathname(n) { this._location.pathname = n } pushState(n, r, o) { this._history.pushState(n, r, o) } replaceState(n, r, o) { this._history.replaceState(n, r, o) } forward() { this._history.forward() } back() { this._history.back() } historyGo(n = 0) { this._history.go(n) } getState() { return this._history.state } static #e = this.\u0275fac = function (r) { return new (r || e) }; static #t = this.\u0275prov = S({ token: e, factory: function () { return new e }, providedIn: "platform" }) } return e })(); function kd(e, t) { if (0 == e.length) return t; if (0 == t.length) return e; let n = 0; return e.endsWith("/") && n++, t.startsWith("/") && n++, 2 == n ? e + t.substring(1) : 1 == n ? e + t : e + "/" + t } function PC(e) { const t = e.match(/#|\?|$/), n = t && t.index || e.length; return e.slice(0, n - ("/" === e[n - 1] ? 1 : 0)) + e.slice(n) } function gn(e) { return e && "?" !== e[0] ? "?" + e : e } let or = (() => { class e { historyGo(n) { throw new Error("Not implemented") } static #e = this.\u0275fac = function (r) { return new (r || e) }; static #t = this.\u0275prov = S({ token: e, factory: function () { return E(RC) }, providedIn: "root" }) } return e })(); const xC = new M("appBaseHref"); let RC = (() => { class e extends or { constructor(n, r) { super(), this._platformLocation = n, this._removeListenerFns = [], this._baseHref = r ?? this._platformLocation.getBaseHrefFromDOM() ?? E(pt).location?.origin ?? "" } ngOnDestroy() { for (; this._removeListenerFns.length;)this._removeListenerFns.pop()() } onPopState(n) { this._removeListenerFns.push(this._platformLocation.onPopState(n), this._platformLocation.onHashChange(n)) } getBaseHref() { return this._baseHref } prepareExternalUrl(n) { return kd(this._baseHref, n) } path(n = !1) { const r = this._platformLocation.pathname + gn(this._platformLocation.search), o = this._platformLocation.hash; return o && n ? `${r}${o}` : r } pushState(n, r, o, i) { const s = this.prepareExternalUrl(o + gn(i)); this._platformLocation.pushState(n, r, s) } replaceState(n, r, o, i) { const s = this.prepareExternalUrl(o + gn(i)); this._platformLocation.replaceState(n, r, s) } forward() { this._platformLocation.forward() } back() { this._platformLocation.back() } getState() { return this._platformLocation.getState() } historyGo(n = 0) { this._platformLocation.historyGo?.(n) } static #e = this.\u0275fac = function (r) { return new (r || e)(I(Fd), I(xC, 8)) }; static #t = this.\u0275prov = S({ token: e, factory: e.\u0275fac, providedIn: "root" }) } return e })(), aR = (() => { class e extends or { constructor(n, r) { super(), this._platformLocation = n, this._baseHref = "", this._removeListenerFns = [], null != r && (this._baseHref = r) } ngOnDestroy() { for (; this._removeListenerFns.length;)this._removeListenerFns.pop()() } onPopState(n) { this._removeListenerFns.push(this._platformLocation.onPopState(n), this._platformLocation.onHashChange(n)) } getBaseHref() { return this._baseHref } path(n = !1) { let r = this._platformLocation.hash; return null == r && (r = "#"), r.length > 0 ? r.substring(1) : r } prepareExternalUrl(n) { const r = kd(this._baseHref, n); return r.length > 0 ? "#" + r : r } pushState(n, r, o, i) { let s = this.prepareExternalUrl(o + gn(i)); 0 == s.length && (s = this._platformLocation.pathname), this._platformLocation.pushState(n, r, s) } replaceState(n, r, o, i) { let s = this.prepareExternalUrl(o + gn(i)); 0 == s.length && (s = this._platformLocation.pathname), this._platformLocation.replaceState(n, r, s) } forward() { this._platformLocation.forward() } back() { this._platformLocation.back() } getState() { return this._platformLocation.getState() } historyGo(n = 0) { this._platformLocation.historyGo?.(n) } static #e = this.\u0275fac = function (r) { return new (r || e)(I(Fd), I(xC, 8)) }; static #t = this.\u0275prov = S({ token: e, factory: e.\u0275fac }) } return e })(), Ld = (() => { class e { constructor(n) { this._subject = new pe, this._urlChangeListeners = [], this._urlChangeSubscription = null, this._locationStrategy = n; const r = this._locationStrategy.getBaseHref(); this._basePath = function lR(e) { if (new RegExp("^(https?:)?//").test(e)) { const [, n] = e.split(/\/\/[^\/]+/); return n } return e }(PC(FC(r))), this._locationStrategy.onPopState(o => { this._subject.emit({ url: this.path(!0), pop: !0, state: o.state, type: o.type }) }) } ngOnDestroy() { this._urlChangeSubscription?.unsubscribe(), this._urlChangeListeners = [] } path(n = !1) { return this.normalize(this._locationStrategy.path(n)) } getState() { return this._locationStrategy.getState() } isCurrentPathEqualTo(n, r = "") { return this.path() == this.normalize(n + gn(r)) } normalize(n) { return e.stripTrailingSlash(function cR(e, t) { if (!e || !t.startsWith(e)) return t; const n = t.substring(e.length); return "" === n || ["/", ";", "?", "#"].includes(n[0]) ? n : t }(this._basePath, FC(n))) } prepareExternalUrl(n) { return n && "/" !== n[0] && (n = "/" + n), this._locationStrategy.prepareExternalUrl(n) } go(n, r = "", o = null) { this._locationStrategy.pushState(o, "", n, r), this._notifyUrlChangeListeners(this.prepareExternalUrl(n + gn(r)), o) } replaceState(n, r = "", o = null) { this._locationStrategy.replaceState(o, "", n, r), this._notifyUrlChangeListeners(this.prepareExternalUrl(n + gn(r)), o) } forward() { this._locationStrategy.forward() } back() { this._locationStrategy.back() } historyGo(n = 0) { this._locationStrategy.historyGo?.(n) } onUrlChange(n) { return this._urlChangeListeners.push(n), this._urlChangeSubscription || (this._urlChangeSubscription = this.subscribe(r => { this._notifyUrlChangeListeners(r.url, r.state) })), () => { const r = this._urlChangeListeners.indexOf(n); this._urlChangeListeners.splice(r, 1), 0 === this._urlChangeListeners.length && (this._urlChangeSubscription?.unsubscribe(), this._urlChangeSubscription = null) } } _notifyUrlChangeListeners(n = "", r) { this._urlChangeListeners.forEach(o => o(n, r)) } subscribe(n, r, o) { return this._subject.subscribe({ next: n, error: r, complete: o }) } static #e = this.normalizeQueryParams = gn; static #t = this.joinWithSlash = kd; static #n = this.stripTrailingSlash = PC; static #r = this.\u0275fac = function (r) { return new (r || e)(I(or)) }; static #o = this.\u0275prov = S({ token: e, factory: function () { return function uR() { return new Ld(I(or)) }() }, providedIn: "root" }) } return e })(); function FC(e) { return e.replace(/\/index.html$/, "") } function zC(e, t) { t = encodeURIComponent(t); for (const n of e.split(";")) { const r = n.indexOf("="), [o, i] = -1 == r ? [n, ""] : [n.slice(0, r), n.slice(r + 1)]; if (o.trim() === t) return decodeURIComponent(i) } return null } const Wd = /\s+/, GC = []; let qC = (() => { class e { constructor(n, r, o, i) { this._iterableDiffers = n, this._keyValueDiffers = r, this._ngEl = o, this._renderer = i, this.initialClasses = GC, this.stateMap = new Map } set klass(n) { this.initialClasses = null != n ? n.trim().split(Wd) : GC } set ngClass(n) { this.rawClass = "string" == typeof n ? n.trim().split(Wd) : n } ngDoCheck() { for (const r of this.initialClasses) this._updateState(r, !0); const n = this.rawClass; if (Array.isArray(n) || n instanceof Set) for (const r of n) this._updateState(r, !0); else if (null != n) for (const r of Object.keys(n)) this._updateState(r, !!n[r]); this._applyStateDiff() } _updateState(n, r) { const o = this.stateMap.get(n); void 0 !== o ? (o.enabled !== r && (o.changed = !0, o.enabled = r), o.touched = !0) : this.stateMap.set(n, { enabled: r, changed: !0, touched: !0 }) } _applyStateDiff() { for (const n of this.stateMap) { const r = n[0], o = n[1]; o.changed ? (this._toggleClass(r, o.enabled), o.changed = !1) : o.touched || (o.enabled && this._toggleClass(r, !1), this.stateMap.delete(r)), o.touched = !1 } } _toggleClass(n, r) { (n = n.trim()).length > 0 && n.split(Wd).forEach(o => { r ? this._renderer.addClass(this._ngEl.nativeElement, o) : this._renderer.removeClass(this._ngEl.nativeElement, o) }) } static #e = this.\u0275fac = function (r) { return new (r || e)(D(La), D(Ti), D(dt), D(cn)) }; static #t = this.\u0275dir = F({ type: e, selectors: [["", "ngClass", ""]], inputs: { klass: ["class", "klass"], ngClass: "ngClass" }, standalone: !0 }) } return e })(); class YR { constructor(t, n, r, o) { this.$implicit = t, this.ngForOf = n, this.index = r, this.count = o } get first() { return 0 === this.index } get last() { return this.index === this.count - 1 } get even() { return this.index % 2 == 0 } get odd() { return !this.even } } let ZC = (() => { class e { set ngForOf(n) { this._ngForOf = n, this._ngForOfDirty = !0 } set ngForTrackBy(n) { this._trackByFn = n } get ngForTrackBy() { return this._trackByFn } constructor(n, r, o) { this._viewContainer = n, this._template = r, this._differs = o, this._ngForOf = null, this._ngForOfDirty = !0, this._differ = null } set ngForTemplate(n) { n && (this._template = n) } ngDoCheck() { if (this._ngForOfDirty) { this._ngForOfDirty = !1; const n = this._ngForOf; !this._differ && n && (this._differ = this._differs.find(n).create(this.ngForTrackBy)) } if (this._differ) { const n = this._differ.diff(this._ngForOf); n && this._applyChanges(n) } } _applyChanges(n) { const r = this._viewContainer; n.forEachOperation((o, i, s) => { if (null == o.previousIndex) r.createEmbeddedView(this._template, new YR(o.item, this._ngForOf, -1, -1), null === s ? void 0 : s); else if (null == s) r.remove(null === i ? void 0 : i); else if (null !== i) { const a = r.get(i); r.move(a, s), YC(a, o) } }); for (let o = 0, i = r.length; o < i; o++) { const a = r.get(o).context; a.index = o, a.count = i, a.ngForOf = this._ngForOf } n.forEachIdentityChange(o => { YC(r.get(o.currentIndex), o) }) } static ngTemplateContextGuard(n, r) { return !0 } static #e = this.\u0275fac = function (r) { return new (r || e)(D(Rt), D(hn), D(La)) }; static #t = this.\u0275dir = F({ type: e, selectors: [["", "ngFor", "", "ngForOf", ""]], inputs: { ngForOf: "ngForOf", ngForTrackBy: "ngForTrackBy", ngForTemplate: "ngForTemplate" }, standalone: !0 }) } return e })(); function YC(e, t) { e.context.$implicit = t.item } let w1 = (() => { class e { static #e = this.\u0275fac = function (r) { return new (r || e) }; static #t = this.\u0275mod = yt({ type: e }); static #n = this.\u0275inj = st({}) } return e })(); function eD(e) { return "server" === e } let I1 = (() => { class e { static #e = this.\u0275prov = S({ token: e, providedIn: "root", factory: () => new S1(I(pt), window) }) } return e })(); class S1 { constructor(t, n) { this.document = t, this.window = n, this.offset = () => [0, 0] } setOffset(t) { this.offset = Array.isArray(t) ? () => t : t } getScrollPosition() { return this.supportsScrolling() ? [this.window.pageXOffset, this.window.pageYOffset] : [0, 0] } scrollToPosition(t) { this.supportsScrolling() && this.window.scrollTo(t[0], t[1]) } scrollToAnchor(t) { if (!this.supportsScrolling()) return; const n = function A1(e, t) { const n = e.getElementById(t) || e.getElementsByName(t)[0]; if (n) return n; if ("function" == typeof e.createTreeWalker && e.body && "function" == typeof e.body.attachShadow) { const r = e.createTreeWalker(e.body, NodeFilter.SHOW_ELEMENT); let o = r.currentNode; for (; o;) { const i = o.shadowRoot; if (i) { const s = i.getElementById(t) || i.querySelector(`[name="${t}"]`); if (s) return s } o = r.nextNode() } } return null }(this.document, t); n && (this.scrollToElement(n), n.focus()) } setHistoryScrollRestoration(t) { this.supportsScrolling() && (this.window.history.scrollRestoration = t) } scrollToElement(t) { const n = t.getBoundingClientRect(), r = n.left + this.window.pageXOffset, o = n.top + this.window.pageYOffset, i = this.offset(); this.window.scrollTo(r - i[0], o - i[1]) } supportsScrolling() { try { return !!this.window && !!this.window.scrollTo && "pageXOffset" in this.window } catch { return !1 } } } class tD { } class X1 extends oR { constructor() { super(...arguments), this.supportsDOMEvents = !0 } } class ef extends X1 { static makeCurrent() { !function rR(e) { Rd || (Rd = e) }(new ef) } onAndCancel(t, n, r) { return t.addEventListener(n, r), () => { t.removeEventListener(n, r) } } dispatchEvent(t, n) { t.dispatchEvent(n) } remove(t) { t.parentNode && t.parentNode.removeChild(t) } createElement(t, n) { return (n = n || this.getDefaultDocument()).createElement(t) } createHtmlDocument() { return document.implementation.createHTMLDocument("fakeTitle") } getDefaultDocument() { return document } isElementNode(t) { return t.nodeType === Node.ELEMENT_NODE } isShadowRoot(t) { return t instanceof DocumentFragment } getGlobalEventTarget(t, n) { return "window" === n ? window : "document" === n ? t : "body" === n ? t.body : null } getBaseHref(t) { const n = function J1() { return xi = xi || document.querySelector("base"), xi ? xi.getAttribute("href") : null }(); return null == n ? null : function K1(e) { Xa = Xa || document.createElement("a"), Xa.setAttribute("href", e); const t = Xa.pathname; return "/" === t.charAt(0) ? t : `/${t}` }(n) } resetBaseElement() { xi = null } getUserAgent() { return window.navigator.userAgent } getCookie(t) { return zC(document.cookie, t) } } let Xa, xi = null, tF = (() => { class e { build() { return new XMLHttpRequest } static #e = this.\u0275fac = function (r) { return new (r || e) }; static #t = this.\u0275prov = S({ token: e, factory: e.\u0275fac }) } return e })(); const tf = new M("EventManagerPlugins"); let sD = (() => { class e { constructor(n, r) { this._zone = r, this._eventNameToPlugin = new Map, n.forEach(o => { o.manager = this }), this._plugins = n.slice().reverse() } addEventListener(n, r, o) { return this._findPluginFor(r).addEventListener(n, r, o) } getZone() { return this._zone } _findPluginFor(n) { let r = this._eventNameToPlugin.get(n); if (r) return r; if (r = this._plugins.find(i => i.supports(n)), !r) throw new C(5101, !1); return this._eventNameToPlugin.set(n, r), r } static #e = this.\u0275fac = function (r) { return new (r || e)(I(tf), I(ae)) }; static #t = this.\u0275prov = S({ token: e, factory: e.\u0275fac }) } return e })(); class aD { constructor(t) { this._doc = t } } const nf = "ng-app-id"; let uD = (() => { class e { constructor(n, r, o, i = {}) { this.doc = n, this.appId = r, this.nonce = o, this.platformId = i, this.styleRef = new Map, this.hostNodes = new Set, this.styleNodesInDOM = this.collectServerRenderedStyles(), this.platformIsServer = eD(i), this.resetHostNodes() } addStyles(n) { for (const r of n) 1 === this.changeUsageCount(r, 1) && this.onStyleAdded(r) } removeStyles(n) { for (const r of n) this.changeUsageCount(r, -1) <= 0 && this.onStyleRemoved(r) } ngOnDestroy() { const n = this.styleNodesInDOM; n && (n.forEach(r => r.remove()), n.clear()); for (const r of this.getAllStyles()) this.onStyleRemoved(r); this.resetHostNodes() } addHost(n) { this.hostNodes.add(n); for (const r of this.getAllStyles()) this.addStyleToHost(n, r) } removeHost(n) { this.hostNodes.delete(n) } getAllStyles() { return this.styleRef.keys() } onStyleAdded(n) { for (const r of this.hostNodes) this.addStyleToHost(r, n) } onStyleRemoved(n) { const r = this.styleRef; r.get(n)?.elements?.forEach(o => o.remove()), r.delete(n) } collectServerRenderedStyles() { const n = this.doc.head?.querySelectorAll(`style[${nf}="${this.appId}"]`); if (n?.length) { const r = new Map; return n.forEach(o => { null != o.textContent && r.set(o.textContent, o) }), r } return null } changeUsageCount(n, r) { const o = this.styleRef; if (o.has(n)) { const i = o.get(n); return i.usage += r, i.usage } return o.set(n, { usage: r, elements: [] }), r } getStyleElement(n, r) { const o = this.styleNodesInDOM, i = o?.get(r); if (i?.parentNode === n) return o.delete(r), i.removeAttribute(nf), i; { const s = this.doc.createElement("style"); return this.nonce && s.setAttribute("nonce", this.nonce), s.textContent = r, this.platformIsServer && s.setAttribute(nf, this.appId), s } } addStyleToHost(n, r) { const o = this.getStyleElement(n, r); n.appendChild(o); const i = this.styleRef, s = i.get(r)?.elements; s ? s.push(o) : i.set(r, { elements: [o], usage: 1 }) } resetHostNodes() { const n = this.hostNodes; n.clear(), n.add(this.doc.head) } static #e = this.\u0275fac = function (r) { return new (r || e)(I(pt), I(ta), I(lm, 8), I(Jn)) }; static #t = this.\u0275prov = S({ token: e, factory: e.\u0275fac }) } return e })(); const rf = { svg: "http://www.w3.org/2000/svg", xhtml: "http://www.w3.org/1999/xhtml", xlink: "http://www.w3.org/1999/xlink", xml: "http://www.w3.org/XML/1998/namespace", xmlns: "http://www.w3.org/2000/xmlns/", math: "http://www.w3.org/1998/MathML/" }, sf = /%COMP%/g, iF = new M("RemoveStylesOnCompDestroy", { providedIn: "root", factory: () => !1 }); function lD(e, t) { return t.map(n => n.replace(sf, e)) } let dD = (() => { class e { constructor(n, r, o, i, s, a, u, c = null) { this.eventManager = n, this.sharedStylesHost = r, this.appId = o, this.removeStylesOnCompDestroy = i, this.doc = s, this.platformId = a, this.ngZone = u, this.nonce = c, this.rendererByCompId = new Map, this.platformIsServer = eD(a), this.defaultRenderer = new af(n, s, u, this.platformIsServer) } createRenderer(n, r) { if (!n || !r) return this.defaultRenderer; this.platformIsServer && r.encapsulation === At.ShadowDom && (r = { ...r, encapsulation: At.Emulated }); const o = this.getOrCreateRenderer(n, r); return o instanceof hD ? o.applyToHost(n) : o instanceof uf && o.applyStyles(), o } getOrCreateRenderer(n, r) { const o = this.rendererByCompId; let i = o.get(r.id); if (!i) { const s = this.doc, a = this.ngZone, u = this.eventManager, c = this.sharedStylesHost, l = this.removeStylesOnCompDestroy, d = this.platformIsServer; switch (r.encapsulation) { case At.Emulated: i = new hD(u, c, r, this.appId, l, s, a, d); break; case At.ShadowDom: return new cF(u, c, n, r, s, a, this.nonce, d); default: i = new uf(u, c, r, l, s, a, d) }o.set(r.id, i) } return i } ngOnDestroy() { this.rendererByCompId.clear() } static #e = this.\u0275fac = function (r) { return new (r || e)(I(sD), I(uD), I(ta), I(iF), I(pt), I(Jn), I(ae), I(lm)) }; static #t = this.\u0275prov = S({ token: e, factory: e.\u0275fac }) } return e })(); class af { constructor(t, n, r, o) { this.eventManager = t, this.doc = n, this.ngZone = r, this.platformIsServer = o, this.data = Object.create(null), this.destroyNode = null } destroy() { } createElement(t, n) { return n ? this.doc.createElementNS(rf[n] || n, t) : this.doc.createElement(t) } createComment(t) { return this.doc.createComment(t) } createText(t) { return this.doc.createTextNode(t) } appendChild(t, n) { (fD(t) ? t.content : t).appendChild(n) } insertBefore(t, n, r) { t && (fD(t) ? t.content : t).insertBefore(n, r) } removeChild(t, n) { t && t.removeChild(n) } selectRootElement(t, n) { let r = "string" == typeof t ? this.doc.querySelector(t) : t; if (!r) throw new C(-5104, !1); return n || (r.textContent = ""), r } parentNode(t) { return t.parentNode } nextSibling(t) { return t.nextSibling } setAttribute(t, n, r, o) { if (o) { n = o + ":" + n; const i = rf[o]; i ? t.setAttributeNS(i, n, r) : t.setAttribute(n, r) } else t.setAttribute(n, r) } removeAttribute(t, n, r) { if (r) { const o = rf[r]; o ? t.removeAttributeNS(o, n) : t.removeAttribute(`${r}:${n}`) } else t.removeAttribute(n) } addClass(t, n) { t.classList.add(n) } removeClass(t, n) { t.classList.remove(n) } setStyle(t, n, r, o) { o & (Tn.DashCase | Tn.Important) ? t.style.setProperty(n, r, o & Tn.Important ? "important" : "") : t.style[n] = r } removeStyle(t, n, r) { r & Tn.DashCase ? t.style.removeProperty(n) : t.style[n] = "" } setProperty(t, n, r) { t[n] = r } setValue(t, n) { t.nodeValue = n } listen(t, n, r) { if ("string" == typeof t && !(t = Rn().getGlobalEventTarget(this.doc, t))) throw new Error(`Unsupported event target ${t} for event ${n}`); return this.eventManager.addEventListener(t, n, this.decoratePreventDefault(r)) } decoratePreventDefault(t) { return n => { if ("__ngUnwrap__" === n) return t; !1 === (this.platformIsServer ? this.ngZone.runGuarded(() => t(n)) : t(n)) && n.preventDefault() } } } function fD(e) { return "TEMPLATE" === e.tagName && void 0 !== e.content } class cF extends af { constructor(t, n, r, o, i, s, a, u) { super(t, i, s, u), this.sharedStylesHost = n, this.hostEl = r, this.shadowRoot = r.attachShadow({ mode: "open" }), this.sharedStylesHost.addHost(this.shadowRoot); const c = lD(o.id, o.styles); for (const l of c) { const d = document.createElement("style"); a && d.setAttribute("nonce", a), d.textContent = l, this.shadowRoot.appendChild(d) } } nodeOrShadowRoot(t) { return t === this.hostEl ? this.shadowRoot : t } appendChild(t, n) { return super.appendChild(this.nodeOrShadowRoot(t), n) } insertBefore(t, n, r) { return super.insertBefore(this.nodeOrShadowRoot(t), n, r) } removeChild(t, n) { return super.removeChild(this.nodeOrShadowRoot(t), n) } parentNode(t) { return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(t))) } destroy() { this.sharedStylesHost.removeHost(this.shadowRoot) } } class uf extends af { constructor(t, n, r, o, i, s, a, u) { super(t, i, s, a), this.sharedStylesHost = n, this.removeStylesOnCompDestroy = o, this.styles = u ? lD(u, r.styles) : r.styles } applyStyles() { this.sharedStylesHost.addStyles(this.styles) } destroy() { this.removeStylesOnCompDestroy && this.sharedStylesHost.removeStyles(this.styles) } } class hD extends uf { constructor(t, n, r, o, i, s, a, u) { const c = o + "-" + r.id; super(t, n, r, i, s, a, u, c), this.contentAttr = function sF(e) { return "_ngcontent-%COMP%".replace(sf, e) }(c), this.hostAttr = function aF(e) { return "_nghost-%COMP%".replace(sf, e) }(c) } applyToHost(t) { this.applyStyles(), this.setAttribute(t, this.hostAttr, "") } createElement(t, n) { const r = super.createElement(t, n); return super.setAttribute(r, this.contentAttr, ""), r } } let lF = (() => { class e extends aD { constructor(n) { super(n) } supports(n) { return !0 } addEventListener(n, r, o) { return n.addEventListener(r, o, !1), () => this.removeEventListener(n, r, o) } removeEventListener(n, r, o) { return n.removeEventListener(r, o) } static #e = this.\u0275fac = function (r) { return new (r || e)(I(pt)) }; static #t = this.\u0275prov = S({ token: e, factory: e.\u0275fac }) } return e })(); const pD = ["alt", "control", "meta", "shift"], dF = { "\b": "Backspace", "\t": "Tab", "\x7f": "Delete", "\x1b": "Escape", Del: "Delete", Esc: "Escape", Left: "ArrowLeft", Right: "ArrowRight", Up: "ArrowUp", Down: "ArrowDown", Menu: "ContextMenu", Scroll: "ScrollLock", Win: "OS" }, fF = { alt: e => e.altKey, control: e => e.ctrlKey, meta: e => e.metaKey, shift: e => e.shiftKey }; let hF = (() => { class e extends aD { constructor(n) { super(n) } supports(n) { return null != e.parseEventName(n) } addEventListener(n, r, o) { const i = e.parseEventName(r), s = e.eventCallback(i.fullKey, o, this.manager.getZone()); return this.manager.getZone().runOutsideAngular(() => Rn().onAndCancel(n, i.domEventName, s)) } static parseEventName(n) { const r = n.toLowerCase().split("."), o = r.shift(); if (0 === r.length || "keydown" !== o && "keyup" !== o) return null; const i = e._normalizeKey(r.pop()); let s = "", a = r.indexOf("code"); if (a > -1 && (r.splice(a, 1), s = "code."), pD.forEach(c => { const l = r.indexOf(c); l > -1 && (r.splice(l, 1), s += c + ".") }), s += i, 0 != r.length || 0 === i.length) return null; const u = {}; return u.domEventName = o, u.fullKey = s, u } static matchEventFullKeyCode(n, r) { let o = dF[n.key] || n.key, i = ""; return r.indexOf("code.") > -1 && (o = n.code, i = "code."), !(null == o || !o) && (o = o.toLowerCase(), " " === o ? o = "space" : "." === o && (o = "dot"), pD.forEach(s => { s !== o && (0, fF[s])(n) && (i += s + ".") }), i += o, i === r) } static eventCallback(n, r, o) { return i => { e.matchEventFullKeyCode(i, n) && o.runGuarded(() => r(i)) } } static _normalizeKey(n) { return "esc" === n ? "escape" : n } static #e = this.\u0275fac = function (r) { return new (r || e)(I(pt)) }; static #t = this.\u0275prov = S({ token: e, factory: e.\u0275fac }) } return e })(); const vF = sC(Ux, "browser", [{ provide: Jn, useValue: "browser" }, { provide: cm, useValue: function pF() { ef.makeCurrent() }, multi: !0 }, { provide: pt, useFactory: function mF() { return function zS(e) { Wc = e }(document), document }, deps: [] }]), yF = new M(""), vD = [{ provide: Pa, useClass: class eF { addToWindow(t) { ie.getAngularTestability = (r, o = !0) => { const i = t.findTestabilityInTree(r, o); if (null == i) throw new C(5103, !1); return i }, ie.getAllAngularTestabilities = () => t.getAllTestabilities(), ie.getAllAngularRootElements = () => t.getAllRootElements(), ie.frameworkStabilizers || (ie.frameworkStabilizers = []), ie.frameworkStabilizers.push(r => { const o = ie.getAllAngularTestabilities(); let i = o.length, s = !1; const a = function (u) { s = s || u, i--, 0 == i && r(s) }; o.forEach(u => { u.whenStable(a) }) }) } findTestabilityInTree(t, n, r) { return null == n ? null : t.getTestability(n) ?? (r ? Rn().isShadowRoot(n) ? this.findTestabilityInTree(t, n.host, !0) : this.findTestabilityInTree(t, n.parentElement, !0) : null) } }, deps: [] }, { provide: tC, useClass: Ed, deps: [ae, bd, Pa] }, { provide: Ed, useClass: Ed, deps: [ae, bd, Pa] }], yD = [{ provide: rl, useValue: "root" }, { provide: ln, useFactory: function gF() { return new ln }, deps: [] }, { provide: tf, useClass: lF, multi: !0, deps: [pt, ae, Jn] }, { provide: tf, useClass: hF, multi: !0, deps: [pt] }, dD, uD, sD, { provide: mm, useExisting: dD }, { provide: tD, useClass: tF, deps: [] }, []]; let _F = (() => { class e { constructor(n) { } static withServerTransition(n) { return { ngModule: e, providers: [{ provide: ta, useValue: n.appId }] } } static #e = this.\u0275fac = function (r) { return new (r || e)(I(yF, 12)) }; static #t = this.\u0275mod = yt({ type: e }); static #n = this.\u0275inj = st({ providers: [...yD, ...vD], imports: [w1, zx] }) } return e })(), _D = (() => { class e { constructor(n) { this._doc = n } getTitle() { return this._doc.title } setTitle(n) { this._doc.title = n || "" } static #e = this.\u0275fac = function (r) { return new (r || e)(I(pt)) }; static #t = this.\u0275prov = S({ token: e, factory: function (r) { let o = null; return o = r ? new r : function DF() { return new _D(I(pt)) }(), o }, providedIn: "root" }) } return e })(); function ho(e, t) { return ne(t) ? Ae(e, t, 1) : Ae(e, 1) } function yn(e, t) { return we((n, r) => { let o = 0; n.subscribe(Ce(r, i => e.call(t, i, o++) && r.next(i))) }) } function Ri(e) { return we((t, n) => { try { t.subscribe(n) } finally { n.add(e) } }) } typeof window < "u" && window; class Ja { } class Ka { } class Qt { constructor(t) { this.normalizedNames = new Map, this.lazyUpdate = null, t ? "string" == typeof t ? this.lazyInit = () => { this.headers = new Map, t.split("\n").forEach(n => { const r = n.indexOf(":"); if (r > 0) { const o = n.slice(0, r), i = o.toLowerCase(), s = n.slice(r + 1).trim(); this.maybeSetNormalizedName(o, i), this.headers.has(i) ? this.headers.get(i).push(s) : this.headers.set(i, [s]) } }) } : typeof Headers < "u" && t instanceof Headers ? (this.headers = new Map, t.forEach((n, r) => { this.setHeaderEntries(r, n) })) : this.lazyInit = () => { this.headers = new Map, Object.entries(t).forEach(([n, r]) => { this.setHeaderEntries(n, r) }) } : this.headers = new Map } has(t) { return this.init(), this.headers.has(t.toLowerCase()) } get(t) { this.init(); const n = this.headers.get(t.toLowerCase()); return n && n.length > 0 ? n[0] : null } keys() { return this.init(), Array.from(this.normalizedNames.values()) } getAll(t) { return this.init(), this.headers.get(t.toLowerCase()) || null } append(t, n) { return this.clone({ name: t, value: n, op: "a" }) } set(t, n) { return this.clone({ name: t, value: n, op: "s" }) } delete(t, n) { return this.clone({ name: t, value: n, op: "d" }) } maybeSetNormalizedName(t, n) { this.normalizedNames.has(n) || this.normalizedNames.set(n, t) } init() { this.lazyInit && (this.lazyInit instanceof Qt ? this.copyFrom(this.lazyInit) : this.lazyInit(), this.lazyInit = null, this.lazyUpdate && (this.lazyUpdate.forEach(t => this.applyUpdate(t)), this.lazyUpdate = null)) } copyFrom(t) { t.init(), Array.from(t.headers.keys()).forEach(n => { this.headers.set(n, t.headers.get(n)), this.normalizedNames.set(n, t.normalizedNames.get(n)) }) } clone(t) { const n = new Qt; return n.lazyInit = this.lazyInit && this.lazyInit instanceof Qt ? this.lazyInit : this, n.lazyUpdate = (this.lazyUpdate || []).concat([t]), n } applyUpdate(t) { const n = t.name.toLowerCase(); switch (t.op) { case "a": case "s": let r = t.value; if ("string" == typeof r && (r = [r]), 0 === r.length) return; this.maybeSetNormalizedName(t.name, n); const o = ("a" === t.op ? this.headers.get(n) : void 0) || []; o.push(...r), this.headers.set(n, o); break; case "d": const i = t.value; if (i) { let s = this.headers.get(n); if (!s) return; s = s.filter(a => -1 === i.indexOf(a)), 0 === s.length ? (this.headers.delete(n), this.normalizedNames.delete(n)) : this.headers.set(n, s) } else this.headers.delete(n), this.normalizedNames.delete(n) } } setHeaderEntries(t, n) { const r = (Array.isArray(n) ? n : [n]).map(i => i.toString()), o = t.toLowerCase(); this.headers.set(o, r), this.maybeSetNormalizedName(t, o) } forEach(t) { this.init(), Array.from(this.normalizedNames.keys()).forEach(n => t(this.normalizedNames.get(n), this.headers.get(n))) } } class IF { encodeKey(t) { return ED(t) } encodeValue(t) { return ED(t) } decodeKey(t) { return decodeURIComponent(t) } decodeValue(t) { return decodeURIComponent(t) } } const AF = /%(\d[a-f0-9])/gi, TF = { 40: "@", "3A": ":", 24: "$", "2C": ",", "3B": ";", "3D": "=", "3F": "?", "2F": "/" }; function ED(e) { return encodeURIComponent(e).replace(AF, (t, n) => TF[n] ?? t) } function eu(e) { return `${e}` } class kn { constructor(t = {}) { if (this.updates = null, this.cloneFrom = null, this.encoder = t.encoder || new IF, t.fromString) { if (t.fromObject) throw new Error("Cannot specify both fromString and fromObject."); this.map = function SF(e, t) { const n = new Map; return e.length > 0 && e.replace(/^\?/, "").split("&").forEach(o => { const i = o.indexOf("="), [s, a] = -1 == i ? [t.decodeKey(o), ""] : [t.decodeKey(o.slice(0, i)), t.decodeValue(o.slice(i + 1))], u = n.get(s) || []; u.push(a), n.set(s, u) }), n }(t.fromString, this.encoder) } else t.fromObject ? (this.map = new Map, Object.keys(t.fromObject).forEach(n => { const r = t.fromObject[n], o = Array.isArray(r) ? r.map(eu) : [eu(r)]; this.map.set(n, o) })) : this.map = null } has(t) { return this.init(), this.map.has(t) } get(t) { this.init(); const n = this.map.get(t); return n ? n[0] : null } getAll(t) { return this.init(), this.map.get(t) || null } keys() { return this.init(), Array.from(this.map.keys()) } append(t, n) { return this.clone({ param: t, value: n, op: "a" }) } appendAll(t) { const n = []; return Object.keys(t).forEach(r => { const o = t[r]; Array.isArray(o) ? o.forEach(i => { n.push({ param: r, value: i, op: "a" }) }) : n.push({ param: r, value: o, op: "a" }) }), this.clone(n) } set(t, n) { return this.clone({ param: t, value: n, op: "s" }) } delete(t, n) { return this.clone({ param: t, value: n, op: "d" }) } toString() { return this.init(), this.keys().map(t => { const n = this.encoder.encodeKey(t); return this.map.get(t).map(r => n + "=" + this.encoder.encodeValue(r)).join("&") }).filter(t => "" !== t).join("&") } clone(t) { const n = new kn({ encoder: this.encoder }); return n.cloneFrom = this.cloneFrom || this, n.updates = (this.updates || []).concat(t), n } init() { null === this.map && (this.map = new Map), null !== this.cloneFrom && (this.cloneFrom.init(), this.cloneFrom.keys().forEach(t => this.map.set(t, this.cloneFrom.map.get(t))), this.updates.forEach(t => { switch (t.op) { case "a": case "s": const n = ("a" === t.op ? this.map.get(t.param) : void 0) || []; n.push(eu(t.value)), this.map.set(t.param, n); break; case "d": if (void 0 === t.value) { this.map.delete(t.param); break } { let r = this.map.get(t.param) || []; const o = r.indexOf(eu(t.value)); -1 !== o && r.splice(o, 1), r.length > 0 ? this.map.set(t.param, r) : this.map.delete(t.param) } } }), this.cloneFrom = this.updates = null) } } class OF { constructor() { this.map = new Map } set(t, n) { return this.map.set(t, n), this } get(t) { return this.map.has(t) || this.map.set(t, t.defaultValue()), this.map.get(t) } delete(t) { return this.map.delete(t), this } has(t) { return this.map.has(t) } keys() { return this.map.keys() } } function bD(e) { return typeof ArrayBuffer < "u" && e instanceof ArrayBuffer } function MD(e) { return typeof Blob < "u" && e instanceof Blob } function ID(e) { return typeof FormData < "u" && e instanceof FormData } class Fi { constructor(t, n, r, o) { let i; if (this.url = n, this.body = null, this.reportProgress = !1, this.withCredentials = !1, this.responseType = "json", this.method = t.toUpperCase(), function NF(e) { switch (e) { case "DELETE": case "GET": case "HEAD": case "OPTIONS": case "JSONP": return !1; default: return !0 } }(this.method) || o ? (this.body = void 0 !== r ? r : null, i = o) : i = r, i && (this.reportProgress = !!i.reportProgress, this.withCredentials = !!i.withCredentials, i.responseType && (this.responseType = i.responseType), i.headers && (this.headers = i.headers), i.context && (this.context = i.context), i.params && (this.params = i.params)), this.headers || (this.headers = new Qt), this.context || (this.context = new OF), this.params) { const s = this.params.toString(); if (0 === s.length) this.urlWithParams = n; else { const a = n.indexOf("?"); this.urlWithParams = n + (-1 === a ? "?" : a < n.length - 1 ? "&" : "") + s } } else this.params = new kn, this.urlWithParams = n } serializeBody() { return null === this.body ? null : bD(this.body) || MD(this.body) || ID(this.body) || function PF(e) { return typeof URLSearchParams < "u" && e instanceof URLSearchParams }(this.body) || "string" == typeof this.body ? this.body : this.body instanceof kn ? this.body.toString() : "object" == typeof this.body || "boolean" == typeof this.body || Array.isArray(this.body) ? JSON.stringify(this.body) : this.body.toString() } detectContentTypeHeader() { return null === this.body || ID(this.body) ? null : MD(this.body) ? this.body.type || null : bD(this.body) ? null : "string" == typeof this.body ? "text/plain" : this.body instanceof kn ? "application/x-www-form-urlencoded;charset=UTF-8" : "object" == typeof this.body || "number" == typeof this.body || "boolean" == typeof this.body ? "application/json" : null } clone(t = {}) { const n = t.method || this.method, r = t.url || this.url, o = t.responseType || this.responseType, i = void 0 !== t.body ? t.body : this.body, s = void 0 !== t.withCredentials ? t.withCredentials : this.withCredentials, a = void 0 !== t.reportProgress ? t.reportProgress : this.reportProgress; let u = t.headers || this.headers, c = t.params || this.params; const l = t.context ?? this.context; return void 0 !== t.setHeaders && (u = Object.keys(t.setHeaders).reduce((d, f) => d.set(f, t.setHeaders[f]), u)), t.setParams && (c = Object.keys(t.setParams).reduce((d, f) => d.set(f, t.setParams[f]), c)), new Fi(n, r, i, { params: c, headers: u, context: l, reportProgress: a, responseType: o, withCredentials: s }) } } var po = function (e) { return e[e.Sent = 0] = "Sent", e[e.UploadProgress = 1] = "UploadProgress", e[e.ResponseHeader = 2] = "ResponseHeader", e[e.DownloadProgress = 3] = "DownloadProgress", e[e.Response = 4] = "Response", e[e.User = 5] = "User", e }(po || {}); class lf { constructor(t, n = 200, r = "OK") { this.headers = t.headers || new Qt, this.status = void 0 !== t.status ? t.status : n, this.statusText = t.statusText || r, this.url = t.url || null, this.ok = this.status >= 200 && this.status < 300 } } class df extends lf { constructor(t = {}) { super(t), this.type = po.ResponseHeader } clone(t = {}) { return new df({ headers: t.headers || this.headers, status: void 0 !== t.status ? t.status : this.status, statusText: t.statusText || this.statusText, url: t.url || this.url || void 0 }) } } class go extends lf { constructor(t = {}) { super(t), this.type = po.Response, this.body = void 0 !== t.body ? t.body : null } clone(t = {}) { return new go({ body: void 0 !== t.body ? t.body : this.body, headers: t.headers || this.headers, status: void 0 !== t.status ? t.status : this.status, statusText: t.statusText || this.statusText, url: t.url || this.url || void 0 }) } } class SD extends lf { constructor(t) { super(t, 0, "Unknown Error"), this.name = "HttpErrorResponse", this.ok = !1, this.message = this.status >= 200 && this.status < 300 ? `Http failure during parsing for ${t.url || "(unknown url)"}` : `Http failure response for ${t.url || "(unknown url)"}: ${t.status} ${t.statusText}`, this.error = t.error || null } } function ff(e, t) { return { body: t, headers: e.headers, context: e.context, observe: e.observe, params: e.params, reportProgress: e.reportProgress, responseType: e.responseType, withCredentials: e.withCredentials } } let xF = (() => { class e { constructor(n) { this.handler = n } request(n, r, o = {}) { let i; if (n instanceof Fi) i = n; else { let u, c; u = o.headers instanceof Qt ? o.headers : new Qt(o.headers), o.params && (c = o.params instanceof kn ? o.params : new kn({ fromObject: o.params })), i = new Fi(n, r, void 0 !== o.body ? o.body : null, { headers: u, context: o.context, params: c, reportProgress: o.reportProgress, responseType: o.responseType || "json", withCredentials: o.withCredentials }) } const s = N(i).pipe(ho(u => this.handler.handle(u))); if (n instanceof Fi || "events" === o.observe) return s; const a = s.pipe(yn(u => u instanceof go)); switch (o.observe || "body") { case "body": switch (i.responseType) { case "arraybuffer": return a.pipe(Y(u => { if (null !== u.body && !(u.body instanceof ArrayBuffer)) throw new Error("Response is not an ArrayBuffer."); return u.body })); case "blob": return a.pipe(Y(u => { if (null !== u.body && !(u.body instanceof Blob)) throw new Error("Response is not a Blob."); return u.body })); case "text": return a.pipe(Y(u => { if (null !== u.body && "string" != typeof u.body) throw new Error("Response is not a string."); return u.body })); default: return a.pipe(Y(u => u.body)) }case "response": return a; default: throw new Error(`Unreachable: unhandled observe type ${o.observe}}`) } } delete(n, r = {}) { return this.request("DELETE", n, r) } get(n, r = {}) { return this.request("GET", n, r) } head(n, r = {}) { return this.request("HEAD", n, r) } jsonp(n, r) { return this.request("JSONP", n, { params: (new kn).append(r, "JSONP_CALLBACK"), observe: "body", responseType: "json" }) } options(n, r = {}) { return this.request("OPTIONS", n, r) } patch(n, r, o = {}) { return this.request("PATCH", n, ff(o, r)) } post(n, r, o = {}) { return this.request("POST", n, ff(o, r)) } put(n, r, o = {}) { return this.request("PUT", n, ff(o, r)) } static #e = this.\u0275fac = function (r) { return new (r || e)(I(Ja)) }; static #t = this.\u0275prov = S({ token: e, factory: e.\u0275fac }) } return e })(); function OD(e, t) { return t(e) } function FF(e, t) { return (n, r) => t.intercept(n, { handle: o => e(o, r) }) } const LF = new M(""), ki = new M(""), ND = new M(""); function VF() { let e = null; return (t, n) => { null === e && (e = (E(LF, { optional: !0 }) ?? []).reduceRight(FF, OD)); const r = E(Oa), o = r.add(); return e(t, n).pipe(Ri(() => r.remove(o))) } } let PD = (() => { class e extends Ja { constructor(n, r) { super(), this.backend = n, this.injector = r, this.chain = null, this.pendingTasks = E(Oa) } handle(n) { if (null === this.chain) { const o = Array.from(new Set([...this.injector.get(ki), ...this.injector.get(ND, [])])); this.chain = o.reduceRight((i, s) => function kF(e, t, n) { return (r, o) => n.runInContext(() => t(r, i => e(i, o))) }(i, s, this.injector), OD) } const r = this.pendingTasks.add(); return this.chain(n, o => this.backend.handle(o)).pipe(Ri(() => this.pendingTasks.remove(r))) } static #e = this.\u0275fac = function (r) { return new (r || e)(I(Ka), I(lt)) }; static #t = this.\u0275prov = S({ token: e, factory: e.\u0275fac }) } return e })(); const $F = /^\)\]\}',?\n/; let RD = (() => { class e { constructor(n) { this.xhrFactory = n } handle(n) { if ("JSONP" === n.method) throw new C(-2800, !1); const r = this.xhrFactory; return (r.\u0275loadImpl ? Ee(r.\u0275loadImpl()) : N(null)).pipe(St(() => new me(i => { const s = r.build(); if (s.open(n.method, n.urlWithParams), n.withCredentials && (s.withCredentials = !0), n.headers.forEach((g, v) => s.setRequestHeader(g, v.join(","))), n.headers.has("Accept") || s.setRequestHeader("Accept", "application/json, text/plain, */*"), !n.headers.has("Content-Type")) { const g = n.detectContentTypeHeader(); null !== g && s.setRequestHeader("Content-Type", g) } if (n.responseType) { const g = n.responseType.toLowerCase(); s.responseType = "json" !== g ? g : "text" } const a = n.serializeBody(); let u = null; const c = () => { if (null !== u) return u; const g = s.statusText || "OK", v = new Qt(s.getAllResponseHeaders()), _ = function UF(e) { return "responseURL" in e && e.responseURL ? e.responseURL : /^X-Request-URL:/m.test(e.getAllResponseHeaders()) ? e.getResponseHeader("X-Request-URL") : null }(s) || n.url; return u = new df({ headers: v, status: s.status, statusText: g, url: _ }), u }, l = () => { let { headers: g, status: v, statusText: _, url: m } = c(), b = null; 204 !== v && (b = typeof s.response > "u" ? s.responseText : s.response), 0 === v && (v = b ? 200 : 0); let T = v >= 200 && v < 300; if ("json" === n.responseType && "string" == typeof b) { const U = b; b = b.replace($F, ""); try { b = "" !== b ? JSON.parse(b) : null } catch (Se) { b = U, T && (T = !1, b = { error: Se, text: b }) } } T ? (i.next(new go({ body: b, headers: g, status: v, statusText: _, url: m || void 0 })), i.complete()) : i.error(new SD({ error: b, headers: g, status: v, statusText: _, url: m || void 0 })) }, d = g => { const { url: v } = c(), _ = new SD({ error: g, status: s.status || 0, statusText: s.statusText || "Unknown Error", url: v || void 0 }); i.error(_) }; let f = !1; const h = g => { f || (i.next(c()), f = !0); let v = { type: po.DownloadProgress, loaded: g.loaded }; g.lengthComputable && (v.total = g.total), "text" === n.responseType && s.responseText && (v.partialText = s.responseText), i.next(v) }, p = g => { let v = { type: po.UploadProgress, loaded: g.loaded }; g.lengthComputable && (v.total = g.total), i.next(v) }; return s.addEventListener("load", l), s.addEventListener("error", d), s.addEventListener("timeout", d), s.addEventListener("abort", d), n.reportProgress && (s.addEventListener("progress", h), null !== a && s.upload && s.upload.addEventListener("progress", p)), s.send(a), i.next({ type: po.Sent }), () => { s.removeEventListener("error", d), s.removeEventListener("abort", d), s.removeEventListener("load", l), s.removeEventListener("timeout", d), n.reportProgress && (s.removeEventListener("progress", h), null !== a && s.upload && s.upload.removeEventListener("progress", p)), s.readyState !== s.DONE && s.abort() } }))) } static #e = this.\u0275fac = function (r) { return new (r || e)(I(tD)) }; static #t = this.\u0275prov = S({ token: e, factory: e.\u0275fac }) } return e })(); const hf = new M("XSRF_ENABLED"), FD = new M("XSRF_COOKIE_NAME", { providedIn: "root", factory: () => "XSRF-TOKEN" }), kD = new M("XSRF_HEADER_NAME", { providedIn: "root", factory: () => "X-XSRF-TOKEN" }); class LD { } let qF = (() => { class e { constructor(n, r, o) { this.doc = n, this.platform = r, this.cookieName = o, this.lastCookieString = "", this.lastToken = null, this.parseCount = 0 } getToken() { if ("server" === this.platform) return null; const n = this.doc.cookie || ""; return n !== this.lastCookieString && (this.parseCount++, this.lastToken = zC(n, this.cookieName), this.lastCookieString = n), this.lastToken } static #e = this.\u0275fac = function (r) { return new (r || e)(I(pt), I(Jn), I(FD)) }; static #t = this.\u0275prov = S({ token: e, factory: e.\u0275fac }) } return e })(); function WF(e, t) { const n = e.url.toLowerCase(); if (!E(hf) || "GET" === e.method || "HEAD" === e.method || n.startsWith("http://") || n.startsWith("https://")) return t(e); const r = E(LD).getToken(), o = E(kD); return null != r && !e.headers.has(o) && (e = e.clone({ headers: e.headers.set(o, r) })), t(e) } var Ln = function (e) { return e[e.Interceptors = 0] = "Interceptors", e[e.LegacyInterceptors = 1] = "LegacyInterceptors", e[e.CustomXsrfConfiguration = 2] = "CustomXsrfConfiguration", e[e.NoXsrfProtection = 3] = "NoXsrfProtection", e[e.JsonpSupport = 4] = "JsonpSupport", e[e.RequestsMadeViaParent = 5] = "RequestsMadeViaParent", e[e.Fetch = 6] = "Fetch", e }(Ln || {}); function ZF(...e) { const t = [xF, RD, PD, { provide: Ja, useExisting: PD }, { provide: Ka, useExisting: RD }, { provide: ki, useValue: WF, multi: !0 }, { provide: hf, useValue: !0 }, { provide: LD, useClass: qF }]; for (const n of e) t.push(...n.\u0275providers); return function el(e) { return { \u0275providers: e } }(t) } const VD = new M("LEGACY_INTERCEPTOR_FN"); function YF() { return function ir(e, t) { return { \u0275kind: e, \u0275providers: t } }(Ln.LegacyInterceptors, [{ provide: VD, useFactory: VF }, { provide: ki, useExisting: VD, multi: !0 }]) } let QF = (() => { class e { static #e = this.\u0275fac = function (r) { return new (r || e) }; static #t = this.\u0275mod = yt({ type: e }); static #n = this.\u0275inj = st({ providers: [ZF(YF())] }) } return e })(); const { isArray: rk } = Array, { getPrototypeOf: ok, prototype: ik, keys: sk } = Object; function jD(e) { if (1 === e.length) { const t = e[0]; if (rk(t)) return { args: t, keys: null }; if (function ak(e) { return e && "object" == typeof e && ok(e) === ik }(t)) { const n = sk(t); return { args: n.map(r => t[r]), keys: n } } } return { args: e, keys: null } } const { isArray: uk } = Array; function BD(e) { return Y(t => function ck(e, t) { return uk(t) ? e(...t) : e(t) }(e, t)) } function HD(e, t) { return e.reduce((n, r, o) => (n[r] = t[o], n), {}) } function pf(...e) { const t = Oo(e), n = Th(e), { args: r, keys: o } = jD(e); if (0 === r.length) return Ee([], t); const i = new me(function lk(e, t, n = Dn) { return r => { $D(t, () => { const { length: o } = e, i = new Array(o); let s = o, a = o; for (let u = 0; u < o; u++)$D(t, () => { const c = Ee(e[u], t); let l = !1; c.subscribe(Ce(r, d => { i[u] = d, l || (l = !0, a--), a || r.next(n(i.slice())) }, () => { --s || r.complete() })) }, r) }, r) } }(r, t, o ? s => HD(o, s) : Dn)); return n ? i.pipe(BD(n)) : i } function $D(e, t, n) { e ? tn(n, e, t) : t() } const nu = So(e => function () { e(this), this.name = "EmptyError", this.message = "no elements in sequence" }); function gf(...e) { return function dk() { return pr(1) }()(Ee(e, Oo(e))) } function UD(e) { return new me(t => { ot(e()).subscribe(t) }) } function Li(e, t) { const n = ne(e) ? e : () => e, r = o => o.error(n()); return new me(t ? o => t.schedule(r, 0, o) : r) } function mf() { return we((e, t) => { let n = null; e._refCount++; const r = Ce(t, void 0, void 0, void 0, () => { if (!e || e._refCount <= 0 || 0 < --e._refCount) return void (n = null); const o = e._connection, i = n; n = null, o && (!i || o === i) && o.unsubscribe(), t.unsubscribe() }); e.subscribe(r), r.closed || (n = e.connect()) }) } class zD extends me { constructor(t, n) { super(), this.source = t, this.subjectFactory = n, this._subject = null, this._refCount = 0, this._connection = null, ph(t) && (this.lift = t.lift) } _subscribe(t) { return this.getSubject().subscribe(t) } getSubject() { const t = this._subject; return (!t || t.isStopped) && (this._subject = this.subjectFactory()), this._subject } _teardown() { this._refCount = 0; const { _connection: t } = this; this._subject = this._connection = null, t?.unsubscribe() } connect() { let t = this._connection; if (!t) { t = this._connection = new rt; const n = this.getSubject(); t.add(this.source.subscribe(Ce(n, void 0, () => { this._teardown(), n.complete() }, r => { this._teardown(), n.error(r) }, () => this._teardown()))), t.closed && (this._connection = null, t = rt.EMPTY) } return t } refCount() { return mf()(this) } } function mo(e) { return e <= 0 ? () => Vt : we((t, n) => { let r = 0; t.subscribe(Ce(n, o => { ++r <= e && (n.next(o), e <= r && n.complete()) })) }) } function ru(e) { return we((t, n) => { let r = !1; t.subscribe(Ce(n, o => { r = !0, n.next(o) }, () => { r || n.next(e), n.complete() })) }) } function GD(e = hk) { return we((t, n) => { let r = !1; t.subscribe(Ce(n, o => { r = !0, n.next(o) }, () => r ? n.complete() : n.error(e()))) }) } function hk() { return new nu } function sr(e, t) { const n = arguments.length >= 2; return r => r.pipe(e ? yn((o, i) => e(o, i, r)) : Dn, mo(1), n ? ru(t) : GD(() => new nu)) } function Le(e, t, n) { const r = ne(e) || t || n ? { next: e, error: t, complete: n } : e; return r ? we((o, i) => { var s; null === (s = r.subscribe) || void 0 === s || s.call(r); let a = !0; o.subscribe(Ce(i, u => { var c; null === (c = r.next) || void 0 === c || c.call(r, u), i.next(u) }, () => { var u; a = !1, null === (u = r.complete) || void 0 === u || u.call(r), i.complete() }, u => { var c; a = !1, null === (c = r.error) || void 0 === c || c.call(r, u), i.error(u) }, () => { var u, c; a && (null === (u = r.unsubscribe) || void 0 === u || u.call(r)), null === (c = r.finalize) || void 0 === c || c.call(r) })) }) : Dn } function ar(e) { return we((t, n) => { let i, r = null, o = !1; r = t.subscribe(Ce(n, void 0, void 0, s => { i = ot(e(s, ar(e)(t))), r ? (r.unsubscribe(), r = null, i.subscribe(n)) : o = !0 })), o && (r.unsubscribe(), r = null, i.subscribe(n)) }) } function vf(e) { return e <= 0 ? () => Vt : we((t, n) => { let r = []; t.subscribe(Ce(n, o => { r.push(o), e < r.length && r.shift() }, () => { for (const o of r) n.next(o); n.complete() }, void 0, () => { r = null })) }) } const B = "primary", Vi = Symbol("RouteTitle"); class _k { constructor(t) { this.params = t || {} } has(t) { return Object.prototype.hasOwnProperty.call(this.params, t) } get(t) { if (this.has(t)) { const n = this.params[t]; return Array.isArray(n) ? n[0] : n } return null } getAll(t) { if (this.has(t)) { const n = this.params[t]; return Array.isArray(n) ? n : [n] } return [] } get keys() { return Object.keys(this.params) } } function vo(e) { return new _k(e) } function Ck(e, t, n) { const r = n.path.split("/"); if (r.length > e.length || "full" === n.pathMatch && (t.hasChildren() || r.length < e.length)) return null; const o = {}; for (let i = 0; i < r.length; i++) { const s = r[i], a = e[i]; if (s.startsWith(":")) o[s.substring(1)] = a; else if (s !== a.path) return null } return { consumed: e.slice(0, r.length), posParams: o } } function Xt(e, t) { const n = e ? Object.keys(e) : void 0, r = t ? Object.keys(t) : void 0; if (!n || !r || n.length != r.length) return !1; let o; for (let i = 0; i < n.length; i++)if (o = n[i], !qD(e[o], t[o])) return !1; return !0 } function qD(e, t) { if (Array.isArray(e) && Array.isArray(t)) { if (e.length !== t.length) return !1; const n = [...e].sort(), r = [...t].sort(); return n.every((o, i) => r[i] === o) } return e === t } function WD(e) { return e.length > 0 ? e[e.length - 1] : null } function Vn(e) { return function nk(e) { return !!e && (e instanceof me || ne(e.lift) && ne(e.subscribe)) }(e) ? e : yi(e) ? Ee(Promise.resolve(e)) : N(e) } const wk = { exact: function QD(e, t, n) { if (!ur(e.segments, t.segments) || !ou(e.segments, t.segments, n) || e.numberOfChildren !== t.numberOfChildren) return !1; for (const r in t.children) if (!e.children[r] || !QD(e.children[r], t.children[r], n)) return !1; return !0 }, subset: XD }, ZD = { exact: function Ek(e, t) { return Xt(e, t) }, subset: function bk(e, t) { return Object.keys(t).length <= Object.keys(e).length && Object.keys(t).every(n => qD(e[n], t[n])) }, ignored: () => !0 }; function YD(e, t, n) { return wk[n.paths](e.root, t.root, n.matrixParams) && ZD[n.queryParams](e.queryParams, t.queryParams) && !("exact" === n.fragment && e.fragment !== t.fragment) } function XD(e, t, n) { return JD(e, t, t.segments, n) } function JD(e, t, n, r) { if (e.segments.length > n.length) { const o = e.segments.slice(0, n.length); return !(!ur(o, n) || t.hasChildren() || !ou(o, n, r)) } if (e.segments.length === n.length) { if (!ur(e.segments, n) || !ou(e.segments, n, r)) return !1; for (const o in t.children) if (!e.children[o] || !XD(e.children[o], t.children[o], r)) return !1; return !0 } { const o = n.slice(0, e.segments.length), i = n.slice(e.segments.length); return !!(ur(e.segments, o) && ou(e.segments, o, r) && e.children[B]) && JD(e.children[B], t, i, r) } } function ou(e, t, n) { return t.every((r, o) => ZD[n](e[o].parameters, r.parameters)) } class yo { constructor(t = new te([], {}), n = {}, r = null) { this.root = t, this.queryParams = n, this.fragment = r } get queryParamMap() { return this._queryParamMap || (this._queryParamMap = vo(this.queryParams)), this._queryParamMap } toString() { return Sk.serialize(this) } } class te { constructor(t, n) { this.segments = t, this.children = n, this.parent = null, Object.values(n).forEach(r => r.parent = this) } hasChildren() { return this.numberOfChildren > 0 } get numberOfChildren() { return Object.keys(this.children).length } toString() { return iu(this) } } class ji { constructor(t, n) { this.path = t, this.parameters = n } get parameterMap() { return this._parameterMap || (this._parameterMap = vo(this.parameters)), this._parameterMap } toString() { return tw(this) } } function ur(e, t) { return e.length === t.length && e.every((n, r) => n.path === t[r].path) } let Bi = (() => { class e { static #e = this.\u0275fac = function (r) { return new (r || e) }; static #t = this.\u0275prov = S({ token: e, factory: function () { return new yf }, providedIn: "root" }) } return e })(); class yf { parse(t) { const n = new Vk(t); return new yo(n.parseRootSegment(), n.parseQueryParams(), n.parseFragment()) } serialize(t) { const n = `/${Hi(t.root, !0)}`, r = function Ok(e) { const t = Object.keys(e).map(n => { const r = e[n]; return Array.isArray(r) ? r.map(o => `${su(n)}=${su(o)}`).join("&") : `${su(n)}=${su(r)}` }).filter(n => !!n); return t.length ? `?${t.join("&")}` : "" }(t.queryParams); return `${n}${r}${"string" == typeof t.fragment ? `#${function Ak(e) { return encodeURI(e) }(t.fragment)}` : ""}` } } const Sk = new yf; function iu(e) { return e.segments.map(t => tw(t)).join("/") } function Hi(e, t) { if (!e.hasChildren()) return iu(e); if (t) { const n = e.children[B] ? Hi(e.children[B], !1) : "", r = []; return Object.entries(e.children).forEach(([o, i]) => { o !== B && r.push(`${o}:${Hi(i, !1)}`) }), r.length > 0 ? `${n}(${r.join("//")})` : n } { const n = function Ik(e, t) { let n = []; return Object.entries(e.children).forEach(([r, o]) => { r === B && (n = n.concat(t(o, r))) }), Object.entries(e.children).forEach(([r, o]) => { r !== B && (n = n.concat(t(o, r))) }), n }(e, (r, o) => o === B ? [Hi(e.children[B], !1)] : [`${o}:${Hi(r, !1)}`]); return 1 === Object.keys(e.children).length && null != e.children[B] ? `${iu(e)}/${n[0]}` : `${iu(e)}/(${n.join("//")})` } } function KD(e) { return encodeURIComponent(e).replace(/%40/g, "@").replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",") } function su(e) { return KD(e).replace(/%3B/gi, ";") } function _f(e) { return KD(e).replace(/\(/g, "%28").replace(/\)/g, "%29").replace(/%26/gi, "&") } function au(e) { return decodeURIComponent(e) } function ew(e) { return au(e.replace(/\+/g, "%20")) } function tw(e) { return `${_f(e.path)}${function Tk(e) { return Object.keys(e).map(t => `;${_f(t)}=${_f(e[t])}`).join("") }(e.parameters)}` } const Nk = /^[^\/()?;#]+/; function Cf(e) { const t = e.match(Nk); return t ? t[0] : "" } const Pk = /^[^\/()?;=#]+/, Rk = /^[^=?&#]+/, kk = /^[^&#]+/; class Vk { constructor(t) { this.url = t, this.remaining = t } parseRootSegment() { return this.consumeOptional("/"), "" === this.remaining || this.peekStartsWith("?") || this.peekStartsWith("#") ? new te([], {}) : new te([], this.parseChildren()) } parseQueryParams() { const t = {}; if (this.consumeOptional("?")) do { this.parseQueryParam(t) } while (this.consumeOptional("&")); return t } parseFragment() { return this.consumeOptional("#") ? decodeURIComponent(this.remaining) : null } parseChildren() { if ("" === this.remaining) return {}; this.consumeOptional("/"); const t = []; for (this.peekStartsWith("(") || t.push(this.parseSegment()); this.peekStartsWith("/") && !this.peekStartsWith("//") && !this.peekStartsWith("/(");)this.capture("/"), t.push(this.parseSegment()); let n = {}; this.peekStartsWith("/(") && (this.capture("/"), n = this.parseParens(!0)); let r = {}; return this.peekStartsWith("(") && (r = this.parseParens(!1)), (t.length > 0 || Object.keys(n).length > 0) && (r[B] = new te(t, n)), r } parseSegment() { const t = Cf(this.remaining); if ("" === t && this.peekStartsWith(";")) throw new C(4009, !1); return this.capture(t), new ji(au(t), this.parseMatrixParams()) } parseMatrixParams() { const t = {}; for (; this.consumeOptional(";");)this.parseParam(t); return t } parseParam(t) { const n = function xk(e) { const t = e.match(Pk); return t ? t[0] : "" }(this.remaining); if (!n) return; this.capture(n); let r = ""; if (this.consumeOptional("=")) { const o = Cf(this.remaining); o && (r = o, this.capture(r)) } t[au(n)] = au(r) } parseQueryParam(t) { const n = function Fk(e) { const t = e.match(Rk); return t ? t[0] : "" }(this.remaining); if (!n) return; this.capture(n); let r = ""; if (this.consumeOptional("=")) { const s = function Lk(e) { const t = e.match(kk); return t ? t[0] : "" }(this.remaining); s && (r = s, this.capture(r)) } const o = ew(n), i = ew(r); if (t.hasOwnProperty(o)) { let s = t[o]; Array.isArray(s) || (s = [s], t[o] = s), s.push(i) } else t[o] = i } parseParens(t) { const n = {}; for (this.capture("("); !this.consumeOptional(")") && this.remaining.length > 0;) { const r = Cf(this.remaining), o = this.remaining[r.length]; if ("/" !== o && ")" !== o && ";" !== o) throw new C(4010, !1); let i; r.indexOf(":") > -1 ? (i = r.slice(0, r.indexOf(":")), this.capture(i), this.capture(":")) : t && (i = B); const s = this.parseChildren(); n[i] = 1 === Object.keys(s).length ? s[B] : new te([], s), this.consumeOptional("//") } return n } peekStartsWith(t) { return this.remaining.startsWith(t) } consumeOptional(t) { return !!this.peekStartsWith(t) && (this.remaining = this.remaining.substring(t.length), !0) } capture(t) { if (!this.consumeOptional(t)) throw new C(4011, !1) } } function nw(e) { return e.segments.length > 0 ? new te([], { [B]: e }) : e } function rw(e) { const t = {}; for (const r of Object.keys(e.children)) { const i = rw(e.children[r]); if (r === B && 0 === i.segments.length && i.hasChildren()) for (const [s, a] of Object.entries(i.children)) t[s] = a; else (i.segments.length > 0 || i.hasChildren()) && (t[r] = i) } return function jk(e) { if (1 === e.numberOfChildren && e.children[B]) { const t = e.children[B]; return new te(e.segments.concat(t.segments), t.children) } return e }(new te(e.segments, t)) } function cr(e) { return e instanceof yo } function ow(e) { let t; const o = nw(function n(i) { const s = {}; for (const u of i.children) { const c = n(u); s[u.outlet] = c } const a = new te(i.url, s); return i === e && (t = a), a }(e.root)); return t ?? o } function iw(e, t, n, r) { let o = e; for (; o.parent;)o = o.parent; if (0 === t.length) return Df(o, o, o, n, r); const i = function Hk(e) { if ("string" == typeof e[0] && 1 === e.length && "/" === e[0]) return new aw(!0, 0, e); let t = 0, n = !1; const r = e.reduce((o, i, s) => { if ("object" == typeof i && null != i) { if (i.outlets) { const a = {}; return Object.entries(i.outlets).forEach(([u, c]) => { a[u] = "string" == typeof c ? c.split("/") : c }), [...o, { outlets: a }] } if (i.segmentPath) return [...o, i.segmentPath] } return "string" != typeof i ? [...o, i] : 0 === s ? (i.split("/").forEach((a, u) => { 0 == u && "." === a || (0 == u && "" === a ? n = !0 : ".." === a ? t++ : "" != a && o.push(a)) }), o) : [...o, i] }, []); return new aw(n, t, r) }(t); if (i.toRoot()) return Df(o, o, new te([], {}), n, r); const s = function $k(e, t, n) { if (e.isAbsolute) return new cu(t, !0, 0); if (!n) return new cu(t, !1, NaN); if (null === n.parent) return new cu(n, !0, 0); const r = uu(e.commands[0]) ? 0 : 1; return function Uk(e, t, n) { let r = e, o = t, i = n; for (; i > o;) { if (i -= o, r = r.parent, !r) throw new C(4005, !1); o = r.segments.length } return new cu(r, !1, o - i) }(n, n.segments.length - 1 + r, e.numberOfDoubleDots) }(i, o, e), a = s.processChildren ? Ui(s.segmentGroup, s.index, i.commands) : uw(s.segmentGroup, s.index, i.commands); return Df(o, s.segmentGroup, a, n, r) } function uu(e) { return "object" == typeof e && null != e && !e.outlets && !e.segmentPath } function $i(e) { return "object" == typeof e && null != e && e.outlets } function Df(e, t, n, r, o) { let s, i = {}; r && Object.entries(r).forEach(([u, c]) => { i[u] = Array.isArray(c) ? c.map(l => `${l}`) : `${c}` }), s = e === t ? n : sw(e, t, n); const a = nw(rw(s)); return new yo(a, i, o) } function sw(e, t, n) { const r = {}; return Object.entries(e.children).forEach(([o, i]) => { r[o] = i === t ? n : sw(i, t, n) }), new te(e.segments, r) } class aw { constructor(t, n, r) { if (this.isAbsolute = t, this.numberOfDoubleDots = n, this.commands = r, t && r.length > 0 && uu(r[0])) throw new C(4003, !1); const o = r.find($i); if (o && o !== WD(r)) throw new C(4004, !1) } toRoot() { return this.isAbsolute && 1 === this.commands.length && "/" == this.commands[0] } } class cu { constructor(t, n, r) { this.segmentGroup = t, this.processChildren = n, this.index = r } } function uw(e, t, n) { if (e || (e = new te([], {})), 0 === e.segments.length && e.hasChildren()) return Ui(e, t, n); const r = function Gk(e, t, n) { let r = 0, o = t; const i = { match: !1, pathIndex: 0, commandIndex: 0 }; for (; o < e.segments.length;) { if (r >= n.length) return i; const s = e.segments[o], a = n[r]; if ($i(a)) break; const u = `${a}`, c = r < n.length - 1 ? n[r + 1] : null; if (o > 0 && void 0 === u) break; if (u && c && "object" == typeof c && void 0 === c.outlets) { if (!lw(u, c, s)) return i; r += 2 } else { if (!lw(u, {}, s)) return i; r++ } o++ } return { match: !0, pathIndex: o, commandIndex: r } }(e, t, n), o = n.slice(r.commandIndex); if (r.match && r.pathIndex < e.segments.length) { const i = new te(e.segments.slice(0, r.pathIndex), {}); return i.children[B] = new te(e.segments.slice(r.pathIndex), e.children), Ui(i, 0, o) } return r.match && 0 === o.length ? new te(e.segments, {}) : r.match && !e.hasChildren() ? wf(e, t, n) : r.match ? Ui(e, 0, o) : wf(e, t, n) } function Ui(e, t, n) { if (0 === n.length) return new te(e.segments, {}); { const r = function zk(e) { return $i(e[0]) ? e[0].outlets : { [B]: e } }(n), o = {}; if (Object.keys(r).some(i => i !== B) && e.children[B] && 1 === e.numberOfChildren && 0 === e.children[B].segments.length) { const i = Ui(e.children[B], t, n); return new te(e.segments, i.children) } return Object.entries(r).forEach(([i, s]) => { "string" == typeof s && (s = [s]), null !== s && (o[i] = uw(e.children[i], t, s)) }), Object.entries(e.children).forEach(([i, s]) => { void 0 === r[i] && (o[i] = s) }), new te(e.segments, o) } } function wf(e, t, n) { const r = e.segments.slice(0, t); let o = 0; for (; o < n.length;) { const i = n[o]; if ($i(i)) { const u = qk(i.outlets); return new te(r, u) } if (0 === o && uu(n[0])) { r.push(new ji(e.segments[t].path, cw(n[0]))), o++; continue } const s = $i(i) ? i.outlets[B] : `${i}`, a = o < n.length - 1 ? n[o + 1] : null; s && a && uu(a) ? (r.push(new ji(s, cw(a))), o += 2) : (r.push(new ji(s, {})), o++) } return new te(r, {}) } function qk(e) { const t = {}; return Object.entries(e).forEach(([n, r]) => { "string" == typeof r && (r = [r]), null !== r && (t[n] = wf(new te([], {}), 0, r)) }), t } function cw(e) { const t = {}; return Object.entries(e).forEach(([n, r]) => t[n] = `${r}`), t } function lw(e, t, n) { return e == n.path && Xt(t, n.parameters) } const zi = "imperative"; class Jt { constructor(t, n) { this.id = t, this.url = n } } class lu extends Jt { constructor(t, n, r = "imperative", o = null) { super(t, n), this.type = 0, this.navigationTrigger = r, this.restoredState = o } toString() { return `NavigationStart(id: ${this.id}, url: '${this.url}')` } } class jn extends Jt { constructor(t, n, r) { super(t, n), this.urlAfterRedirects = r, this.type = 1 } toString() { return `NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')` } } class Gi extends Jt { constructor(t, n, r, o) { super(t, n), this.reason = r, this.code = o, this.type = 2 } toString() { return `NavigationCancel(id: ${this.id}, url: '${this.url}')` } } class _o extends Jt { constructor(t, n, r, o) { super(t, n), this.reason = r, this.code = o, this.type = 16 } } class du extends Jt { constructor(t, n, r, o) { super(t, n), this.error = r, this.target = o, this.type = 3 } toString() { return `NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})` } } class dw extends Jt { constructor(t, n, r, o) { super(t, n), this.urlAfterRedirects = r, this.state = o, this.type = 4 } toString() { return `RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})` } } class Wk extends Jt { constructor(t, n, r, o) { super(t, n), this.urlAfterRedirects = r, this.state = o, this.type = 7 } toString() { return `GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})` } } class Zk extends Jt { constructor(t, n, r, o, i) { super(t, n), this.urlAfterRedirects = r, this.state = o, this.shouldActivate = i, this.type = 8 } toString() { return `GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})` } } class Yk extends Jt { constructor(t, n, r, o) { super(t, n), this.urlAfterRedirects = r, this.state = o, this.type = 5 } toString() { return `ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})` } } class Qk extends Jt { constructor(t, n, r, o) { super(t, n), this.urlAfterRedirects = r, this.state = o, this.type = 6 } toString() { return `ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})` } } class Xk { constructor(t) { this.route = t, this.type = 9 } toString() { return `RouteConfigLoadStart(path: ${this.route.path})` } } class Jk { constructor(t) { this.route = t, this.type = 10 } toString() { return `RouteConfigLoadEnd(path: ${this.route.path})` } } class Kk { constructor(t) { this.snapshot = t, this.type = 11 } toString() { return `ChildActivationStart(path: '${this.snapshot.routeConfig && this.snapshot.routeConfig.path || ""}')` } } class eL { constructor(t) { this.snapshot = t, this.type = 12 } toString() { return `ChildActivationEnd(path: '${this.snapshot.routeConfig && this.snapshot.routeConfig.path || ""}')` } } class tL { constructor(t) { this.snapshot = t, this.type = 13 } toString() { return `ActivationStart(path: '${this.snapshot.routeConfig && this.snapshot.routeConfig.path || ""}')` } } class nL { constructor(t) { this.snapshot = t, this.type = 14 } toString() { return `ActivationEnd(path: '${this.snapshot.routeConfig && this.snapshot.routeConfig.path || ""}')` } } class fw { constructor(t, n, r) { this.routerEvent = t, this.position = n, this.anchor = r, this.type = 15 } toString() { return `Scroll(anchor: '${this.anchor}', position: '${this.position ? `${this.position[0]}, ${this.position[1]}` : null}')` } } class Ef { } class bf { constructor(t) { this.url = t } } class rL { constructor() { this.outlet = null, this.route = null, this.injector = null, this.children = new qi, this.attachRef = null } } let qi = (() => { class e { constructor() { this.contexts = new Map } onChildOutletCreated(n, r) { const o = this.getOrCreateContext(n); o.outlet = r, this.contexts.set(n, o) } onChildOutletDestroyed(n) { const r = this.getContext(n); r && (r.outlet = null, r.attachRef = null) } onOutletDeactivated() { const n = this.contexts; return this.contexts = new Map, n } onOutletReAttached(n) { this.contexts = n } getOrCreateContext(n) { let r = this.getContext(n); return r || (r = new rL, this.contexts.set(n, r)), r } getContext(n) { return this.contexts.get(n) || null } static #e = this.\u0275fac = function (r) { return new (r || e) }; static #t = this.\u0275prov = S({ token: e, factory: e.\u0275fac, providedIn: "root" }) } return e })(); class hw { constructor(t) { this._root = t } get root() { return this._root.value } parent(t) { const n = this.pathFromRoot(t); return n.length > 1 ? n[n.length - 2] : null } children(t) { const n = Mf(t, this._root); return n ? n.children.map(r => r.value) : [] } firstChild(t) { const n = Mf(t, this._root); return n && n.children.length > 0 ? n.children[0].value : null } siblings(t) { const n = If(t, this._root); return n.length < 2 ? [] : n[n.length - 2].children.map(o => o.value).filter(o => o !== t) } pathFromRoot(t) { return If(t, this._root).map(n => n.value) } } function Mf(e, t) { if (e === t.value) return t; for (const n of t.children) { const r = Mf(e, n); if (r) return r } return null } function If(e, t) { if (e === t.value) return [t]; for (const n of t.children) { const r = If(e, n); if (r.length) return r.unshift(t), r } return [] } class _n { constructor(t, n) { this.value = t, this.children = n } toString() { return `TreeNode(${this.value})` } } function Co(e) { const t = {}; return e && e.children.forEach(n => t[n.value.outlet] = n), t } class pw extends hw { constructor(t, n) { super(t), this.snapshot = n, Sf(this, t) } toString() { return this.snapshot.toString() } } function gw(e, t) { const n = function oL(e, t) { const s = new fu([], {}, {}, "", {}, B, t, null, {}); return new vw("", new _n(s, [])) }(0, t), r = new mt([new ji("", {})]), o = new mt({}), i = new mt({}), s = new mt({}), a = new mt(""), u = new Do(r, o, s, a, i, B, t, n.root); return u.snapshot = n.root, new pw(new _n(u, []), n) } class Do { constructor(t, n, r, o, i, s, a, u) { this.urlSubject = t, this.paramsSubject = n, this.queryParamsSubject = r, this.fragmentSubject = o, this.dataSubject = i, this.outlet = s, this.component = a, this._futureSnapshot = u, this.title = this.dataSubject?.pipe(Y(c => c[Vi])) ?? N(void 0), this.url = t, this.params = n, this.queryParams = r, this.fragment = o, this.data = i } get routeConfig() { return this._futureSnapshot.routeConfig } get root() { return this._routerState.root } get parent() { return this._routerState.parent(this) } get firstChild() { return this._routerState.firstChild(this) } get children() { return this._routerState.children(this) } get pathFromRoot() { return this._routerState.pathFromRoot(this) } get paramMap() { return this._paramMap || (this._paramMap = this.params.pipe(Y(t => vo(t)))), this._paramMap } get queryParamMap() { return this._queryParamMap || (this._queryParamMap = this.queryParams.pipe(Y(t => vo(t)))), this._queryParamMap } toString() { return this.snapshot ? this.snapshot.toString() : `Future(${this._futureSnapshot})` } } function mw(e, t = "emptyOnly") { const n = e.pathFromRoot; let r = 0; if ("always" !== t) for (r = n.length - 1; r >= 1;) { const o = n[r], i = n[r - 1]; if (o.routeConfig && "" === o.routeConfig.path) r--; else { if (i.component) break; r-- } } return function iL(e) { return e.reduce((t, n) => ({ params: { ...t.params, ...n.params }, data: { ...t.data, ...n.data }, resolve: { ...n.data, ...t.resolve, ...n.routeConfig?.data, ...n._resolvedData } }), { params: {}, data: {}, resolve: {} }) }(n.slice(r)) } class fu { get title() { return this.data?.[Vi] } constructor(t, n, r, o, i, s, a, u, c) { this.url = t, this.params = n, this.queryParams = r, this.fragment = o, this.data = i, this.outlet = s, this.component = a, this.routeConfig = u, this._resolve = c } get root() { return this._routerState.root } get parent() { return this._routerState.parent(this) } get firstChild() { return this._routerState.firstChild(this) } get children() { return this._routerState.children(this) } get pathFromRoot() { return this._routerState.pathFromRoot(this) } get paramMap() { return this._paramMap || (this._paramMap = vo(this.params)), this._paramMap } get queryParamMap() { return this._queryParamMap || (this._queryParamMap = vo(this.queryParams)), this._queryParamMap } toString() { return `Route(url:'${this.url.map(r => r.toString()).join("/")}', path:'${this.routeConfig ? this.routeConfig.path : ""}')` } } class vw extends hw { constructor(t, n) { super(n), this.url = t, Sf(this, n) } toString() { return yw(this._root) } } function Sf(e, t) { t.value._routerState = e, t.children.forEach(n => Sf(e, n)) } function yw(e) { const t = e.children.length > 0 ? ` { ${e.children.map(yw).join(", ")} } ` : ""; return `${e.value}${t}` } function Af(e) { if (e.snapshot) { const t = e.snapshot, n = e._futureSnapshot; e.snapshot = n, Xt(t.queryParams, n.queryParams) || e.queryParamsSubject.next(n.queryParams), t.fragment !== n.fragment && e.fragmentSubject.next(n.fragment), Xt(t.params, n.params) || e.paramsSubject.next(n.params), function Dk(e, t) { if (e.length !== t.length) return !1; for (let n = 0; n < e.length; ++n)if (!Xt(e[n], t[n])) return !1; return !0 }(t.url, n.url) || e.urlSubject.next(n.url), Xt(t.data, n.data) || e.dataSubject.next(n.data) } else e.snapshot = e._futureSnapshot, e.dataSubject.next(e._futureSnapshot.data) } function Tf(e, t) { const n = Xt(e.params, t.params) && function Mk(e, t) { return ur(e, t) && e.every((n, r) => Xt(n.parameters, t[r].parameters)) }(e.url, t.url); return n && !(!e.parent != !t.parent) && (!e.parent || Tf(e.parent, t.parent)) } let Of = (() => { class e { constructor() { this.activated = null, this._activatedRoute = null, this.name = B, this.activateEvents = new pe, this.deactivateEvents = new pe, this.attachEvents = new pe, this.detachEvents = new pe, this.parentContexts = E(qi), this.location = E(Rt), this.changeDetector = E(Ra), this.environmentInjector = E(lt), this.inputBinder = E(hu, { optional: !0 }), this.supportsBindingToComponentInputs = !0 } get activatedComponentRef() { return this.activated } ngOnChanges(n) { if (n.name) { const { firstChange: r, previousValue: o } = n.name; if (r) return; this.isTrackedInParentContexts(o) && (this.deactivate(), this.parentContexts.onChildOutletDestroyed(o)), this.initializeOutletWithName() } } ngOnDestroy() { this.isTrackedInParentContexts(this.name) && this.parentContexts.onChildOutletDestroyed(this.name), this.inputBinder?.unsubscribeFromRouteData(this) } isTrackedInParentContexts(n) { return this.parentContexts.getContext(n)?.outlet === this } ngOnInit() { this.initializeOutletWithName() } initializeOutletWithName() { if (this.parentContexts.onChildOutletCreated(this.name, this), this.activated) return; const n = this.parentContexts.getContext(this.name); n?.route && (n.attachRef ? this.attach(n.attachRef, n.route) : this.activateWith(n.route, n.injector)) } get isActivated() { return !!this.activated } get component() { if (!this.activated) throw new C(4012, !1); return this.activated.instance } get activatedRoute() { if (!this.activated) throw new C(4012, !1); return this._activatedRoute } get activatedRouteData() { return this._activatedRoute ? this._activatedRoute.snapshot.data : {} } detach() { if (!this.activated) throw new C(4012, !1); this.location.detach(); const n = this.activated; return this.activated = null, this._activatedRoute = null, this.detachEvents.emit(n.instance), n } attach(n, r) { this.activated = n, this._activatedRoute = r, this.location.insert(n.hostView), this.inputBinder?.bindActivatedRouteToOutletComponent(this), this.attachEvents.emit(n.instance) } deactivate() { if (this.activated) { const n = this.component; this.activated.destroy(), this.activated = null, this._activatedRoute = null, this.deactivateEvents.emit(n) } } activateWith(n, r) { if (this.isActivated) throw new C(4013, !1); this._activatedRoute = n; const o = this.location, s = n.snapshot.component, a = this.parentContexts.getOrCreateContext(this.name).children, u = new sL(n, a, o.injector); this.activated = o.createComponent(s, { index: o.length, injector: u, environmentInjector: r ?? this.environmentInjector }), this.changeDetector.markForCheck(), this.inputBinder?.bindActivatedRouteToOutletComponent(this), this.activateEvents.emit(this.activated.instance) } static #e = this.\u0275fac = function (r) { return new (r || e) }; static #t = this.\u0275dir = F({ type: e, selectors: [["router-outlet"]], inputs: { name: "name" }, outputs: { activateEvents: "activate", deactivateEvents: "deactivate", attachEvents: "attach", detachEvents: "detach" }, exportAs: ["outlet"], standalone: !0, features: [Ct] }) } return e })(); class sL { constructor(t, n, r) { this.route = t, this.childContexts = n, this.parent = r } get(t, n) { return t === Do ? this.route : t === qi ? this.childContexts : this.parent.get(t, n) } } const hu = new M(""); let _w = (() => { class e { constructor() { this.outletDataSubscriptions = new Map } bindActivatedRouteToOutletComponent(n) { this.unsubscribeFromRouteData(n), this.subscribeToRouteData(n) } unsubscribeFromRouteData(n) { this.outletDataSubscriptions.get(n)?.unsubscribe(), this.outletDataSubscriptions.delete(n) } subscribeToRouteData(n) { const { activatedRoute: r } = n, o = pf([r.queryParams, r.params, r.data]).pipe(St(([i, s, a], u) => (a = { ...i, ...s, ...a }, 0 === u ? N(a) : Promise.resolve(a)))).subscribe(i => { if (!n.isActivated || !n.activatedComponentRef || n.activatedRoute !== r || null === r.component) return void this.unsubscribeFromRouteData(n); const s = function nR(e) { const t = q(e); if (!t) return null; const n = new fi(t); return { get selector() { return n.selector }, get type() { return n.componentType }, get inputs() { return n.inputs }, get outputs() { return n.outputs }, get ngContentSelectors() { return n.ngContentSelectors }, get isStandalone() { return t.standalone }, get isSignal() { return t.signals } } }(r.component); if (s) for (const { templateName: a } of s.inputs) n.activatedComponentRef.setInput(a, i[a]); else this.unsubscribeFromRouteData(n) }); this.outletDataSubscriptions.set(n, o) } static #e = this.\u0275fac = function (r) { return new (r || e) }; static #t = this.\u0275prov = S({ token: e, factory: e.\u0275fac }) } return e })(); function Wi(e, t, n) { if (n && e.shouldReuseRoute(t.value, n.value.snapshot)) { const r = n.value; r._futureSnapshot = t.value; const o = function uL(e, t, n) { return t.children.map(r => { for (const o of n.children) if (e.shouldReuseRoute(r.value, o.value.snapshot)) return Wi(e, r, o); return Wi(e, r) }) }(e, t, n); return new _n(r, o) } { if (e.shouldAttach(t.value)) { const i = e.retrieve(t.value); if (null !== i) { const s = i.route; return s.value._futureSnapshot = t.value, s.children = t.children.map(a => Wi(e, a)), s } } const r = function cL(e) { return new Do(new mt(e.url), new mt(e.params), new mt(e.queryParams), new mt(e.fragment), new mt(e.data), e.outlet, e.component, e) }(t.value), o = t.children.map(i => Wi(e, i)); return new _n(r, o) } } const Nf = "ngNavigationCancelingError"; function Cw(e, t) { const { redirectTo: n, navigationBehaviorOptions: r } = cr(t) ? { redirectTo: t, navigationBehaviorOptions: void 0 } : t, o = Dw(!1, 0, t); return o.url = n, o.navigationBehaviorOptions = r, o } function Dw(e, t, n) { const r = new Error("NavigationCancelingError: " + (e || "")); return r[Nf] = !0, r.cancellationCode = t, n && (r.url = n), r } function ww(e) { return e && e[Nf] } let Ew = (() => { class e { static #e = this.\u0275fac = function (r) { return new (r || e) }; static #t = this.\u0275cmp = vs({ type: e, selectors: [["ng-component"]], standalone: !0, features: [i_], decls: 1, vars: 0, template: function (r, o) { 1 & r && ze(0, "router-outlet") }, dependencies: [Of], encapsulation: 2 }) } return e })(); function Pf(e) { const t = e.children && e.children.map(Pf), n = t ? { ...e, children: t } : { ...e }; return !n.component && !n.loadComponent && (t || n.loadChildren) && n.outlet && n.outlet !== B && (n.component = Ew), n } function Lt(e) { return e.outlet || B } function Zi(e) { if (!e) return null; if (e.routeConfig?._injector) return e.routeConfig._injector; for (let t = e.parent; t; t = t.parent) { const n = t.routeConfig; if (n?._loadedInjector) return n._loadedInjector; if (n?._injector) return n._injector } return null } class vL { constructor(t, n, r, o, i) { this.routeReuseStrategy = t, this.futureState = n, this.currState = r, this.forwardEvent = o, this.inputBindingEnabled = i } activate(t) { const n = this.futureState._root, r = this.currState ? this.currState._root : null; this.deactivateChildRoutes(n, r, t), Af(this.futureState.root), this.activateChildRoutes(n, r, t) } deactivateChildRoutes(t, n, r) { const o = Co(n); t.children.forEach(i => { const s = i.value.outlet; this.deactivateRoutes(i, o[s], r), delete o[s] }), Object.values(o).forEach(i => { this.deactivateRouteAndItsChildren(i, r) }) } deactivateRoutes(t, n, r) { const o = t.value, i = n ? n.value : null; if (o === i) if (o.component) { const s = r.getContext(o.outlet); s && this.deactivateChildRoutes(t, n, s.children) } else this.deactivateChildRoutes(t, n, r); else i && this.deactivateRouteAndItsChildren(n, r) } deactivateRouteAndItsChildren(t, n) { t.value.component && this.routeReuseStrategy.shouldDetach(t.value.snapshot) ? this.detachAndStoreRouteSubtree(t, n) : this.deactivateRouteAndOutlet(t, n) } detachAndStoreRouteSubtree(t, n) { const r = n.getContext(t.value.outlet), o = r && t.value.component ? r.children : n, i = Co(t); for (const s of Object.keys(i)) this.deactivateRouteAndItsChildren(i[s], o); if (r && r.outlet) { const s = r.outlet.detach(), a = r.children.onOutletDeactivated(); this.routeReuseStrategy.store(t.value.snapshot, { componentRef: s, route: t, contexts: a }) } } deactivateRouteAndOutlet(t, n) { const r = n.getContext(t.value.outlet), o = r && t.value.component ? r.children : n, i = Co(t); for (const s of Object.keys(i)) this.deactivateRouteAndItsChildren(i[s], o); r && (r.outlet && (r.outlet.deactivate(), r.children.onOutletDeactivated()), r.attachRef = null, r.route = null) } activateChildRoutes(t, n, r) { const o = Co(n); t.children.forEach(i => { this.activateRoutes(i, o[i.value.outlet], r), this.forwardEvent(new nL(i.value.snapshot)) }), t.children.length && this.forwardEvent(new eL(t.value.snapshot)) } activateRoutes(t, n, r) { const o = t.value, i = n ? n.value : null; if (Af(o), o === i) if (o.component) { const s = r.getOrCreateContext(o.outlet); this.activateChildRoutes(t, n, s.children) } else this.activateChildRoutes(t, n, r); else if (o.component) { const s = r.getOrCreateContext(o.outlet); if (this.routeReuseStrategy.shouldAttach(o.snapshot)) { const a = this.routeReuseStrategy.retrieve(o.snapshot); this.routeReuseStrategy.store(o.snapshot, null), s.children.onOutletReAttached(a.contexts), s.attachRef = a.componentRef, s.route = a.route.value, s.outlet && s.outlet.attach(a.componentRef, a.route.value), Af(a.route.value), this.activateChildRoutes(t, null, s.children) } else { const a = Zi(o.snapshot); s.attachRef = null, s.route = o, s.injector = a, s.outlet && s.outlet.activateWith(o, s.injector), this.activateChildRoutes(t, null, s.children) } } else this.activateChildRoutes(t, null, r) } } class bw { constructor(t) { this.path = t, this.route = this.path[this.path.length - 1] } } class pu { constructor(t, n) { this.component = t, this.route = n } } function yL(e, t, n) { const r = e._root; return Yi(r, t ? t._root : null, n, [r.value]) } function wo(e, t) { const n = Symbol(), r = t.get(e, n); return r === n ? "function" != typeof e || function sM(e) { return null !== ls(e) }(e) ? t.get(e) : e : r } function Yi(e, t, n, r, o = { canDeactivateChecks: [], canActivateChecks: [] }) { const i = Co(t); return e.children.forEach(s => { (function CL(e, t, n, r, o = { canDeactivateChecks: [], canActivateChecks: [] }) { const i = e.value, s = t ? t.value : null, a = n ? n.getContext(e.value.outlet) : null; if (s && i.routeConfig === s.routeConfig) { const u = function DL(e, t, n) { if ("function" == typeof n) return n(e, t); switch (n) { case "pathParamsChange": return !ur(e.url, t.url); case "pathParamsOrQueryParamsChange": return !ur(e.url, t.url) || !Xt(e.queryParams, t.queryParams); case "always": return !0; case "paramsOrQueryParamsChange": return !Tf(e, t) || !Xt(e.queryParams, t.queryParams); default: return !Tf(e, t) } }(s, i, i.routeConfig.runGuardsAndResolvers); u ? o.canActivateChecks.push(new bw(r)) : (i.data = s.data, i._resolvedData = s._resolvedData), Yi(e, t, i.component ? a ? a.children : null : n, r, o), u && a && a.outlet && a.outlet.isActivated && o.canDeactivateChecks.push(new pu(a.outlet.component, s)) } else s && Qi(t, a, o), o.canActivateChecks.push(new bw(r)), Yi(e, null, i.component ? a ? a.children : null : n, r, o) })(s, i[s.value.outlet], n, r.concat([s.value]), o), delete i[s.value.outlet] }), Object.entries(i).forEach(([s, a]) => Qi(a, n.getContext(s), o)), o } function Qi(e, t, n) { const r = Co(e), o = e.value; Object.entries(r).forEach(([i, s]) => { Qi(s, o.component ? t ? t.children.getContext(i) : null : t, n) }), n.canDeactivateChecks.push(new pu(o.component && t && t.outlet && t.outlet.isActivated ? t.outlet.component : null, o)) } function Xi(e) { return "function" == typeof e } function Mw(e) { return e instanceof nu || "EmptyError" === e?.name } const gu = Symbol("INITIAL_VALUE"); function Eo() { return St(e => pf(e.map(t => t.pipe(mo(1), function fk(...e) { const t = Oo(e); return we((n, r) => { (t ? gf(e, n, t) : gf(e, n)).subscribe(r) }) }(gu)))).pipe(Y(t => { for (const n of t) if (!0 !== n) { if (n === gu) return gu; if (!1 === n || n instanceof yo) return n } return !0 }), yn(t => t !== gu), mo(1))) } function Iw(e) { return function ub(...e) { return dh(e) }(Le(t => { if (cr(t)) throw Cw(0, t) }), Y(t => !0 === t)) } class mu { constructor(t) { this.segmentGroup = t || null } } class Sw { constructor(t) { this.urlTree = t } } function bo(e) { return Li(new mu(e)) } function Aw(e) { return Li(new Sw(e)) } class HL { constructor(t, n) { this.urlSerializer = t, this.urlTree = n } noMatchError(t) { return new C(4002, !1) } lineralizeSegments(t, n) { let r = [], o = n.root; for (; ;) { if (r = r.concat(o.segments), 0 === o.numberOfChildren) return N(r); if (o.numberOfChildren > 1 || !o.children[B]) return Li(new C(4e3, !1)); o = o.children[B] } } applyRedirectCommands(t, n, r) { return this.applyRedirectCreateUrlTree(n, this.urlSerializer.parse(n), t, r) } applyRedirectCreateUrlTree(t, n, r, o) { const i = this.createSegmentGroup(t, n.root, r, o); return new yo(i, this.createQueryParams(n.queryParams, this.urlTree.queryParams), n.fragment) } createQueryParams(t, n) { const r = {}; return Object.entries(t).forEach(([o, i]) => { if ("string" == typeof i && i.startsWith(":")) { const a = i.substring(1); r[o] = n[a] } else r[o] = i }), r } createSegmentGroup(t, n, r, o) { const i = this.createSegments(t, n.segments, r, o); let s = {}; return Object.entries(n.children).forEach(([a, u]) => { s[a] = this.createSegmentGroup(t, u, r, o) }), new te(i, s) } createSegments(t, n, r, o) { return n.map(i => i.path.startsWith(":") ? this.findPosParam(t, i, o) : this.findOrReturn(i, r)) } findPosParam(t, n, r) { const o = r[n.path.substring(1)]; if (!o) throw new C(4001, !1); return o } findOrReturn(t, n) { let r = 0; for (const o of n) { if (o.path === t.path) return n.splice(r), o; r++ } return t } } const xf = { matched: !1, consumedSegments: [], remainingSegments: [], parameters: {}, positionalParamSegments: {} }; function $L(e, t, n, r, o) { const i = Rf(e, t, n); return i.matched ? (r = function dL(e, t) { return e.providers && !e._injector && (e._injector = id(e.providers, t, `Route: ${e.path}`)), e._injector ?? t }(t, r), function VL(e, t, n, r) { const o = t.canMatch; return o && 0 !== o.length ? N(o.map(s => { const a = wo(s, e); return Vn(function SL(e) { return e && Xi(e.canMatch) }(a) ? a.canMatch(t, n) : e.runInContext(() => a(t, n))) })).pipe(Eo(), Iw()) : N(!0) }(r, t, n).pipe(Y(s => !0 === s ? i : { ...xf }))) : N(i) } function Rf(e, t, n) { if ("" === t.path) return "full" === t.pathMatch && (e.hasChildren() || n.length > 0) ? { ...xf } : { matched: !0, consumedSegments: [], remainingSegments: n, parameters: {}, positionalParamSegments: {} }; const o = (t.matcher || Ck)(n, e, t); if (!o) return { ...xf }; const i = {}; Object.entries(o.posParams ?? {}).forEach(([a, u]) => { i[a] = u.path }); const s = o.consumed.length > 0 ? { ...i, ...o.consumed[o.consumed.length - 1].parameters } : i; return { matched: !0, consumedSegments: o.consumed, remainingSegments: n.slice(o.consumed.length), parameters: s, positionalParamSegments: o.posParams ?? {} } } function Tw(e, t, n, r) { return n.length > 0 && function GL(e, t, n) { return n.some(r => vu(e, t, r) && Lt(r) !== B) }(e, n, r) ? { segmentGroup: new te(t, zL(r, new te(n, e.children))), slicedSegments: [] } : 0 === n.length && function qL(e, t, n) { return n.some(r => vu(e, t, r)) }(e, n, r) ? { segmentGroup: new te(e.segments, UL(e, 0, n, r, e.children)), slicedSegments: n } : { segmentGroup: new te(e.segments, e.children), slicedSegments: n } } function UL(e, t, n, r, o) { const i = {}; for (const s of r) if (vu(e, n, s) && !o[Lt(s)]) { const a = new te([], {}); i[Lt(s)] = a } return { ...o, ...i } } function zL(e, t) { const n = {}; n[B] = t; for (const r of e) if ("" === r.path && Lt(r) !== B) { const o = new te([], {}); n[Lt(r)] = o } return n } function vu(e, t, n) { return (!(e.hasChildren() || t.length > 0) || "full" !== n.pathMatch) && "" === n.path } class QL { constructor(t, n, r, o, i, s, a) { this.injector = t, this.configLoader = n, this.rootComponentType = r, this.config = o, this.urlTree = i, this.paramsInheritanceStrategy = s, this.urlSerializer = a, this.allowRedirects = !0, this.applyRedirects = new HL(this.urlSerializer, this.urlTree) } noMatchError(t) { return new C(4002, !1) } recognize() { const t = Tw(this.urlTree.root, [], [], this.config).segmentGroup; return this.processSegmentGroup(this.injector, this.config, t, B).pipe(ar(n => { if (n instanceof Sw) return this.allowRedirects = !1, this.urlTree = n.urlTree, this.match(n.urlTree); throw n instanceof mu ? this.noMatchError(n) : n }), Y(n => { const r = new fu([], Object.freeze({}), Object.freeze({ ...this.urlTree.queryParams }), this.urlTree.fragment, {}, B, this.rootComponentType, null, {}), o = new _n(r, n), i = new vw("", o), s = function Bk(e, t, n = null, r = null) { return iw(ow(e), t, n, r) }(r, [], this.urlTree.queryParams, this.urlTree.fragment); return s.queryParams = this.urlTree.queryParams, i.url = this.urlSerializer.serialize(s), this.inheritParamsAndData(i._root), { state: i, tree: s } })) } match(t) { return this.processSegmentGroup(this.injector, this.config, t.root, B).pipe(ar(r => { throw r instanceof mu ? this.noMatchError(r) : r })) } inheritParamsAndData(t) { const n = t.value, r = mw(n, this.paramsInheritanceStrategy); n.params = Object.freeze(r.params), n.data = Object.freeze(r.data), t.children.forEach(o => this.inheritParamsAndData(o)) } processSegmentGroup(t, n, r, o) { return 0 === r.segments.length && r.hasChildren() ? this.processChildren(t, n, r) : this.processSegment(t, n, r, r.segments, o, !0) } processChildren(t, n, r) { const o = []; for (const i of Object.keys(r.children)) "primary" === i ? o.unshift(i) : o.push(i); return Ee(o).pipe(ho(i => { const s = r.children[i], a = function gL(e, t) { const n = e.filter(r => Lt(r) === t); return n.push(...e.filter(r => Lt(r) !== t)), n }(n, i); return this.processSegmentGroup(t, a, s, i) }), function gk(e, t) { return we(function pk(e, t, n, r, o) { return (i, s) => { let a = n, u = t, c = 0; i.subscribe(Ce(s, l => { const d = c++; u = a ? e(u, l, d) : (a = !0, l), r && s.next(u) }, o && (() => { a && s.next(u), s.complete() }))) } }(e, t, arguments.length >= 2, !0)) }((i, s) => (i.push(...s), i)), ru(null), function mk(e, t) { const n = arguments.length >= 2; return r => r.pipe(e ? yn((o, i) => e(o, i, r)) : Dn, vf(1), n ? ru(t) : GD(() => new nu)) }(), Ae(i => { if (null === i) return bo(r); const s = Ow(i); return function XL(e) { e.sort((t, n) => t.value.outlet === B ? -1 : n.value.outlet === B ? 1 : t.value.outlet.localeCompare(n.value.outlet)) }(s), N(s) })) } processSegment(t, n, r, o, i, s) { return Ee(n).pipe(ho(a => this.processSegmentAgainstRoute(a._injector ?? t, n, a, r, o, i, s).pipe(ar(u => { if (u instanceof mu) return N(null); throw u }))), sr(a => !!a), ar(a => { if (Mw(a)) return function ZL(e, t, n) { return 0 === t.length && !e.children[n] }(r, o, i) ? N([]) : bo(r); throw a })) } processSegmentAgainstRoute(t, n, r, o, i, s, a) { return function WL(e, t, n, r) { return !!(Lt(e) === r || r !== B && vu(t, n, e)) && ("**" === e.path || Rf(t, e, n).matched) }(r, o, i, s) ? void 0 === r.redirectTo ? this.matchSegmentAgainstRoute(t, o, r, i, s, a) : a && this.allowRedirects ? this.expandSegmentAgainstRouteUsingRedirect(t, o, n, r, i, s) : bo(o) : bo(o) } expandSegmentAgainstRouteUsingRedirect(t, n, r, o, i, s) { return "**" === o.path ? this.expandWildCardWithParamsAgainstRouteUsingRedirect(t, r, o, s) : this.expandRegularSegmentAgainstRouteUsingRedirect(t, n, r, o, i, s) } expandWildCardWithParamsAgainstRouteUsingRedirect(t, n, r, o) { const i = this.applyRedirects.applyRedirectCommands([], r.redirectTo, {}); return r.redirectTo.startsWith("/") ? Aw(i) : this.applyRedirects.lineralizeSegments(r, i).pipe(Ae(s => { const a = new te(s, {}); return this.processSegment(t, n, a, s, o, !1) })) } expandRegularSegmentAgainstRouteUsingRedirect(t, n, r, o, i, s) { const { matched: a, consumedSegments: u, remainingSegments: c, positionalParamSegments: l } = Rf(n, o, i); if (!a) return bo(n); const d = this.applyRedirects.applyRedirectCommands(u, o.redirectTo, l); return o.redirectTo.startsWith("/") ? Aw(d) : this.applyRedirects.lineralizeSegments(o, d).pipe(Ae(f => this.processSegment(t, r, n, f.concat(c), s, !1))) } matchSegmentAgainstRoute(t, n, r, o, i, s) { let a; if ("**" === r.path) { const u = o.length > 0 ? WD(o).parameters : {}; a = N({ snapshot: new fu(o, u, Object.freeze({ ...this.urlTree.queryParams }), this.urlTree.fragment, Nw(r), Lt(r), r.component ?? r._loadedComponent ?? null, r, Pw(r)), consumedSegments: [], remainingSegments: [] }), n.children = {} } else a = $L(n, r, o, t).pipe(Y(({ matched: u, consumedSegments: c, remainingSegments: l, parameters: d }) => u ? { snapshot: new fu(c, d, Object.freeze({ ...this.urlTree.queryParams }), this.urlTree.fragment, Nw(r), Lt(r), r.component ?? r._loadedComponent ?? null, r, Pw(r)), consumedSegments: c, remainingSegments: l } : null)); return a.pipe(St(u => null === u ? bo(n) : this.getChildConfig(t = r._injector ?? t, r, o).pipe(St(({ routes: c }) => { const l = r._loadedInjector ?? t, { snapshot: d, consumedSegments: f, remainingSegments: h } = u, { segmentGroup: p, slicedSegments: g } = Tw(n, f, h, c); if (0 === g.length && p.hasChildren()) return this.processChildren(l, c, p).pipe(Y(_ => null === _ ? null : [new _n(d, _)])); if (0 === c.length && 0 === g.length) return N([new _n(d, [])]); const v = Lt(r) === i; return this.processSegment(l, c, p, g, v ? B : i, !0).pipe(Y(_ => [new _n(d, _)])) })))) } getChildConfig(t, n, r) { return n.children ? N({ routes: n.children, injector: t }) : n.loadChildren ? void 0 !== n._loadedRoutes ? N({ routes: n._loadedRoutes, injector: n._loadedInjector }) : function LL(e, t, n, r) { const o = t.canLoad; return void 0 === o || 0 === o.length ? N(!0) : N(o.map(s => { const a = wo(s, e); return Vn(function EL(e) { return e && Xi(e.canLoad) }(a) ? a.canLoad(t, n) : e.runInContext(() => a(t, n))) })).pipe(Eo(), Iw()) }(t, n, r).pipe(Ae(o => o ? this.configLoader.loadChildren(t, n).pipe(Le(i => { n._loadedRoutes = i.routes, n._loadedInjector = i.injector })) : function BL(e) { return Li(Dw(!1, 3)) }())) : N({ routes: [], injector: t }) } } function JL(e) { const t = e.value.routeConfig; return t && "" === t.path } function Ow(e) { const t = [], n = new Set; for (const r of e) { if (!JL(r)) { t.push(r); continue } const o = t.find(i => r.value.routeConfig === i.value.routeConfig); void 0 !== o ? (o.children.push(...r.children), n.add(o)) : t.push(r) } for (const r of n) { const o = Ow(r.children); t.push(new _n(r.value, o)) } return t.filter(r => !n.has(r)) } function Nw(e) { return e.data || {} } function Pw(e) { return e.resolve || {} } function xw(e) { return "string" == typeof e.title || null === e.title } function Ff(e) { return St(t => { const n = e(t); return n ? Ee(n).pipe(Y(() => t)) : N(t) }) } const Mo = new M("ROUTES"); let kf = (() => { class e { constructor() { this.componentLoaders = new WeakMap, this.childrenLoaders = new WeakMap, this.compiler = E(X_) } loadComponent(n) { if (this.componentLoaders.get(n)) return this.componentLoaders.get(n); if (n._loadedComponent) return N(n._loadedComponent); this.onLoadStartListener && this.onLoadStartListener(n); const r = Vn(n.loadComponent()).pipe(Y(Rw), Le(i => { this.onLoadEndListener && this.onLoadEndListener(n), n._loadedComponent = i }), Ri(() => { this.componentLoaders.delete(n) })), o = new zD(r, () => new It).pipe(mf()); return this.componentLoaders.set(n, o), o } loadChildren(n, r) { if (this.childrenLoaders.get(r)) return this.childrenLoaders.get(r); if (r._loadedRoutes) return N({ routes: r._loadedRoutes, injector: r._loadedInjector }); this.onLoadStartListener && this.onLoadStartListener(r); const i = function iV(e, t, n, r) { return Vn(e.loadChildren()).pipe(Y(Rw), Ae(o => o instanceof r_ || Array.isArray(o) ? N(o) : Ee(t.compileModuleAsync(o))), Y(o => { r && r(e); let i, s, a = !1; return Array.isArray(o) ? (s = o, !0) : (i = o.create(n).injector, s = i.get(Mo, [], { optional: !0, self: !0 }).flat()), { routes: s.map(Pf), injector: i } })) }(r, this.compiler, n, this.onLoadEndListener).pipe(Ri(() => { this.childrenLoaders.delete(r) })), s = new zD(i, () => new It).pipe(mf()); return this.childrenLoaders.set(r, s), s } static #e = this.\u0275fac = function (r) { return new (r || e) }; static #t = this.\u0275prov = S({ token: e, factory: e.\u0275fac, providedIn: "root" }) } return e })(); function Rw(e) { return function sV(e) { return e && "object" == typeof e && "default" in e }(e) ? e.default : e } let yu = (() => { class e { get hasRequestedNavigation() { return 0 !== this.navigationId } constructor() { this.currentNavigation = null, this.currentTransition = null, this.lastSuccessfulNavigation = null, this.events = new It, this.transitionAbortSubject = new It, this.configLoader = E(kf), this.environmentInjector = E(lt), this.urlSerializer = E(Bi), this.rootContexts = E(qi), this.inputBindingEnabled = null !== E(hu, { optional: !0 }), this.navigationId = 0, this.afterPreactivation = () => N(void 0), this.rootComponentType = null, this.configLoader.onLoadEndListener = o => this.events.next(new Jk(o)), this.configLoader.onLoadStartListener = o => this.events.next(new Xk(o)) } complete() { this.transitions?.complete() } handleNavigationRequest(n) { const r = ++this.navigationId; this.transitions?.next({ ...this.transitions.value, ...n, id: r }) } setupNavigations(n, r, o) { return this.transitions = new mt({ id: 0, currentUrlTree: r, currentRawUrl: r, currentBrowserUrl: r, extractedUrl: n.urlHandlingStrategy.extract(r), urlAfterRedirects: n.urlHandlingStrategy.extract(r), rawUrl: r, extras: {}, resolve: null, reject: null, promise: Promise.resolve(!0), source: zi, restoredState: null, currentSnapshot: o.snapshot, targetSnapshot: null, currentRouterState: o, targetRouterState: null, guards: { canActivateChecks: [], canDeactivateChecks: [] }, guardsResult: null }), this.transitions.pipe(yn(i => 0 !== i.id), Y(i => ({ ...i, extractedUrl: n.urlHandlingStrategy.extract(i.rawUrl) })), St(i => { this.currentTransition = i; let s = !1, a = !1; return N(i).pipe(Le(u => { this.currentNavigation = { id: u.id, initialUrl: u.rawUrl, extractedUrl: u.extractedUrl, trigger: u.source, extras: u.extras, previousNavigation: this.lastSuccessfulNavigation ? { ...this.lastSuccessfulNavigation, previousNavigation: null } : null } }), St(u => { const c = u.currentBrowserUrl.toString(), l = !n.navigated || u.extractedUrl.toString() !== c || c !== u.currentUrlTree.toString(); if (!l && "reload" !== (u.extras.onSameUrlNavigation ?? n.onSameUrlNavigation)) { const f = ""; return this.events.next(new _o(u.id, this.urlSerializer.serialize(u.rawUrl), f, 0)), u.resolve(null), Vt } if (n.urlHandlingStrategy.shouldProcessUrl(u.rawUrl)) return N(u).pipe(St(f => { const h = this.transitions?.getValue(); return this.events.next(new lu(f.id, this.urlSerializer.serialize(f.extractedUrl), f.source, f.restoredState)), h !== this.transitions?.getValue() ? Vt : Promise.resolve(f) }), function KL(e, t, n, r, o, i) { return Ae(s => function YL(e, t, n, r, o, i, s = "emptyOnly") { return new QL(e, t, n, r, o, s, i).recognize() }(e, t, n, r, s.extractedUrl, o, i).pipe(Y(({ state: a, tree: u }) => ({ ...s, targetSnapshot: a, urlAfterRedirects: u })))) }(this.environmentInjector, this.configLoader, this.rootComponentType, n.config, this.urlSerializer, n.paramsInheritanceStrategy), Le(f => { i.targetSnapshot = f.targetSnapshot, i.urlAfterRedirects = f.urlAfterRedirects, this.currentNavigation = { ...this.currentNavigation, finalUrl: f.urlAfterRedirects }; const h = new dw(f.id, this.urlSerializer.serialize(f.extractedUrl), this.urlSerializer.serialize(f.urlAfterRedirects), f.targetSnapshot); this.events.next(h) })); if (l && n.urlHandlingStrategy.shouldProcessUrl(u.currentRawUrl)) { const { id: f, extractedUrl: h, source: p, restoredState: g, extras: v } = u, _ = new lu(f, this.urlSerializer.serialize(h), p, g); this.events.next(_); const m = gw(0, this.rootComponentType).snapshot; return this.currentTransition = i = { ...u, targetSnapshot: m, urlAfterRedirects: h, extras: { ...v, skipLocationChange: !1, replaceUrl: !1 } }, N(i) } { const f = ""; return this.events.next(new _o(u.id, this.urlSerializer.serialize(u.extractedUrl), f, 1)), u.resolve(null), Vt } }), Le(u => { const c = new Wk(u.id, this.urlSerializer.serialize(u.extractedUrl), this.urlSerializer.serialize(u.urlAfterRedirects), u.targetSnapshot); this.events.next(c) }), Y(u => (this.currentTransition = i = { ...u, guards: yL(u.targetSnapshot, u.currentSnapshot, this.rootContexts) }, i)), function TL(e, t) { return Ae(n => { const { targetSnapshot: r, currentSnapshot: o, guards: { canActivateChecks: i, canDeactivateChecks: s } } = n; return 0 === s.length && 0 === i.length ? N({ ...n, guardsResult: !0 }) : function OL(e, t, n, r) { return Ee(e).pipe(Ae(o => function kL(e, t, n, r, o) { const i = t && t.routeConfig ? t.routeConfig.canDeactivate : null; return i && 0 !== i.length ? N(i.map(a => { const u = Zi(t) ?? o, c = wo(a, u); return Vn(function IL(e) { return e && Xi(e.canDeactivate) }(c) ? c.canDeactivate(e, t, n, r) : u.runInContext(() => c(e, t, n, r))).pipe(sr()) })).pipe(Eo()) : N(!0) }(o.component, o.route, n, t, r)), sr(o => !0 !== o, !0)) }(s, r, o, e).pipe(Ae(a => a && function wL(e) { return "boolean" == typeof e }(a) ? function NL(e, t, n, r) { return Ee(t).pipe(ho(o => gf(function xL(e, t) { return null !== e && t && t(new Kk(e)), N(!0) }(o.route.parent, r), function PL(e, t) { return null !== e && t && t(new tL(e)), N(!0) }(o.route, r), function FL(e, t, n) { const r = t[t.length - 1], i = t.slice(0, t.length - 1).reverse().map(s => function _L(e) { const t = e.routeConfig ? e.routeConfig.canActivateChild : null; return t && 0 !== t.length ? { node: e, guards: t } : null }(s)).filter(s => null !== s).map(s => UD(() => N(s.guards.map(u => { const c = Zi(s.node) ?? n, l = wo(u, c); return Vn(function ML(e) { return e && Xi(e.canActivateChild) }(l) ? l.canActivateChild(r, e) : c.runInContext(() => l(r, e))).pipe(sr()) })).pipe(Eo()))); return N(i).pipe(Eo()) }(e, o.path, n), function RL(e, t, n) { const r = t.routeConfig ? t.routeConfig.canActivate : null; if (!r || 0 === r.length) return N(!0); const o = r.map(i => UD(() => { const s = Zi(t) ?? n, a = wo(i, s); return Vn(function bL(e) { return e && Xi(e.canActivate) }(a) ? a.canActivate(t, e) : s.runInContext(() => a(t, e))).pipe(sr()) })); return N(o).pipe(Eo()) }(e, o.route, n))), sr(o => !0 !== o, !0)) }(r, i, e, t) : N(a)), Y(a => ({ ...n, guardsResult: a }))) }) }(this.environmentInjector, u => this.events.next(u)), Le(u => { if (i.guardsResult = u.guardsResult, cr(u.guardsResult)) throw Cw(0, u.guardsResult); const c = new Zk(u.id, this.urlSerializer.serialize(u.extractedUrl), this.urlSerializer.serialize(u.urlAfterRedirects), u.targetSnapshot, !!u.guardsResult); this.events.next(c) }), yn(u => !!u.guardsResult || (this.cancelNavigationTransition(u, "", 3), !1)), Ff(u => { if (u.guards.canActivateChecks.length) return N(u).pipe(Le(c => { const l = new Yk(c.id, this.urlSerializer.serialize(c.extractedUrl), this.urlSerializer.serialize(c.urlAfterRedirects), c.targetSnapshot); this.events.next(l) }), St(c => { let l = !1; return N(c).pipe(function eV(e, t) { return Ae(n => { const { targetSnapshot: r, guards: { canActivateChecks: o } } = n; if (!o.length) return N(n); let i = 0; return Ee(o).pipe(ho(s => function tV(e, t, n, r) { const o = e.routeConfig, i = e._resolve; return void 0 !== o?.title && !xw(o) && (i[Vi] = o.title), function nV(e, t, n, r) { const o = function rV(e) { return [...Object.keys(e), ...Object.getOwnPropertySymbols(e)] }(e); if (0 === o.length) return N({}); const i = {}; return Ee(o).pipe(Ae(s => function oV(e, t, n, r) { const o = Zi(t) ?? r, i = wo(e, o); return Vn(i.resolve ? i.resolve(t, n) : o.runInContext(() => i(t, n))) }(e[s], t, n, r).pipe(sr(), Le(a => { i[s] = a }))), vf(1), function vk(e) { return Y(() => e) }(i), ar(s => Mw(s) ? Vt : Li(s))) }(i, e, t, r).pipe(Y(s => (e._resolvedData = s, e.data = mw(e, n).resolve, o && xw(o) && (e.data[Vi] = o.title), null))) }(s.route, r, e, t)), Le(() => i++), vf(1), Ae(s => i === o.length ? N(n) : Vt)) }) }(n.paramsInheritanceStrategy, this.environmentInjector), Le({ next: () => l = !0, complete: () => { l || this.cancelNavigationTransition(c, "", 2) } })) }), Le(c => { const l = new Qk(c.id, this.urlSerializer.serialize(c.extractedUrl), this.urlSerializer.serialize(c.urlAfterRedirects), c.targetSnapshot); this.events.next(l) })) }), Ff(u => { const c = l => { const d = []; l.routeConfig?.loadComponent && !l.routeConfig._loadedComponent && d.push(this.configLoader.loadComponent(l.routeConfig).pipe(Le(f => { l.component = f }), Y(() => { }))); for (const f of l.children) d.push(...c(f)); return d }; return pf(c(u.targetSnapshot.root)).pipe(ru(), mo(1)) }), Ff(() => this.afterPreactivation()), Y(u => { const c = function aL(e, t, n) { const r = Wi(e, t._root, n ? n._root : void 0); return new pw(r, t) }(n.routeReuseStrategy, u.targetSnapshot, u.currentRouterState); return this.currentTransition = i = { ...u, targetRouterState: c }, i }), Le(() => { this.events.next(new Ef) }), ((e, t, n, r) => Y(o => (new vL(t, o.targetRouterState, o.currentRouterState, n, r).activate(e), o)))(this.rootContexts, n.routeReuseStrategy, u => this.events.next(u), this.inputBindingEnabled), mo(1), Le({ next: u => { s = !0, this.lastSuccessfulNavigation = this.currentNavigation, this.events.next(new jn(u.id, this.urlSerializer.serialize(u.extractedUrl), this.urlSerializer.serialize(u.urlAfterRedirects))), n.titleStrategy?.updateTitle(u.targetRouterState.snapshot), u.resolve(!0) }, complete: () => { s = !0 } }), function yk(e) { return we((t, n) => { ot(e).subscribe(Ce(n, () => n.complete(), Nu)), !n.closed && t.subscribe(n) }) }(this.transitionAbortSubject.pipe(Le(u => { throw u }))), Ri(() => { s || a || this.cancelNavigationTransition(i, "", 1), this.currentNavigation?.id === i.id && (this.currentNavigation = null) }), ar(u => { if (a = !0, ww(u)) this.events.next(new Gi(i.id, this.urlSerializer.serialize(i.extractedUrl), u.message, u.cancellationCode)), function lL(e) { return ww(e) && cr(e.url) }(u) ? this.events.next(new bf(u.url)) : i.resolve(!1); else { this.events.next(new du(i.id, this.urlSerializer.serialize(i.extractedUrl), u, i.targetSnapshot ?? void 0)); try { i.resolve(n.errorHandler(u)) } catch (c) { i.reject(c) } } return Vt })) })) } cancelNavigationTransition(n, r, o) { const i = new Gi(n.id, this.urlSerializer.serialize(n.extractedUrl), r, o); this.events.next(i), n.resolve(!1) } static #e = this.\u0275fac = function (r) { return new (r || e) }; static #t = this.\u0275prov = S({ token: e, factory: e.\u0275fac, providedIn: "root" }) } return e })(); function Fw(e) { return e !== zi } let kw = (() => { class e { buildTitle(n) { let r, o = n.root; for (; void 0 !== o;)r = this.getResolvedTitleForRoute(o) ?? r, o = o.children.find(i => i.outlet === B); return r } getResolvedTitleForRoute(n) { return n.data[Vi] } static #e = this.\u0275fac = function (r) { return new (r || e) }; static #t = this.\u0275prov = S({ token: e, factory: function () { return E(aV) }, providedIn: "root" }) } return e })(), aV = (() => { class e extends kw { constructor(n) { super(), this.title = n } updateTitle(n) { const r = this.buildTitle(n); void 0 !== r && this.title.setTitle(r) } static #e = this.\u0275fac = function (r) { return new (r || e)(I(_D)) }; static #t = this.\u0275prov = S({ token: e, factory: e.\u0275fac, providedIn: "root" }) } return e })(), uV = (() => { class e { static #e = this.\u0275fac = function (r) { return new (r || e) }; static #t = this.\u0275prov = S({ token: e, factory: function () { return E(lV) }, providedIn: "root" }) } return e })(); class cV { shouldDetach(t) { return !1 } store(t, n) { } shouldAttach(t) { return !1 } retrieve(t) { return null } shouldReuseRoute(t, n) { return t.routeConfig === n.routeConfig } } let lV = (() => { class e extends cV { static #e = this.\u0275fac = function () { let n; return function (o) { return (n || (n = xe(e)))(o || e) } }(); static #t = this.\u0275prov = S({ token: e, factory: e.\u0275fac, providedIn: "root" }) } return e })(); const _u = new M("", { providedIn: "root", factory: () => ({}) }); let dV = (() => { class e { static #e = this.\u0275fac = function (r) { return new (r || e) }; static #t = this.\u0275prov = S({ token: e, factory: function () { return E(fV) }, providedIn: "root" }) } return e })(), fV = (() => { class e { shouldProcessUrl(n) { return !0 } extract(n) { return n } merge(n, r) { return n } static #e = this.\u0275fac = function (r) { return new (r || e) }; static #t = this.\u0275prov = S({ token: e, factory: e.\u0275fac, providedIn: "root" }) } return e })(); var Ji = function (e) { return e[e.COMPLETE = 0] = "COMPLETE", e[e.FAILED = 1] = "FAILED", e[e.REDIRECTING = 2] = "REDIRECTING", e }(Ji || {}); function Lw(e, t) { e.events.pipe(yn(n => n instanceof jn || n instanceof Gi || n instanceof du || n instanceof _o), Y(n => n instanceof jn || n instanceof _o ? Ji.COMPLETE : n instanceof Gi && (0 === n.code || 1 === n.code) ? Ji.REDIRECTING : Ji.FAILED), yn(n => n !== Ji.REDIRECTING), mo(1)).subscribe(() => { t() }) } function hV(e) { throw e } function pV(e, t, n) { return t.parse("/") } const gV = { paths: "exact", fragment: "ignored", matrixParams: "ignored", queryParams: "exact" }, mV = { paths: "subset", fragment: "ignored", matrixParams: "ignored", queryParams: "subset" }; let Mt = (() => { class e { get navigationId() { return this.navigationTransitions.navigationId } get browserPageId() { return "computed" !== this.canceledNavigationResolution ? this.currentPageId : this.location.getState()?.\u0275routerPageId ?? this.currentPageId } get events() { return this._events } constructor() { this.disposed = !1, this.currentPageId = 0, this.console = E(Q_), this.isNgZoneEnabled = !1, this._events = new It, this.options = E(_u, { optional: !0 }) || {}, this.pendingTasks = E(Oa), this.errorHandler = this.options.errorHandler || hV, this.malformedUriErrorHandler = this.options.malformedUriErrorHandler || pV, this.navigated = !1, this.lastSuccessfulId = -1, this.urlHandlingStrategy = E(dV), this.routeReuseStrategy = E(uV), this.titleStrategy = E(kw), this.onSameUrlNavigation = this.options.onSameUrlNavigation || "ignore", this.paramsInheritanceStrategy = this.options.paramsInheritanceStrategy || "emptyOnly", this.urlUpdateStrategy = this.options.urlUpdateStrategy || "deferred", this.canceledNavigationResolution = this.options.canceledNavigationResolution || "replace", this.config = E(Mo, { optional: !0 })?.flat() ?? [], this.navigationTransitions = E(yu), this.urlSerializer = E(Bi), this.location = E(Ld), this.componentInputBindingEnabled = !!E(hu, { optional: !0 }), this.eventsSubscription = new rt, this.isNgZoneEnabled = E(ae) instanceof ae && ae.isInAngularZone(), this.resetConfig(this.config), this.currentUrlTree = new yo, this.rawUrlTree = this.currentUrlTree, this.browserUrlTree = this.currentUrlTree, this.routerState = gw(0, null), this.navigationTransitions.setupNavigations(this, this.currentUrlTree, this.routerState).subscribe(n => { this.lastSuccessfulId = n.id, this.currentPageId = this.browserPageId }, n => { this.console.warn(`Unhandled Navigation Error: ${n}`) }), this.subscribeToNavigationEvents() } subscribeToNavigationEvents() { const n = this.navigationTransitions.events.subscribe(r => { try { const { currentTransition: o } = this.navigationTransitions; if (null === o) return void (Vw(r) && this._events.next(r)); if (r instanceof lu) Fw(o.source) && (this.browserUrlTree = o.extractedUrl); else if (r instanceof _o) this.rawUrlTree = o.rawUrl; else if (r instanceof dw) { if ("eager" === this.urlUpdateStrategy) { if (!o.extras.skipLocationChange) { const i = this.urlHandlingStrategy.merge(o.urlAfterRedirects, o.rawUrl); this.setBrowserUrl(i, o) } this.browserUrlTree = o.urlAfterRedirects } } else if (r instanceof Ef) this.currentUrlTree = o.urlAfterRedirects, this.rawUrlTree = this.urlHandlingStrategy.merge(o.urlAfterRedirects, o.rawUrl), this.routerState = o.targetRouterState, "deferred" === this.urlUpdateStrategy && (o.extras.skipLocationChange || this.setBrowserUrl(this.rawUrlTree, o), this.browserUrlTree = o.urlAfterRedirects); else if (r instanceof Gi) 0 !== r.code && 1 !== r.code && (this.navigated = !0), (3 === r.code || 2 === r.code) && this.restoreHistory(o); else if (r instanceof bf) { const i = this.urlHandlingStrategy.merge(r.url, o.currentRawUrl), s = { skipLocationChange: o.extras.skipLocationChange, replaceUrl: "eager" === this.urlUpdateStrategy || Fw(o.source) }; this.scheduleNavigation(i, zi, null, s, { resolve: o.resolve, reject: o.reject, promise: o.promise }) } r instanceof du && this.restoreHistory(o, !0), r instanceof jn && (this.navigated = !0), Vw(r) && this._events.next(r) } catch (o) { this.navigationTransitions.transitionAbortSubject.next(o) } }); this.eventsSubscription.add(n) } resetRootComponentType(n) { this.routerState.root.component = n, this.navigationTransitions.rootComponentType = n } initialNavigation() { if (this.setUpLocationChangeListener(), !this.navigationTransitions.hasRequestedNavigation) { const n = this.location.getState(); this.navigateToSyncWithBrowser(this.location.path(!0), zi, n) } } setUpLocationChangeListener() { this.locationSubscription || (this.locationSubscription = this.location.subscribe(n => { const r = "popstate" === n.type ? "popstate" : "hashchange"; "popstate" === r && setTimeout(() => { this.navigateToSyncWithBrowser(n.url, r, n.state) }, 0) })) } navigateToSyncWithBrowser(n, r, o) { const i = { replaceUrl: !0 }, s = o?.navigationId ? o : null; if (o) { const u = { ...o }; delete u.navigationId, delete u.\u0275routerPageId, 0 !== Object.keys(u).length && (i.state = u) } const a = this.parseUrl(n); this.scheduleNavigation(a, r, s, i) } get url() { return this.serializeUrl(this.currentUrlTree) } getCurrentNavigation() { return this.navigationTransitions.currentNavigation } get lastSuccessfulNavigation() { return this.navigationTransitions.lastSuccessfulNavigation } resetConfig(n) { this.config = n.map(Pf), this.navigated = !1, this.lastSuccessfulId = -1 } ngOnDestroy() { this.dispose() } dispose() { this.navigationTransitions.complete(), this.locationSubscription && (this.locationSubscription.unsubscribe(), this.locationSubscription = void 0), this.disposed = !0, this.eventsSubscription.unsubscribe() } createUrlTree(n, r = {}) { const { relativeTo: o, queryParams: i, fragment: s, queryParamsHandling: a, preserveFragment: u } = r, c = u ? this.currentUrlTree.fragment : s; let d, l = null; switch (a) { case "merge": l = { ...this.currentUrlTree.queryParams, ...i }; break; case "preserve": l = this.currentUrlTree.queryParams; break; default: l = i || null }null !== l && (l = this.removeEmptyProps(l)); try { d = ow(o ? o.snapshot : this.routerState.snapshot.root) } catch { ("string" != typeof n[0] || !n[0].startsWith("/")) && (n = []), d = this.currentUrlTree.root } return iw(d, n, l, c ?? null) } navigateByUrl(n, r = { skipLocationChange: !1 }) { const o = cr(n) ? n : this.parseUrl(n), i = this.urlHandlingStrategy.merge(o, this.rawUrlTree); return this.scheduleNavigation(i, zi, null, r) } navigate(n, r = { skipLocationChange: !1 }) { return function vV(e) { for (let t = 0; t < e.length; t++)if (null == e[t]) throw new C(4008, !1) }(n), this.navigateByUrl(this.createUrlTree(n, r), r) } serializeUrl(n) { return this.urlSerializer.serialize(n) } parseUrl(n) { let r; try { r = this.urlSerializer.parse(n) } catch (o) { r = this.malformedUriErrorHandler(o, this.urlSerializer, n) } return r } isActive(n, r) { let o; if (o = !0 === r ? { ...gV } : !1 === r ? { ...mV } : r, cr(n)) return YD(this.currentUrlTree, n, o); const i = this.parseUrl(n); return YD(this.currentUrlTree, i, o) } removeEmptyProps(n) { return Object.keys(n).reduce((r, o) => { const i = n[o]; return null != i && (r[o] = i), r }, {}) } scheduleNavigation(n, r, o, i, s) { if (this.disposed) return Promise.resolve(!1); let a, u, c; s ? (a = s.resolve, u = s.reject, c = s.promise) : c = new Promise((d, f) => { a = d, u = f }); const l = this.pendingTasks.add(); return Lw(this, () => { queueMicrotask(() => this.pendingTasks.remove(l)) }), this.navigationTransitions.handleNavigationRequest({ source: r, restoredState: o, currentUrlTree: this.currentUrlTree, currentRawUrl: this.currentUrlTree, currentBrowserUrl: this.browserUrlTree, rawUrl: n, extras: i, resolve: a, reject: u, promise: c, currentSnapshot: this.routerState.snapshot, currentRouterState: this.routerState }), c.catch(d => Promise.reject(d)) } setBrowserUrl(n, r) { const o = this.urlSerializer.serialize(n); if (this.location.isCurrentPathEqualTo(o) || r.extras.replaceUrl) { const s = { ...r.extras.state, ...this.generateNgRouterState(r.id, this.browserPageId) }; this.location.replaceState(o, "", s) } else { const i = { ...r.extras.state, ...this.generateNgRouterState(r.id, this.browserPageId + 1) }; this.location.go(o, "", i) } } restoreHistory(n, r = !1) { if ("computed" === this.canceledNavigationResolution) { const i = this.currentPageId - this.browserPageId; 0 !== i ? this.location.historyGo(i) : this.currentUrlTree === this.getCurrentNavigation()?.finalUrl && 0 === i && (this.resetState(n), this.browserUrlTree = n.currentUrlTree, this.resetUrlToCurrentUrlTree()) } else "replace" === this.canceledNavigationResolution && (r && this.resetState(n), this.resetUrlToCurrentUrlTree()) } resetState(n) { this.routerState = n.currentRouterState, this.currentUrlTree = n.currentUrlTree, this.rawUrlTree = this.urlHandlingStrategy.merge(this.currentUrlTree, n.rawUrl) } resetUrlToCurrentUrlTree() { this.location.replaceState(this.urlSerializer.serialize(this.rawUrlTree), "", this.generateNgRouterState(this.lastSuccessfulId, this.currentPageId)) } generateNgRouterState(n, r) { return "computed" === this.canceledNavigationResolution ? { navigationId: n, \u0275routerPageId: r } : { navigationId: n } } static #e = this.\u0275fac = function (r) { return new (r || e) }; static #t = this.\u0275prov = S({ token: e, factory: e.\u0275fac, providedIn: "root" }) } return e })(); function Vw(e) { return !(e instanceof Ef || e instanceof bf) } class jw { } let CV = (() => { class e { constructor(n, r, o, i, s) { this.router = n, this.injector = o, this.preloadingStrategy = i, this.loader = s } setUpPreloading() { this.subscription = this.router.events.pipe(yn(n => n instanceof jn), ho(() => this.preload())).subscribe(() => { }) } preload() { return this.processRoutes(this.injector, this.router.config) } ngOnDestroy() { this.subscription && this.subscription.unsubscribe() } processRoutes(n, r) { const o = []; for (const i of r) { i.providers && !i._injector && (i._injector = id(i.providers, n, `Route: ${i.path}`)); const s = i._injector ?? n, a = i._loadedInjector ?? s; (i.loadChildren && !i._loadedRoutes && void 0 === i.canLoad || i.loadComponent && !i._loadedComponent) && o.push(this.preloadConfig(s, i)), (i.children || i._loadedRoutes) && o.push(this.processRoutes(a, i.children ?? i._loadedRoutes)) } return Ee(o).pipe(pr()) } preloadConfig(n, r) { return this.preloadingStrategy.preload(r, () => { let o; o = r.loadChildren && void 0 === r.canLoad ? this.loader.loadChildren(n, r) : N(null); const i = o.pipe(Ae(s => null === s ? N(void 0) : (r._loadedRoutes = s.routes, r._loadedInjector = s.injector, this.processRoutes(s.injector ?? n, s.routes)))); return r.loadComponent && !r._loadedComponent ? Ee([i, this.loader.loadComponent(r)]).pipe(pr()) : i }) } static #e = this.\u0275fac = function (r) { return new (r || e)(I(Mt), I(X_), I(lt), I(jw), I(kf)) }; static #t = this.\u0275prov = S({ token: e, factory: e.\u0275fac, providedIn: "root" }) } return e })(); const Vf = new M(""); let Bw = (() => { class e { constructor(n, r, o, i, s = {}) { this.urlSerializer = n, this.transitions = r, this.viewportScroller = o, this.zone = i, this.options = s, this.lastId = 0, this.lastSource = "imperative", this.restoredId = 0, this.store = {}, s.scrollPositionRestoration = s.scrollPositionRestoration || "disabled", s.anchorScrolling = s.anchorScrolling || "disabled" } init() { "disabled" !== this.options.scrollPositionRestoration && this.viewportScroller.setHistoryScrollRestoration("manual"), this.routerEventsSubscription = this.createScrollEvents(), this.scrollEventsSubscription = this.consumeScrollEvents() } createScrollEvents() { return this.transitions.events.subscribe(n => { n instanceof lu ? (this.store[this.lastId] = this.viewportScroller.getScrollPosition(), this.lastSource = n.navigationTrigger, this.restoredId = n.restoredState ? n.restoredState.navigationId : 0) : n instanceof jn ? (this.lastId = n.id, this.scheduleScrollEvent(n, this.urlSerializer.parse(n.urlAfterRedirects).fragment)) : n instanceof _o && 0 === n.code && (this.lastSource = void 0, this.restoredId = 0, this.scheduleScrollEvent(n, this.urlSerializer.parse(n.url).fragment)) }) } consumeScrollEvents() { return this.transitions.events.subscribe(n => { n instanceof fw && (n.position ? "top" === this.options.scrollPositionRestoration ? this.viewportScroller.scrollToPosition([0, 0]) : "enabled" === this.options.scrollPositionRestoration && this.viewportScroller.scrollToPosition(n.position) : n.anchor && "enabled" === this.options.anchorScrolling ? this.viewportScroller.scrollToAnchor(n.anchor) : "disabled" !== this.options.scrollPositionRestoration && this.viewportScroller.scrollToPosition([0, 0])) }) } scheduleScrollEvent(n, r) { this.zone.runOutsideAngular(() => { setTimeout(() => { this.zone.run(() => { this.transitions.events.next(new fw(n, "popstate" === this.lastSource ? this.store[this.restoredId] : null, r)) }) }, 0) }) } ngOnDestroy() { this.routerEventsSubscription?.unsubscribe(), this.scrollEventsSubscription?.unsubscribe() } static #e = this.\u0275fac = function (r) { !function Hm() { throw new Error("invalid") }() }; static #t = this.\u0275prov = S({ token: e, factory: e.\u0275fac }) } return e })(); function Cn(e, t) { return { \u0275kind: e, \u0275providers: t } } function $w() { const e = E(ft); return t => { const n = e.get(co); if (t !== n.components[0]) return; const r = e.get(Mt), o = e.get(Uw); 1 === e.get(jf) && r.initialNavigation(), e.get(zw, null, z.Optional)?.setUpPreloading(), e.get(Vf, null, z.Optional)?.init(), r.resetRootComponentType(n.componentTypes[0]), o.closed || (o.next(), o.complete(), o.unsubscribe()) } } const Uw = new M("", { factory: () => new It }), jf = new M("", { providedIn: "root", factory: () => 1 }), zw = new M(""); function bV(e) { return Cn(0, [{ provide: zw, useExisting: CV }, { provide: jw, useExisting: e }]) } const Gw = new M("ROUTER_FORROOT_GUARD"), IV = [Ld, { provide: Bi, useClass: yf }, Mt, qi, { provide: Do, useFactory: function Hw(e) { return e.routerState.root }, deps: [Mt] }, kf, []]; function SV() { return new oC("Router", Mt) } let qw = (() => { class e { constructor(n) { } static forRoot(n, r) { return { ngModule: e, providers: [IV, [], { provide: Mo, multi: !0, useValue: n }, { provide: Gw, useFactory: NV, deps: [[Mt, new Fs, new ks]] }, { provide: _u, useValue: r || {} }, r?.useHash ? { provide: or, useClass: aR } : { provide: or, useClass: RC }, { provide: Vf, useFactory: () => { const e = E(I1), t = E(ae), n = E(_u), r = E(yu), o = E(Bi); return n.scrollOffset && e.setOffset(n.scrollOffset), new Bw(o, r, e, t, n) } }, r?.preloadingStrategy ? bV(r.preloadingStrategy).\u0275providers : [], { provide: oC, multi: !0, useFactory: SV }, r?.initialNavigation ? PV(r) : [], r?.bindToComponentInputs ? Cn(8, [_w, { provide: hu, useExisting: _w }]).\u0275providers : [], [{ provide: Ww, useFactory: $w }, { provide: Sd, multi: !0, useExisting: Ww }]] } } static forChild(n) { return { ngModule: e, providers: [{ provide: Mo, multi: !0, useValue: n }] } } static #e = this.\u0275fac = function (r) { return new (r || e)(I(Gw, 8)) }; static #t = this.\u0275mod = yt({ type: e }); static #n = this.\u0275inj = st({}) } return e })(); function NV(e) { return "guarded" } function PV(e) { return ["disabled" === e.initialNavigation ? Cn(3, [{ provide: _d, multi: !0, useFactory: () => { const t = E(Mt); return () => { t.setUpLocationChangeListener() } } }, { provide: jf, useValue: 2 }]).\u0275providers : [], "enabledBlocking" === e.initialNavigation ? Cn(2, [{ provide: jf, useValue: 0 }, { provide: _d, multi: !0, deps: [ft], useFactory: t => { const n = t.get(iR, Promise.resolve()); return () => n.then(() => new Promise(r => { const o = t.get(Mt), i = t.get(Uw); Lw(o, () => { r(!0) }), t.get(yu).afterPreactivation = () => (r(!0), i.closed ? N(void 0) : i), o.initialNavigation() })) } }]).\u0275providers : []] } const Ww = new M(""); let Zw = (() => { class e { constructor(n, r) { this._renderer = n, this._elementRef = r, this.onChange = o => { }, this.onTouched = () => { } } setProperty(n, r) { this._renderer.setProperty(this._elementRef.nativeElement, n, r) } registerOnTouched(n) { this.onTouched = n } registerOnChange(n) { this.onChange = n } setDisabledState(n) { this.setProperty("disabled", n) } static #e = this.\u0275fac = function (r) { return new (r || e)(D(cn), D(dt)) }; static #t = this.\u0275dir = F({ type: e }) } return e })(), lr = (() => { class e extends Zw { static #e = this.\u0275fac = function () { let n; return function (o) { return (n || (n = xe(e)))(o || e) } }(); static #t = this.\u0275dir = F({ type: e, features: [ee] }) } return e })(); const Kt = new M("NgValueAccessor"), kV = { provide: Kt, useExisting: oe(() => Cu), multi: !0 }, VV = new M("CompositionEventMode"); let Cu = (() => { class e extends Zw { constructor(n, r, o) { super(n, r), this._compositionMode = o, this._composing = !1, null == this._compositionMode && (this._compositionMode = !function LV() { const e = Rn() ? Rn().getUserAgent() : ""; return /android (\d+)/.test(e.toLowerCase()) }()) } writeValue(n) { this.setProperty("value", n ?? "") } _handleInput(n) { (!this._compositionMode || this._compositionMode && !this._composing) && this.onChange(n) } _compositionStart() { this._composing = !0 } _compositionEnd(n) { this._composing = !1, this._compositionMode && this.onChange(n) } static #e = this.\u0275fac = function (r) { return new (r || e)(D(cn), D(dt), D(VV, 8)) }; static #t = this.\u0275dir = F({ type: e, selectors: [["input", "formControlName", "", 3, "type", "checkbox"], ["textarea", "formControlName", ""], ["input", "formControl", "", 3, "type", "checkbox"], ["textarea", "formControl", ""], ["input", "ngModel", "", 3, "type", "checkbox"], ["textarea", "ngModel", ""], ["", "ngDefaultControl", ""]], hostBindings: function (r, o) { 1 & r && Ge("input", function (s) { return o._handleInput(s.target.value) })("blur", function () { return o.onTouched() })("compositionstart", function () { return o._compositionStart() })("compositionend", function (s) { return o._compositionEnd(s.target.value) }) }, features: [de([kV]), ee] }) } return e })(); const Ve = new M("NgValidators"), Hn = new M("NgAsyncValidators"); function iE(e) { return null != e } function sE(e) { return yi(e) ? Ee(e) : e } function aE(e) { let t = {}; return e.forEach(n => { t = null != n ? { ...t, ...n } : t }), 0 === Object.keys(t).length ? null : t } function uE(e, t) { return t.map(n => n(e)) } function cE(e) { return e.map(t => function BV(e) { return !e.validate }(t) ? t : n => t.validate(n)) } function Bf(e) { return null != e ? function lE(e) { if (!e) return null; const t = e.filter(iE); return 0 == t.length ? null : function (n) { return aE(uE(n, t)) } }(cE(e)) : null } function Hf(e) { return null != e ? function dE(e) { if (!e) return null; const t = e.filter(iE); return 0 == t.length ? null : function (n) { return function RV(...e) { const t = Th(e), { args: n, keys: r } = jD(e), o = new me(i => { const { length: s } = n; if (!s) return void i.complete(); const a = new Array(s); let u = s, c = s; for (let l = 0; l < s; l++) { let d = !1; ot(n[l]).subscribe(Ce(i, f => { d || (d = !0, c--), a[l] = f }, () => u--, void 0, () => { (!u || !d) && (c || i.next(r ? HD(r, a) : a), i.complete()) })) } }); return t ? o.pipe(BD(t)) : o }(uE(n, t).map(sE)).pipe(Y(aE)) } }(cE(e)) : null } function fE(e, t) { return null === e ? [t] : Array.isArray(e) ? [...e, t] : [e, t] } function $f(e) { return e ? Array.isArray(e) ? e : [e] : [] } function wu(e, t) { return Array.isArray(e) ? e.includes(t) : e === t } function gE(e, t) { const n = $f(t); return $f(e).forEach(o => { wu(n, o) || n.push(o) }), n } function mE(e, t) { return $f(t).filter(n => !wu(e, n)) } class vE { constructor() { this._rawValidators = [], this._rawAsyncValidators = [], this._onDestroyCallbacks = [] } get value() { return this.control ? this.control.value : null } get valid() { return this.control ? this.control.valid : null } get invalid() { return this.control ? this.control.invalid : null } get pending() { return this.control ? this.control.pending : null } get disabled() { return this.control ? this.control.disabled : null } get enabled() { return this.control ? this.control.enabled : null } get errors() { return this.control ? this.control.errors : null } get pristine() { return this.control ? this.control.pristine : null } get dirty() { return this.control ? this.control.dirty : null } get touched() { return this.control ? this.control.touched : null } get status() { return this.control ? this.control.status : null } get untouched() { return this.control ? this.control.untouched : null } get statusChanges() { return this.control ? this.control.statusChanges : null } get valueChanges() { return this.control ? this.control.valueChanges : null } get path() { return null } _setValidators(t) { this._rawValidators = t || [], this._composedValidatorFn = Bf(this._rawValidators) } _setAsyncValidators(t) { this._rawAsyncValidators = t || [], this._composedAsyncValidatorFn = Hf(this._rawAsyncValidators) } get validator() { return this._composedValidatorFn || null } get asyncValidator() { return this._composedAsyncValidatorFn || null } _registerOnDestroy(t) { this._onDestroyCallbacks.push(t) } _invokeOnDestroyCallbacks() { this._onDestroyCallbacks.forEach(t => t()), this._onDestroyCallbacks = [] } reset(t = void 0) { this.control && this.control.reset(t) } hasError(t, n) { return !!this.control && this.control.hasError(t, n) } getError(t, n) { return this.control ? this.control.getError(t, n) : null } } class Ye extends vE { get formDirective() { return null } get path() { return null } } class $n extends vE { constructor() { super(...arguments), this._parent = null, this.name = null, this.valueAccessor = null } } class yE { constructor(t) { this._cd = t } get isTouched() { return !!this._cd?.control?.touched } get isUntouched() { return !!this._cd?.control?.untouched } get isPristine() { return !!this._cd?.control?.pristine } get isDirty() { return !!this._cd?.control?.dirty } get isValid() { return !!this._cd?.control?.valid } get isInvalid() { return !!this._cd?.control?.invalid } get isPending() { return !!this._cd?.control?.pending } get isSubmitted() { return !!this._cd?.submitted } } let _E = (() => { class e extends yE { constructor(n) { super(n) } static #e = this.\u0275fac = function (r) { return new (r || e)(D($n, 2)) }; static #t = this.\u0275dir = F({ type: e, selectors: [["", "formControlName", ""], ["", "ngModel", ""], ["", "formControl", ""]], hostVars: 14, hostBindings: function (r, o) { 2 & r && Da("ng-untouched", o.isUntouched)("ng-touched", o.isTouched)("ng-pristine", o.isPristine)("ng-dirty", o.isDirty)("ng-valid", o.isValid)("ng-invalid", o.isInvalid)("ng-pending", o.isPending) }, features: [ee] }) } return e })(), CE = (() => { class e extends yE { constructor(n) { super(n) } static #e = this.\u0275fac = function (r) { return new (r || e)(D(Ye, 10)) }; static #t = this.\u0275dir = F({ type: e, selectors: [["", "formGroupName", ""], ["", "formArrayName", ""], ["", "ngModelGroup", ""], ["", "formGroup", ""], ["form", 3, "ngNoForm", ""], ["", "ngForm", ""]], hostVars: 16, hostBindings: function (r, o) { 2 & r && Da("ng-untouched", o.isUntouched)("ng-touched", o.isTouched)("ng-pristine", o.isPristine)("ng-dirty", o.isDirty)("ng-valid", o.isValid)("ng-invalid", o.isInvalid)("ng-pending", o.isPending)("ng-submitted", o.isSubmitted) }, features: [ee] }) } return e })(); const Ki = "VALID", bu = "INVALID", Io = "PENDING", es = "DISABLED"; function Gf(e) { return (Mu(e) ? e.validators : e) || null } function qf(e, t) { return (Mu(t) ? t.asyncValidators : e) || null } function Mu(e) { return null != e && !Array.isArray(e) && "object" == typeof e } class bE { constructor(t, n) { this._pendingDirty = !1, this._hasOwnPendingAsyncValidator = !1, this._pendingTouched = !1, this._onCollectionChange = () => { }, this._parent = null, this.pristine = !0, this.touched = !1, this._onDisabledChange = [], this._assignValidators(t), this._assignAsyncValidators(n) } get validator() { return this._composedValidatorFn } set validator(t) { this._rawValidators = this._composedValidatorFn = t } get asyncValidator() { return this._composedAsyncValidatorFn } set asyncValidator(t) { this._rawAsyncValidators = this._composedAsyncValidatorFn = t } get parent() { return this._parent } get valid() { return this.status === Ki } get invalid() { return this.status === bu } get pending() { return this.status == Io } get disabled() { return this.status === es } get enabled() { return this.status !== es } get dirty() { return !this.pristine } get untouched() { return !this.touched } get updateOn() { return this._updateOn ? this._updateOn : this.parent ? this.parent.updateOn : "change" } setValidators(t) { this._assignValidators(t) } setAsyncValidators(t) { this._assignAsyncValidators(t) } addValidators(t) { this.setValidators(gE(t, this._rawValidators)) } addAsyncValidators(t) { this.setAsyncValidators(gE(t, this._rawAsyncValidators)) } removeValidators(t) { this.setValidators(mE(t, this._rawValidators)) } removeAsyncValidators(t) { this.setAsyncValidators(mE(t, this._rawAsyncValidators)) } hasValidator(t) { return wu(this._rawValidators, t) } hasAsyncValidator(t) { return wu(this._rawAsyncValidators, t) } clearValidators() { this.validator = null } clearAsyncValidators() { this.asyncValidator = null } markAsTouched(t = {}) { this.touched = !0, this._parent && !t.onlySelf && this._parent.markAsTouched(t) } markAllAsTouched() { this.markAsTouched({ onlySelf: !0 }), this._forEachChild(t => t.markAllAsTouched()) } markAsUntouched(t = {}) { this.touched = !1, this._pendingTouched = !1, this._forEachChild(n => { n.markAsUntouched({ onlySelf: !0 }) }), this._parent && !t.onlySelf && this._parent._updateTouched(t) } markAsDirty(t = {}) { this.pristine = !1, this._parent && !t.onlySelf && this._parent.markAsDirty(t) } markAsPristine(t = {}) { this.pristine = !0, this._pendingDirty = !1, this._forEachChild(n => { n.markAsPristine({ onlySelf: !0 }) }), this._parent && !t.onlySelf && this._parent._updatePristine(t) } markAsPending(t = {}) { this.status = Io, !1 !== t.emitEvent && this.statusChanges.emit(this.status), this._parent && !t.onlySelf && this._parent.markAsPending(t) } disable(t = {}) { const n = this._parentMarkedDirty(t.onlySelf); this.status = es, this.errors = null, this._forEachChild(r => { r.disable({ ...t, onlySelf: !0 }) }), this._updateValue(), !1 !== t.emitEvent && (this.valueChanges.emit(this.value), this.statusChanges.emit(this.status)), this._updateAncestors({ ...t, skipPristineCheck: n }), this._onDisabledChange.forEach(r => r(!0)) } enable(t = {}) { const n = this._parentMarkedDirty(t.onlySelf); this.status = Ki, this._forEachChild(r => { r.enable({ ...t, onlySelf: !0 }) }), this.updateValueAndValidity({ onlySelf: !0, emitEvent: t.emitEvent }), this._updateAncestors({ ...t, skipPristineCheck: n }), this._onDisabledChange.forEach(r => r(!1)) } _updateAncestors(t) { this._parent && !t.onlySelf && (this._parent.updateValueAndValidity(t), t.skipPristineCheck || this._parent._updatePristine(), this._parent._updateTouched()) } setParent(t) { this._parent = t } getRawValue() { return this.value } updateValueAndValidity(t = {}) { this._setInitialStatus(), this._updateValue(), this.enabled && (this._cancelExistingSubscription(), this.errors = this._runValidator(), this.status = this._calculateStatus(), (this.status === Ki || this.status === Io) && this._runAsyncValidator(t.emitEvent)), !1 !== t.emitEvent && (this.valueChanges.emit(this.value), this.statusChanges.emit(this.status)), this._parent && !t.onlySelf && this._parent.updateValueAndValidity(t) } _updateTreeValidity(t = { emitEvent: !0 }) { this._forEachChild(n => n._updateTreeValidity(t)), this.updateValueAndValidity({ onlySelf: !0, emitEvent: t.emitEvent }) } _setInitialStatus() { this.status = this._allControlsDisabled() ? es : Ki } _runValidator() { return this.validator ? this.validator(this) : null } _runAsyncValidator(t) { if (this.asyncValidator) { this.status = Io, this._hasOwnPendingAsyncValidator = !0; const n = sE(this.asyncValidator(this)); this._asyncValidationSubscription = n.subscribe(r => { this._hasOwnPendingAsyncValidator = !1, this.setErrors(r, { emitEvent: t }) }) } } _cancelExistingSubscription() { this._asyncValidationSubscription && (this._asyncValidationSubscription.unsubscribe(), this._hasOwnPendingAsyncValidator = !1) } setErrors(t, n = {}) { this.errors = t, this._updateControlsErrors(!1 !== n.emitEvent) } get(t) { let n = t; return null == n || (Array.isArray(n) || (n = n.split(".")), 0 === n.length) ? null : n.reduce((r, o) => r && r._find(o), this) } getError(t, n) { const r = n ? this.get(n) : this; return r && r.errors ? r.errors[t] : null } hasError(t, n) { return !!this.getError(t, n) } get root() { let t = this; for (; t._parent;)t = t._parent; return t } _updateControlsErrors(t) { this.status = this._calculateStatus(), t && this.statusChanges.emit(this.status), this._parent && this._parent._updateControlsErrors(t) } _initObservables() { this.valueChanges = new pe, this.statusChanges = new pe } _calculateStatus() { return this._allControlsDisabled() ? es : this.errors ? bu : this._hasOwnPendingAsyncValidator || this._anyControlsHaveStatus(Io) ? Io : this._anyControlsHaveStatus(bu) ? bu : Ki } _anyControlsHaveStatus(t) { return this._anyControls(n => n.status === t) } _anyControlsDirty() { return this._anyControls(t => t.dirty) } _anyControlsTouched() { return this._anyControls(t => t.touched) } _updatePristine(t = {}) { this.pristine = !this._anyControlsDirty(), this._parent && !t.onlySelf && this._parent._updatePristine(t) } _updateTouched(t = {}) { this.touched = this._anyControlsTouched(), this._parent && !t.onlySelf && this._parent._updateTouched(t) } _registerOnCollectionChange(t) { this._onCollectionChange = t } _setUpdateStrategy(t) { Mu(t) && null != t.updateOn && (this._updateOn = t.updateOn) } _parentMarkedDirty(t) { return !t && !(!this._parent || !this._parent.dirty) && !this._parent._anyControlsDirty() } _find(t) { return null } _assignValidators(t) { this._rawValidators = Array.isArray(t) ? t.slice() : t, this._composedValidatorFn = function zV(e) { return Array.isArray(e) ? Bf(e) : e || null }(this._rawValidators) } _assignAsyncValidators(t) { this._rawAsyncValidators = Array.isArray(t) ? t.slice() : t, this._composedAsyncValidatorFn = function GV(e) { return Array.isArray(e) ? Hf(e) : e || null }(this._rawAsyncValidators) } } class Wf extends bE { constructor(t, n, r) { super(Gf(n), qf(r, n)), this.controls = t, this._initObservables(), this._setUpdateStrategy(n), this._setUpControls(), this.updateValueAndValidity({ onlySelf: !0, emitEvent: !!this.asyncValidator }) } registerControl(t, n) { return this.controls[t] ? this.controls[t] : (this.controls[t] = n, n.setParent(this), n._registerOnCollectionChange(this._onCollectionChange), n) } addControl(t, n, r = {}) { this.registerControl(t, n), this.updateValueAndValidity({ emitEvent: r.emitEvent }), this._onCollectionChange() } removeControl(t, n = {}) { this.controls[t] && this.controls[t]._registerOnCollectionChange(() => { }), delete this.controls[t], this.updateValueAndValidity({ emitEvent: n.emitEvent }), this._onCollectionChange() } setControl(t, n, r = {}) { this.controls[t] && this.controls[t]._registerOnCollectionChange(() => { }), delete this.controls[t], n && this.registerControl(t, n), this.updateValueAndValidity({ emitEvent: r.emitEvent }), this._onCollectionChange() } contains(t) { return this.controls.hasOwnProperty(t) && this.controls[t].enabled } setValue(t, n = {}) { (function EE(e, t, n) { e._forEachChild((r, o) => { if (void 0 === n[o]) throw new C(1002, "") }) })(this, 0, t), Object.keys(t).forEach(r => { (function wE(e, t, n) { const r = e.controls; if (!(t ? Object.keys(r) : r).length) throw new C(1e3, ""); if (!r[n]) throw new C(1001, "") })(this, !0, r), this.controls[r].setValue(t[r], { onlySelf: !0, emitEvent: n.emitEvent }) }), this.updateValueAndValidity(n) } patchValue(t, n = {}) { null != t && (Object.keys(t).forEach(r => { const o = this.controls[r]; o && o.patchValue(t[r], { onlySelf: !0, emitEvent: n.emitEvent }) }), this.updateValueAndValidity(n)) } reset(t = {}, n = {}) { this._forEachChild((r, o) => { r.reset(t ? t[o] : null, { onlySelf: !0, emitEvent: n.emitEvent }) }), this._updatePristine(n), this._updateTouched(n), this.updateValueAndValidity(n) } getRawValue() { return this._reduceChildren({}, (t, n, r) => (t[r] = n.getRawValue(), t)) } _syncPendingControls() { let t = this._reduceChildren(!1, (n, r) => !!r._syncPendingControls() || n); return t && this.updateValueAndValidity({ onlySelf: !0 }), t } _forEachChild(t) { Object.keys(this.controls).forEach(n => { const r = this.controls[n]; r && t(r, n) }) } _setUpControls() { this._forEachChild(t => { t.setParent(this), t._registerOnCollectionChange(this._onCollectionChange) }) } _updateValue() { this.value = this._reduceValue() } _anyControls(t) { for (const [n, r] of Object.entries(this.controls)) if (this.contains(n) && t(r)) return !0; return !1 } _reduceValue() { return this._reduceChildren({}, (n, r, o) => ((r.enabled || this.disabled) && (n[o] = r.value), n)) } _reduceChildren(t, n) { let r = t; return this._forEachChild((o, i) => { r = n(r, o, i) }), r } _allControlsDisabled() { for (const t of Object.keys(this.controls)) if (this.controls[t].enabled) return !1; return Object.keys(this.controls).length > 0 || this.disabled } _find(t) { return this.controls.hasOwnProperty(t) ? this.controls[t] : null } } const dr = new M("CallSetDisabledState", { providedIn: "root", factory: () => ts }), ts = "always"; function ns(e, t, n = ts) { Zf(e, t), t.valueAccessor.writeValue(e.value), (e.disabled || "always" === n) && t.valueAccessor.setDisabledState?.(e.disabled), function ZV(e, t) { t.valueAccessor.registerOnChange(n => { e._pendingValue = n, e._pendingChange = !0, e._pendingDirty = !0, "change" === e.updateOn && ME(e, t) }) }(e, t), function QV(e, t) { const n = (r, o) => { t.valueAccessor.writeValue(r), o && t.viewToModelUpdate(r) }; e.registerOnChange(n), t._registerOnDestroy(() => { e._unregisterOnChange(n) }) }(e, t), function YV(e, t) { t.valueAccessor.registerOnTouched(() => { e._pendingTouched = !0, "blur" === e.updateOn && e._pendingChange && ME(e, t), "submit" !== e.updateOn && e.markAsTouched() }) }(e, t), function WV(e, t) { if (t.valueAccessor.setDisabledState) { const n = r => { t.valueAccessor.setDisabledState(r) }; e.registerOnDisabledChange(n), t._registerOnDestroy(() => { e._unregisterOnDisabledChange(n) }) } }(e, t) } function Au(e, t) { e.forEach(n => { n.registerOnValidatorChange && n.registerOnValidatorChange(t) }) } function Zf(e, t) { const n = function hE(e) { return e._rawValidators }(e); null !== t.validator ? e.setValidators(fE(n, t.validator)) : "function" == typeof n && e.setValidators([n]); const r = function pE(e) { return e._rawAsyncValidators }(e); null !== t.asyncValidator ? e.setAsyncValidators(fE(r, t.asyncValidator)) : "function" == typeof r && e.setAsyncValidators([r]); const o = () => e.updateValueAndValidity(); Au(t._rawValidators, o), Au(t._rawAsyncValidators, o) } function ME(e, t) { e._pendingDirty && e.markAsDirty(), e.setValue(e._pendingValue, { emitModelToViewChange: !1 }), t.viewToModelUpdate(e._pendingValue), e._pendingChange = !1 } const tj = { provide: Ye, useExisting: oe(() => Ou) }, rs = (() => Promise.resolve())(); let Ou = (() => { class e extends Ye { constructor(n, r, o) { super(), this.callSetDisabledState = o, this.submitted = !1, this._directives = new Set, this.ngSubmit = new pe, this.form = new Wf({}, Bf(n), Hf(r)) } ngAfterViewInit() { this._setUpdateStrategy() } get formDirective() { return this } get control() { return this.form } get path() { return [] } get controls() { return this.form.controls } addControl(n) { rs.then(() => { const r = this._findContainer(n.path); n.control = r.registerControl(n.name, n.control), ns(n.control, n, this.callSetDisabledState), n.control.updateValueAndValidity({ emitEvent: !1 }), this._directives.add(n) }) } getControl(n) { return this.form.get(n.path) } removeControl(n) { rs.then(() => { const r = this._findContainer(n.path); r && r.removeControl(n.name), this._directives.delete(n) }) } addFormGroup(n) { rs.then(() => { const r = this._findContainer(n.path), o = new Wf({}); (function IE(e, t) { Zf(e, t) })(o, n), r.registerControl(n.name, o), o.updateValueAndValidity({ emitEvent: !1 }) }) } removeFormGroup(n) { rs.then(() => { const r = this._findContainer(n.path); r && r.removeControl(n.name) }) } getFormGroup(n) { return this.form.get(n.path) } updateModel(n, r) { rs.then(() => { this.form.get(n.path).setValue(r) }) } setValue(n) { this.control.setValue(n) } onSubmit(n) { return this.submitted = !0, function SE(e, t) { e._syncPendingControls(), t.forEach(n => { const r = n.control; "submit" === r.updateOn && r._pendingChange && (n.viewToModelUpdate(r._pendingValue), r._pendingChange = !1) }) }(this.form, this._directives), this.ngSubmit.emit(n), "dialog" === n?.target?.method } onReset() { this.resetForm() } resetForm(n = void 0) { this.form.reset(n), this.submitted = !1 } _setUpdateStrategy() { this.options && null != this.options.updateOn && (this.form._updateOn = this.options.updateOn) } _findContainer(n) { return n.pop(), n.length ? this.form.get(n) : this.form } static #e = this.\u0275fac = function (r) { return new (r || e)(D(Ve, 10), D(Hn, 10), D(dr, 8)) }; static #t = this.\u0275dir = F({ type: e, selectors: [["form", 3, "ngNoForm", "", 3, "formGroup", ""], ["ng-form"], ["", "ngForm", ""]], hostBindings: function (r, o) { 1 & r && Ge("submit", function (s) { return o.onSubmit(s) })("reset", function () { return o.onReset() }) }, inputs: { options: ["ngFormOptions", "options"] }, outputs: { ngSubmit: "ngSubmit" }, exportAs: ["ngForm"], features: [de([tj]), ee] }) } return e })(); function AE(e, t) { const n = e.indexOf(t); n > -1 && e.splice(n, 1) } function TE(e) { return "object" == typeof e && null !== e && 2 === Object.keys(e).length && "value" in e && "disabled" in e } const OE = class extends bE { constructor(t = null, n, r) { super(Gf(n), qf(r, n)), this.defaultValue = null, this._onChange = [], this._pendingChange = !1, this._applyFormState(t), this._setUpdateStrategy(n), this._initObservables(), this.updateValueAndValidity({ onlySelf: !0, emitEvent: !!this.asyncValidator }), Mu(n) && (n.nonNullable || n.initialValueIsDefault) && (this.defaultValue = TE(t) ? t.value : t) } setValue(t, n = {}) { this.value = this._pendingValue = t, this._onChange.length && !1 !== n.emitModelToViewChange && this._onChange.forEach(r => r(this.value, !1 !== n.emitViewToModelChange)), this.updateValueAndValidity(n) } patchValue(t, n = {}) { this.setValue(t, n) } reset(t = this.defaultValue, n = {}) { this._applyFormState(t), this.markAsPristine(n), this.markAsUntouched(n), this.setValue(this.value, n), this._pendingChange = !1 } _updateValue() { } _anyControls(t) { return !1 } _allControlsDisabled() { return this.disabled } registerOnChange(t) { this._onChange.push(t) } _unregisterOnChange(t) { AE(this._onChange, t) } registerOnDisabledChange(t) { this._onDisabledChange.push(t) } _unregisterOnDisabledChange(t) { AE(this._onDisabledChange, t) } _forEachChild(t) { } _syncPendingControls() { return !("submit" !== this.updateOn || (this._pendingDirty && this.markAsDirty(), this._pendingTouched && this.markAsTouched(), !this._pendingChange) || (this.setValue(this._pendingValue, { onlySelf: !0, emitModelToViewChange: !1 }), 0)) } _applyFormState(t) { TE(t) ? (this.value = this._pendingValue = t.value, t.disabled ? this.disable({ onlySelf: !0, emitEvent: !1 }) : this.enable({ onlySelf: !0, emitEvent: !1 })) : this.value = this._pendingValue = t } }, oj = { provide: $n, useExisting: oe(() => Jf) }, xE = (() => Promise.resolve())(); let Jf = (() => { class e extends $n { constructor(n, r, o, i, s, a) { super(), this._changeDetectorRef = s, this.callSetDisabledState = a, this.control = new OE, this._registered = !1, this.name = "", this.update = new pe, this._parent = n, this._setValidators(r), this._setAsyncValidators(o), this.valueAccessor = function Xf(e, t) { if (!t) return null; let n, r, o; return Array.isArray(t), t.forEach(i => { i.constructor === Cu ? n = i : function KV(e) { return Object.getPrototypeOf(e.constructor) === lr }(i) ? r = i : o = i }), o || r || n || null }(0, i) } ngOnChanges(n) { if (this._checkForErrors(), !this._registered || "name" in n) { if (this._registered && (this._checkName(), this.formDirective)) { const r = n.name.previousValue; this.formDirective.removeControl({ name: r, path: this._getPath(r) }) } this._setUpControl() } "isDisabled" in n && this._updateDisabled(n), function Qf(e, t) { if (!e.hasOwnProperty("model")) return !1; const n = e.model; return !!n.isFirstChange() || !Object.is(t, n.currentValue) }(n, this.viewModel) && (this._updateValue(this.model), this.viewModel = this.model) } ngOnDestroy() { this.formDirective && this.formDirective.removeControl(this) } get path() { return this._getPath(this.name) } get formDirective() { return this._parent ? this._parent.formDirective : null } viewToModelUpdate(n) { this.viewModel = n, this.update.emit(n) } _setUpControl() { this._setUpdateStrategy(), this._isStandalone() ? this._setUpStandalone() : this.formDirective.addControl(this), this._registered = !0 } _setUpdateStrategy() { this.options && null != this.options.updateOn && (this.control._updateOn = this.options.updateOn) } _isStandalone() { return !this._parent || !(!this.options || !this.options.standalone) } _setUpStandalone() { ns(this.control, this, this.callSetDisabledState), this.control.updateValueAndValidity({ emitEvent: !1 }) } _checkForErrors() { this._isStandalone() || this._checkParentType(), this._checkName() } _checkParentType() { } _checkName() { this.options && this.options.name && (this.name = this.options.name), this._isStandalone() } _updateValue(n) { xE.then(() => { this.control.setValue(n, { emitViewToModelChange: !1 }), this._changeDetectorRef?.markForCheck() }) } _updateDisabled(n) { const r = n.isDisabled.currentValue, o = 0 !== r && function lo(e) { return "boolean" == typeof e ? e : null != e && "false" !== e }(r); xE.then(() => { o && !this.control.disabled ? this.control.disable() : !o && this.control.disabled && this.control.enable(), this._changeDetectorRef?.markForCheck() }) } _getPath(n) { return this._parent ? function Iu(e, t) { return [...t.path, e] }(n, this._parent) : [n] } static #e = this.\u0275fac = function (r) { return new (r || e)(D(Ye, 9), D(Ve, 10), D(Hn, 10), D(Kt, 10), D(Ra, 8), D(dr, 8)) }; static #t = this.\u0275dir = F({ type: e, selectors: [["", "ngModel", "", 3, "formControlName", "", 3, "formControl", ""]], inputs: { name: "name", isDisabled: ["disabled", "isDisabled"], model: ["ngModel", "model"], options: ["ngModelOptions", "options"] }, outputs: { update: "ngModelChange" }, exportAs: ["ngModel"], features: [de([oj]), ee, Ct] }) } return e })(), RE = (() => { class e { static #e = this.\u0275fac = function (r) { return new (r || e) }; static #t = this.\u0275dir = F({ type: e, selectors: [["form", 3, "ngNoForm", "", 3, "ngNativeValidate", ""]], hostAttrs: ["novalidate", ""] }) } return e })(), kE = (() => { class e { static #e = this.\u0275fac = function (r) { return new (r || e) }; static #t = this.\u0275mod = yt({ type: e }); static #n = this.\u0275inj = st({}) } return e })(); const Kf = new M("NgModelWithFormControlWarning"); let KE = (() => { class e { static #e = this.\u0275fac = function (r) { return new (r || e) }; static #t = this.\u0275mod = yt({ type: e }); static #n = this.\u0275inj = st({ imports: [kE] }) } return e })(), Tj = (() => { class e { static withConfig(n) { return { ngModule: e, providers: [{ provide: dr, useValue: n.callSetDisabledState ?? ts }] } } static #e = this.\u0275fac = function (r) { return new (r || e) }; static #t = this.\u0275mod = yt({ type: e }); static #n = this.\u0275inj = st({ imports: [KE] }) } return e })(), Oj = (() => { class e { static withConfig(n) { return { ngModule: e, providers: [{ provide: Kf, useValue: n.warnOnNgModelWithFormControl ?? "always" }, { provide: dr, useValue: n.callSetDisabledState ?? ts }] } } static #e = this.\u0275fac = function (r) { return new (r || e) }; static #t = this.\u0275mod = yt({ type: e }); static #n = this.\u0275inj = st({ imports: [KE] }) } return e })(); function Nj(e, t) { if (1 & e) { const n = function xv() { return y() }(); A(0, "div", 57)(1, "a", 58), H(2), O(), A(3, "div", 59)(4, "a", 60), H(5), O(), A(6, "button", 61), Ge("click", function () { const i = function Pp(e) { return x.lFrame.contextLView = e, e[ve] }(n).index; return function xp(e) { return x.lFrame.contextLView = null, e }(jv().copy(i)) }), H(7), O()()() } if (2 & e) { const n = t.$implicit; Nn(2), oo(n.link), Nn(3), oo(n.link), Nn(1), vi("ngClass", "Copied" == n.text ? "btn_copy_copied" : "btn_copy"), Nn(1), oo(n.text) } } const Pj = [{ path: "", redirectTo: "shorten-Links", pathMatch: "full" }, { path: "shorten-Links", component: (() => { class e { constructor() { this.copyText = "", this.link = "", this.validUrl = !1, this.errorMsg = "", this.linkList = [] } ngOnInit() { localStorage.getItem("linkList"), this.linkList = JSON.parse(localStorage.getItem("linkList") || "[]") } copy(n) { null != this.linkList && this.linkList.length > 0 && (this.linkList.forEach((r, o) => { o == n ? (r.text = "Copied", $()) : r.text = "Copy" }), localStorage.setItem("linkList", JSON.stringify(this.linkList))) } addLink() { console.log(this.link), this.link.length > 0 ? (this.validUrl = !1, this.errorMsg = "", /^((https?|ftp|smtp):\/\/)?(www.)?[a-z0-9]+(\.[a-z]{2,}){1,3}(#?\/?[a-zA-Z0-9#]+)*\/?(\?[a-zA-Z0-9-_]+=[a-zA-Z0-9-%]+&?)?$/.test(this.link) ? (this.validUrl = !0, this.errorMsg = "", this.linkList.push({ text: "Copy", link: this.link }), localStorage.setItem("linkList", JSON.stringify(this.linkList))) : (this.validUrl = !1, this.errorMsg = "Please add a valid link")) : (this.validUrl = !0, this.errorMsg = "Please add a link") } static #e = this.\u0275fac = function (r) { return new (r || e) }; static #t = this.\u0275cmp = vs({ type: e, selectors: [["app-short-links"]], decls: 152, vars: 3, consts: [[1, "bg-white"], [1, "mx-auto", "mt-3", "container"], [1, "navbar", "navbar-expand-lg", "bg-white"], [1, "container-fluid", "nav-container"], ["type", "button", "data-bs-toggle", "collapse", "data-bs-target", "#navbarTogglerDemo01", "aria-controls", "navbarTogglerDemo01", "aria-expanded", "false", "aria-label", "Toggle navigation", 1, "navbar-toggler"], [1, "navbar-toggler-icon"], ["href", "#", 1, "navbar-brand"], ["id", "navbarTogglerDemo01", 1, "collapse", "navbar-collapse"], ["id", "effect", 1, "navbar-nav", "me-auto", "mb-2", "mb-lg-0", "dropdown_menu-9"], [1, "nav-item"], ["aria-current", "page", "href", "#", 1, "nav-link", "active"], ["href", "#", 1, "nav-link"], ["role", "search", 1, "d-flex"], ["type", "submit", "id", "login", 1, "btn", "login"], ["type", "submit", 1, "btn", "signUp"], [1, "row", "align-items-baseline", "py-5"], [1, "left_Content", "col-lg-6", "col-xl-6", "col-md-12"], [1, "btn"], [1, "right_Content", "col-lg-6", "col-xl-6", "col-md-12", "pb-3"], ["src", "assets/short_links/images/illustration-working.svg", "alt", "", 1, "img-fluid"], [1, "container-fluid", "section", "mt-5", "pb-5"], [1, "container"], [1, "link_bg_img"], [1, "input-group", "p-5", "gap-5"], ["type", "email", "id", "exampleFormControlInput1", "placeholder", "Shorten a link here...", 1, "form-control", 3, "ngModel", "ngModelChange"], ["type", "button", "id", "button-addon2", 1, "btn", 3, "click"], [1, "text-danger", "p-3"], ["class", "add_Short_link bg-white d-flex justify-content-between p-3 mb-3", 4, "ngFor", "ngForOf"], [1, "link_bg_description", "py-5"], [1, "d-flex", "justify-content-between", "position-relative", "statics"], [1, "m-2", "static_card"], [1, "card-body"], [1, "position-absolute", "icon"], ["src", "assets/short_links/images/icon-brand-recognition.svg", "alt", ""], [1, "pt-3", "text-start", "text-md-center"], [1, "py-2"], [1, "diff-card"], [1, "position-absolute", "icon", "rounded-circle"], ["src", "assets/short_links/images/icon-detailed-records.svg", "alt", ""], [1, "diff-card1"], ["src", "assets/short_links/images/icon-fully-customizable.svg", "alt", ""], [1, "container-fluid"], [1, "bg_shorten_img"], [1, "text-center", "d-flex", "flex-column", "align-items-center", "justify-content-center", "h-100"], [1, "row"], [1, "col-lg-2", "d-flex", "justify-content-center", "col-md-12"], [1, "col-lg-10", "d-flex", "col-md-12", "footer_links"], [1, "col-lg-3", "col-md-12", "pb-3"], [1, "head"], ["href", "#"], [1, "p-0", "m-0", "pt-3"], [1, "col-lg-1", "col-md-12", "pb-3", "d-flex", "justify-content-center"], [1, "d-flex", "gap-3", "align-items-center"], ["src", "assets/short_links/images/icon-facebook.svg"], ["src", "assets/short_links/images/icon-twitter.svg"], ["src", "assets/short_links/images/icon-pinterest.svg"], ["src", "assets/short_links/images/icon-instagram.svg"], [1, "add_Short_link", "bg-white", "d-flex", "justify-content-between", "p-3", "mb-3"], ["href", ""], [1, "d-flex", "justify-content-between", "gap-3", "align-items-center"], ["href", "", 1, "short_links"], ["role", "button", 1, "btn", "btn_copy", 3, "ngClass", "click"]], template: function (r, o) { 1 & r && (A(0, "div", 0)(1, "main", 1)(2, "nav", 2)(3, "div", 3)(4, "button", 4), ze(5, "span", 5), O(), A(6, "a", 6), H(7, "Shortly"), O(), A(8, "div", 7)(9, "ul", 8)(10, "li", 9)(11, "a", 10), H(12, "Features"), O()(), A(13, "li", 9)(14, "a", 11), H(15, "Pricing"), O()(), A(16, "li", 9)(17, "a", 11), H(18, "Resources"), O()()(), A(19, "form", 12)(20, "button", 13), H(21, "Login"), O(), A(22, "button", 14), H(23, "Sign Up"), O()()()()(), A(24, "header", 15)(25, "div", 16)(26, "h1"), H(27, "More than just shorter links"), O(), A(28, "p"), H(29, "Build your brand's recognition and get detailed insights on how your links are performing."), O(), A(30, "button", 17), H(31, "Get Started"), O()(), A(32, "div", 18), ze(33, "img", 19), O()()(), A(34, "div", 20)(35, "section", 21)(36, "div", 22)(37, "div", 23)(38, "input", 24), Ge("ngModelChange", function (s) { return o.link = s }), O(), A(39, "button", 25), Ge("click", function () { return o.addLink() }), H(40, "Shorten it!"), O()(), A(41, "span", 26), H(42), O()(), function Sv(e, t, n, r, o, i, s, a) { const u = y(), c = W(), l = e + G, d = c.firstCreatePass ? function IT(e, t, n, r, o, i, s, a, u) { const c = t.consts, l = Wr(t, e, 4, s || null, Sn(c, a)); Ol(t, n, l, Sn(c, u)), Ms(t, l); const d = l.tView = Tl(2, l, r, o, i, t.directiveRegistry, t.pipeRegistry, null, t.schemas, c, null); return null !== t.queries && (t.queries.template(t, l), d.queries = t.queries.embeddedTView(l)), l }(l, c, u, t, n, r, o, i, s) : c.data[l]; Ut(d, !1); const f = Av(c, u, d, e); bs() && Ws(c, u, f, d), Fe(f, u), da(u, u[l] = Qm(f, u, f, d)), Cs(d) && Sl(c, u, d), null != s && Al(u, d, a) }(43, Nj, 8, 4, "div", 27), A(44, "div", 28)(45, "div")(46, "h3"), H(47, "Advanced Statistics"), O(), A(48, "p"), H(49, "Track how your links are performing across the web with our advanced statistics dashboard."), O()()(), A(50, "div", 29)(51, "div", 30)(52, "div", 31)(53, "div", 32), ze(54, "img", 33), O(), A(55, "div", 34)(56, "h4", 35), H(57, "Brand Recognition"), O(), A(58, "p"), H(59, "Boost your brand recognition with each click. Generic links don\u2019t mean a thing. Branded links help instil confidence in your content."), O()()()(), A(60, "div", 30), ze(61, "div", 36), A(62, "div", 31)(63, "div", 37), ze(64, "img", 38), O(), A(65, "div", 34)(66, "h4", 35), H(67, "Detailed Records"), O(), A(68, "p"), H(69, "Gain insights into who is clicking your links. Knowing when and where people engage with your content helps inform better decisions."), O()()()(), A(70, "div", 30), ze(71, "div", 39), A(72, "div", 31)(73, "div", 32), ze(74, "img", 40), O(), A(75, "div", 34)(76, "h4", 35), H(77, "Fully Customizable"), O(), A(78, "p"), H(79, "Improve brand awareness and content discoverability through customizable links, supercharging audience engagement."), O()()()()()()(), A(80, "section", 41)(81, "div", 42)(82, "div", 43)(83, "h1"), H(84, "Boost your links today"), O(), A(85, "button", 17), H(86, "Get Started"), O()()()(), A(87, "footer")(88, "div", 41)(89, "div", 44)(90, "div", 45)(91, "a", 6), H(92, "Shortly"), O()(), A(93, "div", 46)(94, "div", 47)(95, "ul")(96, "li", 48)(97, "a", 49), H(98, "Features"), O()(), A(99, "ul", 50)(100, "li")(101, "a", 49), H(102, "Link Shortening"), O()(), A(103, "li")(104, "a", 49), H(105, "Branded Links"), O()(), A(106, "li")(107, "a", 49), H(108, "Analytics"), O()()()()(), A(109, "div", 47)(110, "ul")(111, "li", 48)(112, "a", 49), H(113, "Resources"), O()(), A(114, "ul", 50)(115, "li")(116, "a", 49), H(117, "Blog"), O()(), A(118, "li")(119, "a", 49), H(120, "Developers"), O()(), A(121, "li")(122, "a", 49), H(123, "Support"), O()()()()(), A(124, "div", 47)(125, "ul")(126, "li", 48)(127, "a", 49), H(128, "Company"), O()(), A(129, "ul", 50)(130, "li")(131, "a", 49), H(132, "About"), O()(), A(133, "li")(134, "a", 49), H(135, "Our Team"), O()(), A(136, "li")(137, "a", 49), H(138, "Careers"), O()(), A(139, "li")(140, "a", 49), H(141, "Contact"), O()()()()(), A(142, "div", 51)(143, "ul", 52)(144, "li"), ze(145, "img", 53), O(), A(146, "li"), ze(147, "img", 54), O(), A(148, "li"), ze(149, "img", 55), O(), A(150, "li"), ze(151, "img", 56), O()()()()()()()()), 2 & r && (Nn(38), vi("ngModel", o.link), Nn(4), oo(o.errorMsg), Nn(1), vi("ngForOf", o.linkList)) }, dependencies: [qC, ZC, RE, Cu, _E, CE, Jf, Ou], styles: ['.bg-white[_ngcontent-%COMP%]{font-family:Poppins,sans-serif}.bg-white[_ngcontent-%COMP%]   .section[_ngcontent-%COMP%]{--tw-bg-opacity: 1;background-color:rgb(239 241 247/var(--tw-bg-opacity));width:100%}.bg-white[_ngcontent-%COMP%]   .section[_ngcontent-%COMP%]   section[_ngcontent-%COMP%]   .link_bg_img[_ngcontent-%COMP%]{background:url(bg-shorten-desktop.56f991468ef78f61.svg) no-repeat;background-size:cover;background-color:var(--very-dark-blue-color);border-radius:10px;position:relative;top:-72px;height:8.5rem}.bg-white[_ngcontent-%COMP%]   .section[_ngcontent-%COMP%]   section[_ngcontent-%COMP%]   .link_bg_img[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{border-radius:.375rem!important;height:3rem}.bg-white[_ngcontent-%COMP%]   .section[_ngcontent-%COMP%]   section[_ngcontent-%COMP%]   .link_bg_img[_ngcontent-%COMP%]   [_ngcontent-%COMP%]::placeholder{font-weight:500;font-size:16px;line-height:21px;color:var(--gray-color)}.bg-white[_ngcontent-%COMP%]   .section[_ngcontent-%COMP%]   section[_ngcontent-%COMP%]   .link_bg_img[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]:focus{box-shadow:none;border:none}.bg-white[_ngcontent-%COMP%]   .section[_ngcontent-%COMP%]   section[_ngcontent-%COMP%]   .link_bg_img[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]:focus-visible{outline:0}.bg-white[_ngcontent-%COMP%]   .section[_ngcontent-%COMP%]   section[_ngcontent-%COMP%]   .link_bg_img[_ngcontent-%COMP%]   .btn[_ngcontent-%COMP%]{background:var(--Cyan);border-radius:10px;font-weight:500;font-size:14px;height:3rem;line-height:21px;color:var(--neutral-color);padding:.5rem 1rem;border:none}.bg-white[_ngcontent-%COMP%]   .section[_ngcontent-%COMP%]   section[_ngcontent-%COMP%]   .link_bg_img[_ngcontent-%COMP%]   .btn[_ngcontent-%COMP%]:hover{opacity:.4}.bg-white[_ngcontent-%COMP%]   .section[_ngcontent-%COMP%]   section[_ngcontent-%COMP%]   .add_Short_link[_ngcontent-%COMP%]   .short_links[_ngcontent-%COMP%]{font-weight:500;font-size:16px;line-height:24px;color:var(--Cyan)}.bg-white[_ngcontent-%COMP%]   .section[_ngcontent-%COMP%]   section[_ngcontent-%COMP%]   .add_Short_link[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{text-decoration:none;font-weight:700;line-height:36px;color:var(--very-dark-blue-color)}.bg-white[_ngcontent-%COMP%]   .section[_ngcontent-%COMP%]   section[_ngcontent-%COMP%]   .add_Short_link[_ngcontent-%COMP%]   .btn_copy[_ngcontent-%COMP%]{background:var(--Cyan);border-radius:.375rem;font-weight:500;font-size:14px;line-height:21px;color:var(--neutral-color);padding:.5rem 1rem;border:none}.bg-white[_ngcontent-%COMP%]   .section[_ngcontent-%COMP%]   section[_ngcontent-%COMP%]   .add_Short_link[_ngcontent-%COMP%]   .btn_copy_copied[_ngcontent-%COMP%]{background:var(--very-dark-blue-color)}.bg-white[_ngcontent-%COMP%]   .section[_ngcontent-%COMP%]   section[_ngcontent-%COMP%]   .link_bg_description[_ngcontent-%COMP%]{text-align:center;font-size:2.25rem;line-height:2.5rem;font-weight:700;color:var(--very-dark-blue-color)}.bg-white[_ngcontent-%COMP%]   .section[_ngcontent-%COMP%]   section[_ngcontent-%COMP%]   .link_bg_description[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{font-weight:500;font-size:16px;line-height:24px;color:var(--gray-color)}.bg-white[_ngcontent-%COMP%]   .section[_ngcontent-%COMP%]   section[_ngcontent-%COMP%]   .statics[_ngcontent-%COMP%]{z-index:0}.bg-white[_ngcontent-%COMP%]   .section[_ngcontent-%COMP%]   section[_ngcontent-%COMP%]   .statics[_ngcontent-%COMP%]   .static_card[_ngcontent-%COMP%]{border:none}.bg-white[_ngcontent-%COMP%]   .section[_ngcontent-%COMP%]   section[_ngcontent-%COMP%]   .statics[_ngcontent-%COMP%]   .static_card[_ngcontent-%COMP%]   .diff-card[_ngcontent-%COMP%]{width:100%;height:2.5rem;display:inline-block}.bg-white[_ngcontent-%COMP%]   .section[_ngcontent-%COMP%]   section[_ngcontent-%COMP%]   .statics[_ngcontent-%COMP%]   .static_card[_ngcontent-%COMP%]   .diff-card1[_ngcontent-%COMP%]{width:100%;height:5.5rem;display:inline-block}.bg-white[_ngcontent-%COMP%]   .section[_ngcontent-%COMP%]   section[_ngcontent-%COMP%]   .statics[_ngcontent-%COMP%]   .static_card[_ngcontent-%COMP%]   .card-body[_ngcontent-%COMP%]{position:relative;padding:10px;background-color:#fff;box-shadow:#00000059 0 5px 15px;border-radius:10px}.bg-white[_ngcontent-%COMP%]   .section[_ngcontent-%COMP%]   section[_ngcontent-%COMP%]   .statics[_ngcontent-%COMP%]   .static_card[_ngcontent-%COMP%]   .card-body[_ngcontent-%COMP%]   .icon[_ngcontent-%COMP%]{padding:7px;border-radius:50px;background:var(--very-dark-blue-color);top:-35px;left:20px}.bg-white[_ngcontent-%COMP%]   .section[_ngcontent-%COMP%]   section[_ngcontent-%COMP%]   .statics[_ngcontent-%COMP%]   .static_card[_ngcontent-%COMP%]   .card-body[_ngcontent-%COMP%]   .icon[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:40px}.bg-white[_ngcontent-%COMP%]   .section[_ngcontent-%COMP%]   section[_ngcontent-%COMP%]   .statics[_ngcontent-%COMP%]   .static_card[_ngcontent-%COMP%]   .card-body[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%]{font-size:1.25rem;line-height:2.5rem;font-weight:700}.bg-white[_ngcontent-%COMP%]   .section[_ngcontent-%COMP%]   section[_ngcontent-%COMP%]   .statics[_ngcontent-%COMP%]   .static_card[_ngcontent-%COMP%]   .card-body[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{font-weight:500;font-size:16px;line-height:24px;color:var(--gray-color)}.bg-white[_ngcontent-%COMP%]   .section[_ngcontent-%COMP%]   section[_ngcontent-%COMP%]   .statics[_ngcontent-%COMP%]:after{content:"";position:absolute;border:1px solid var(--Cyan);width:33rem;height:5px;background:var(--Cyan);bottom:50%;left:32%;z-index:-1}.bg-white[_ngcontent-%COMP%]   section[_ngcontent-%COMP%]{padding:0}.bg-white[_ngcontent-%COMP%]   section[_ngcontent-%COMP%]   .bg_shorten_img[_ngcontent-%COMP%]{background:url(bg-boost-desktop.1981fbd475278b3a.svg) no-repeat;background-size:cover;background-color:var(--very-dark-blue-color);height:250px}.bg-white[_ngcontent-%COMP%]   section[_ngcontent-%COMP%]   .bg_shorten_img[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{font-weight:700;font-size:36px;line-height:54px;color:var(--neutral-color);padding-top:30px;text-align:center}.bg-white[_ngcontent-%COMP%]   section[_ngcontent-%COMP%]   .bg_shorten_img[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{background:var(--Cyan);border-radius:50px;font-weight:500;font-size:14px;line-height:21px;color:var(--neutral-color);padding:.5rem 1rem;border:none;text-align:center}.bg-white[_ngcontent-%COMP%]   .navbar[_ngcontent-%COMP%]   .navbar-brand[_ngcontent-%COMP%]{font-weight:700;font-size:24px;line-height:36px;color:var(--very-dark-blue-color)}.bg-white[_ngcontent-%COMP%]   .navbar[_ngcontent-%COMP%]   .navbar-nav[_ngcontent-%COMP%]   .nav-link[_ngcontent-%COMP%]{font-weight:500;font-size:14px;line-height:21px;color:var(--gray-color)}.bg-white[_ngcontent-%COMP%]   .navbar[_ngcontent-%COMP%]   .navbar-nav[_ngcontent-%COMP%]   .nav-link[_ngcontent-%COMP%]:hover{color:var(--very-dark-blue-color)}.bg-white[_ngcontent-%COMP%]   .navbar[_ngcontent-%COMP%]   .signUp[_ngcontent-%COMP%]{background:var(--Cyan);border-radius:50px;font-weight:500;font-size:14px;line-height:21px;color:var(--neutral-color);padding:.5rem 1rem;border:none}.bg-white[_ngcontent-%COMP%]   .navbar[_ngcontent-%COMP%]   .login[_ngcontent-%COMP%]{border-radius:50px;font-weight:500;font-size:14px;line-height:21px;color:var(--gray-color);border:none}.bg-white[_ngcontent-%COMP%]   .navbar[_ngcontent-%COMP%]   .signUp[_ngcontent-%COMP%]:hover{opacity:.4}.bg-white[_ngcontent-%COMP%]   header[_ngcontent-%COMP%]   .left_Content[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{font-weight:700;font-size:3rem;color:var(--very-dark-blue-color)}.bg-white[_ngcontent-%COMP%]   header[_ngcontent-%COMP%]   .left_Content[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{font-weight:500;font-size:20px;color:var(--gray-color)}.bg-white[_ngcontent-%COMP%]   header[_ngcontent-%COMP%]   .left_Content[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{background:var(--Cyan);border-radius:50px;font-weight:500;font-size:14px;color:var(--neutral-color);padding:.5rem 1rem;border:none}.bg-white[_ngcontent-%COMP%]   header[_ngcontent-%COMP%]   .right_Content[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:100%}.bg-white[_ngcontent-%COMP%]   footer[_ngcontent-%COMP%]{background:var(--very-dark-violet-color);color:var(--neutral-color);padding:3rem 0}.bg-white[_ngcontent-%COMP%]   footer[_ngcontent-%COMP%]   .navbar-brand[_ngcontent-%COMP%]{font-weight:700;font-size:24px;line-height:36px}.bg-white[_ngcontent-%COMP%]   footer[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]{list-style-type:none;padding:0;margin:0}.bg-white[_ngcontent-%COMP%]   footer[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{font-weight:500;font-size:14px;line-height:30px}.bg-white[_ngcontent-%COMP%]   footer[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{text-decoration:none;color:var(--gray-color)}.bg-white[_ngcontent-%COMP%]   footer[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]   .head[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{color:var(--neutral-color)}.bg-white[_ngcontent-%COMP%]   footer[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover{color:var(--Cyan)!important}.bg-white[_ngcontent-%COMP%]   footer[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]:hover{background-color:var(--Cyan)!important}.bg-white[_ngcontent-%COMP%]   .btn[_ngcontent-%COMP%]:hover{opacity:.4}@media (max-width: 991px){.bg-white[_ngcontent-%COMP%]   .navbar[_ngcontent-%COMP%]   .nav-container[_ngcontent-%COMP%]{flex-direction:row-reverse!important}.bg-white[_ngcontent-%COMP%]   header[_ngcontent-%COMP%]{flex-direction:column-reverse}.bg-white[_ngcontent-%COMP%]   header[_ngcontent-%COMP%]   .left_Content[_ngcontent-%COMP%]{text-align:center}.bg-white[_ngcontent-%COMP%]   header[_ngcontent-%COMP%]   .left_Content[_ngcontent-%COMP%]   .btn[_ngcontent-%COMP%]{height:3rem;width:12rem}.bg-white[_ngcontent-%COMP%]   section[_ngcontent-%COMP%]   .link_bg_img[_ngcontent-%COMP%]   .input-group[_ngcontent-%COMP%]{flex-direction:column;gap:.5rem!important;padding:1rem!important}.bg-white[_ngcontent-%COMP%]   section[_ngcontent-%COMP%]   .link_bg_img[_ngcontent-%COMP%]   .input-group[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]{width:100%!important}.bg-white[_ngcontent-%COMP%]   section[_ngcontent-%COMP%]   .statics[_ngcontent-%COMP%]{flex-direction:column}.bg-white[_ngcontent-%COMP%]   section[_ngcontent-%COMP%]   .statics[_ngcontent-%COMP%]   .static_card[_ngcontent-%COMP%]{padding-bottom:3rem}.bg-white[_ngcontent-%COMP%]   section[_ngcontent-%COMP%]   .statics[_ngcontent-%COMP%]   .static_card[_ngcontent-%COMP%]   .diff-card[_ngcontent-%COMP%]{height:0!important;display:none!important}.bg-white[_ngcontent-%COMP%]   section[_ngcontent-%COMP%]   .statics[_ngcontent-%COMP%]   .static_card[_ngcontent-%COMP%]   .diff-card1[_ngcontent-%COMP%]{display:none!important}.bg-white[_ngcontent-%COMP%]   section[_ngcontent-%COMP%]   .statics[_ngcontent-%COMP%]   .static_card[_ngcontent-%COMP%]   .card-body[_ngcontent-%COMP%]   .icon[_ngcontent-%COMP%]{left:45%!important}.bg-white[_ngcontent-%COMP%]   section[_ngcontent-%COMP%]   .statics[_ngcontent-%COMP%]:after{border-left:1px solid var(--Cyan)!important;width:4px!important;height:47%!important;left:50%!important;transform:translate(50%);top:24%!important}.bg-white[_ngcontent-%COMP%]   section[_ngcontent-%COMP%]   .add_Short_link[_ngcontent-%COMP%]{flex-direction:column!important;align-items:center!important}.bg-white[_ngcontent-%COMP%]   section[_ngcontent-%COMP%]   .add_Short_link[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]{flex-direction:column!important}.bg-white[_ngcontent-%COMP%]   footer[_ngcontent-%COMP%]   .footer_links[_ngcontent-%COMP%]{flex-direction:column}.bg-white[_ngcontent-%COMP%]   footer[_ngcontent-%COMP%]   .footer_links[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]{text-align:center}}.dropdown_menu-9[_ngcontent-%COMP%]{animation:_ngcontent-%COMP%_growOut .3s ease-in-out forwards;transform-origin:top center}@keyframes _ngcontent-%COMP%_growOut{0%{transform:scale(0)}80%{transform:scale(1.1)}to{transform:scale(1)}}'] }) } return e })() }]; let xj = (() => { class e { static #e = this.\u0275fac = function (r) { return new (r || e) }; static #t = this.\u0275mod = yt({ type: e }); static #n = this.\u0275inj = st({ imports: [qw.forRoot(Pj, { useHash: !0 }), qw] }) } return e })(), Rj = (() => { class e { constructor() { this.title = "frontend_mentor_projects" } static #e = this.\u0275fac = function (r) { return new (r || e) }; static #t = this.\u0275cmp = vs({ type: e, selectors: [["app-root"]], decls: 1, vars: 0, template: function (r, o) { 1 & r && ze(0, "router-outlet") }, dependencies: [Of] }) } return e })(), Fj = (() => { class e { static #e = this.\u0275fac = function (r) { return new (r || e) }; static #t = this.\u0275mod = yt({ type: e, bootstrap: [Rj] }); static #n = this.\u0275inj = st({ imports: [_F, xj, Oj, QF, Tj] }) } return e })(); vF().bootstrapModule(Fj).catch(e => console.error(e)) } }, ne => { ne(ne.s = 752) }]);